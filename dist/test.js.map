{"version":3,"file":"test.js","sources":["../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/map.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/string.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/conditions.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/storage.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/set.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/array.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/object.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/function.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/environment.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/symbol.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/pair.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/dom.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/json.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/eventloop.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/math.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/metric.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/time.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/logging.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/binary.js","../node_modules/.pnpm/isomorphic.js@0.2.5/node_modules/isomorphic.js/browser.mjs","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/random.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/prng/Xorshift32.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/prng/Xoroshiro128plus.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/number.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/encoding.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/error.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/decoding.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/buffer.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/prng.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/statistics.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/promise.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/testing.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/observable.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/AbstractConnector.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/DeleteSet.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/Doc.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/UpdateDecoder.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/UpdateEncoder.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/encoding.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/EventHandler.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/ID.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/isParentOf.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/logging.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/PermanentUserData.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/RelativePosition.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/Snapshot.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/StructStore.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/Transaction.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/UndoManager.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/updates.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/utils/YEvent.js","../node_modules/.pnpm/lib0@0.2.66/node_modules/lib0/iterator.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/AbstractType.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YArray.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YMap.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YText.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YXmlFragment.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YXmlElement.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YXmlEvent.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YXmlHook.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/YXmlText.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/AbstractStruct.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/GC.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentBinary.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentDeleted.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentDoc.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentEmbed.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentFormat.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentJSON.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentAny.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentString.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/ContentType.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/Item.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/Skip.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/types/AbstractType_.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/AbstractContent_.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/structs/AbstractStruct_.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/internals.js","../node_modules/.pnpm/github.com+ObuchiYuki+yjs-typescript@4a83d21e75e6e_leoosdciibwajurf6tkn7vjbda/node_modules/yjs-typescript/dist/index.js","../src/awareness.js","../src/awareness.test.js","../src/test.js"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* c8 ignore start */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\nexport const createTextNode = text => doc.createTextNode(text)\n\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n/* c8 ignore stop */\n","/**\n * JSON utility functions.\n *\n * @module json\n */\n\n/**\n * Transform JavaScript object to JSON.\n *\n * @param {any} object\n * @return {string}\n */\nexport const stringify = JSON.stringify\n\n/**\n * Parse JSON object.\n *\n * @param {string} json\n * @return {any}\n */\nexport const parse = JSON.parse\n","/* global requestIdleCallback, requestAnimationFrame, cancelIdleCallback, cancelAnimationFrame */\n\n/**\n * Utility module to work with EcmaScript's event loop.\n *\n * @module eventloop\n */\n\n/**\n * @type {Array<function>}\n */\nlet queue = []\n\nconst _runQueue = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]()\n  }\n  queue = []\n}\n\n/**\n * @param {function():void} f\n */\nexport const enqueue = f => {\n  queue.push(f)\n  if (queue.length === 1) {\n    setTimeout(_runQueue, 0)\n  }\n}\n\n/**\n * @typedef {Object} TimeoutObject\n * @property {function} TimeoutObject.destroy\n */\n\n/**\n * @param {function(number):void} clearFunction\n */\nconst createTimeoutClass = clearFunction => class TT {\n  /**\n   * @param {number} timeoutId\n   */\n  constructor (timeoutId) {\n    this._ = timeoutId\n  }\n\n  destroy () {\n    clearFunction(this._)\n  }\n}\n\nconst Timeout = createTimeoutClass(clearTimeout)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const timeout = (timeout, callback) => new Timeout(setTimeout(callback, timeout))\n\nconst Interval = createTimeoutClass(clearInterval)\n\n/**\n * @param {number} timeout\n * @param {function} callback\n * @return {TimeoutObject}\n */\nexport const interval = (timeout, callback) => new Interval(setInterval(callback, timeout))\n\n/* c8 ignore next */\nexport const Animation = createTimeoutClass(arg => typeof requestAnimationFrame !== 'undefined' && cancelAnimationFrame(arg))\n\n/**\n * @param {function(number):void} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next */\nexport const animationFrame = cb => typeof requestAnimationFrame === 'undefined' ? timeout(0, cb) : new Animation(requestAnimationFrame(cb))\n\n/* c8 ignore next */\n// @ts-ignore\nconst Idle = createTimeoutClass(arg => typeof cancelIdleCallback !== 'undefined' && cancelIdleCallback(arg))\n\n/**\n * Note: this is experimental and is probably only useful in browsers.\n *\n * @param {function} cb\n * @return {TimeoutObject}\n */\n/* c8 ignore next 2 */\n// @ts-ignore\nexport const idleCallback = cb => typeof requestIdleCallback !== 'undefined' ? new Idle(requestIdleCallback(cb)) : timeout(1000, cb)\n\n/**\n * @param {number} timeout Timeout of the debounce action\n * @return {function(function():void):void}\n */\nexport const createDebouncer = timeout => {\n  let timer = -1\n  return f => {\n    clearTimeout(timer)\n    if (f) {\n      timer = /** @type {any} */ (setTimeout(f, timeout))\n    }\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to convert metric values.\n *\n * @module metric\n */\n\nimport * as math from './math.js'\n\nexport const yotta = 1e24\nexport const zetta = 1e21\nexport const exa = 1e18\nexport const peta = 1e15\nexport const tera = 1e12\nexport const giga = 1e9\nexport const mega = 1e6\nexport const kilo = 1e3\nexport const hecto = 1e2\nexport const deca = 10\nexport const deci = 0.1\nexport const centi = 0.01\nexport const milli = 1e-3\nexport const micro = 1e-6\nexport const nano = 1e-9\nexport const pico = 1e-12\nexport const femto = 1e-15\nexport const atto = 1e-18\nexport const zepto = 1e-21\nexport const yocto = 1e-24\n\nconst prefixUp = ['', 'k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y']\nconst prefixDown = ['', 'm', 'μ', 'n', 'p', 'f', 'a', 'z', 'y']\n\n/**\n * Calculate the metric prefix for a number. Assumes E.g. `prefix(1000) = { n: 1, prefix: 'k' }`\n *\n * @param {number} n\n * @param {number} [baseMultiplier] Multiplier of the base (10^(3*baseMultiplier)). E.g. `convert(time, -3)` if time is already in milli seconds\n * @return {{n:number,prefix:string}}\n */\nexport const prefix = (n, baseMultiplier = 0) => {\n  const nPow = n === 0 ? 0 : math.log10(n)\n  let mult = 0\n  while (nPow < mult * 3 && baseMultiplier > -8) {\n    baseMultiplier--\n    mult--\n  }\n  while (nPow >= 3 + mult * 3 && baseMultiplier < 8) {\n    baseMultiplier++\n    mult++\n  }\n  const prefix = baseMultiplier < 0 ? prefixDown[-baseMultiplier] : prefixUp[baseMultiplier]\n  return {\n    n: math.round((mult > 0 ? n / math.exp10(mult * 3) : n * math.exp10(mult * -3)) * 1e12) / 1e12,\n    prefix\n  }\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as set from './set.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n/* c8 ignore start */\nconst computeBrowserLoggingArgs = (args) => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style === undefined) {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      if (arg.constructor === Object) {\n        logArgs.push(JSON.stringify(arg))\n      } else {\n        logArgs.push(arg)\n      }\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = (args) => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\n/* c8 ignore start */\nconst computeLoggingArgs = env.supportsColor\n  ? (env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs)\n  : computeNoColorLoggingArgs\n/* c8 ignore stop */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.print(args))\n}\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach((vc) => vc.print(args))\n}\n/* c8 ignore stop */\n\n/**\n * @param {Error} err\n */\n/* c8 ignore start */\nexport const printError = (err) => {\n  console.error(err)\n  vconsoles.forEach((vc) => vc.printError(err))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n/* c8 ignore start */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log(\n      '%c                      ',\n      `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`\n    )\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach((vc) => vc.printImg(url, height))\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printImgBase64 = (base64, height) =>\n  printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* c8 ignore next */\n  vconsoles.forEach((vc) => vc.groupEnd())\n}\n\n/**\n * @param {function():Node} createNode\n */\n/* c8 ignore next 2 */\nexport const printDom = (createNode) =>\n  vconsoles.forEach((vc) => vc.printDom(createNode()))\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n/* c8 ignore next 2 */\nexport const printCanvas = (canvas, height) =>\n  printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = set.create()\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n/* c8 ignore start */\nconst _computeLineSpans = (args) => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [\n          pair.create('style', dom.mapToStyleString(currentStyle))\n        ], [dom.text(arg.toString())])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(\n        dom.element('span', [], [dom.text(/** @type {string} */ (content))])\n      )\n    }\n  }\n  return spans\n}\n/* c8 ignore stop */\n\nconst lineStyle =\n  'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* c8 ignore start */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [\n        pair.create('hidden', collapsed),\n        pair.create('style', 'color:grey;font-size:120%;')\n      ], [dom.text('▼')])\n      const triangleRight = dom.element('span', [\n        pair.create('hidden', !collapsed),\n        pair.create('style', 'color:grey;font-size:125%;')\n      ], [dom.text('▶')])\n      const content = dom.element(\n        'div',\n        [pair.create(\n          'style',\n          `${lineStyle};padding-left:${this.depth * 10}px`\n        )],\n        [triangleDown, triangleRight, dom.text(' ')].concat(\n          _computeLineSpans(args)\n        )\n      )\n      const nextContainer = dom.element('div', [\n        pair.create('hidden', collapsed)\n      ])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', (_event) => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('div', [\n          pair.create(\n            'style',\n            `${lineStyle};padding-left:${this.depth * 10}px`\n          )\n        ], _computeLineSpans(args))\n      ])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [\n        dom.element('img', [\n          pair.create('src', url),\n          pair.create('height', `${math.round(height * 1.5)}px`)\n        ])\n      ])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @param {Element} dom\n */\n/* c8 ignore next */\nexport const createVConsole = (dom) => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n      const timeNow = time.getUnixTime()\n      const timeDiff = timeNow - lastLoggingTime\n      lastLoggingTime = timeNow\n      print(\n        color,\n        moduleName,\n        UNCOLOR,\n        ...args.map((arg) =>\n          (typeof arg === 'string' || typeof arg === 'symbol')\n            ? arg\n            : JSON.stringify(arg)\n        ),\n        color,\n        ' +' + timeDiff + 'ms'\n      )\n    }\n}\n/* c8 ignore stop */\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\nexport const uint53 = () => {\n  const arr = new Uint32Array(cryptoRandomBuffer(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * @module prng\n */\n\nimport * as binary from '../binary.js'\n\n/**\n * Xorshift32 is a very simple but elegang PRNG with a period of `2^32-1`.\n */\nexport class Xorshift32 {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed\n    /**\n     * @type {number}\n     */\n    this._state = seed\n  }\n\n  /**\n   * Generate a random signed integer.\n   *\n   * @return {Number} A 32 bit signed integer.\n   */\n  next () {\n    let x = this._state\n    x ^= x << 13\n    x ^= x >> 17\n    x ^= x << 5\n    this._state = x\n    return (x >>> 0) / (binary.BITS32 + 1)\n  }\n}\n","/**\n * @module prng\n */\n\nimport { Xorshift32 } from './Xorshift32.js'\nimport * as binary from '../binary.js'\n\n/**\n * This is a variant of xoroshiro128plus - the fastest full-period generator passing BigCrush without systematic failures.\n *\n * This implementation follows the idea of the original xoroshiro128plus implementation,\n * but is optimized for the JavaScript runtime. I.e.\n * * The operations are performed on 32bit integers (the original implementation works with 64bit values).\n * * The initial 128bit state is computed based on a 32bit seed and Xorshift32.\n * * This implementation returns two 32bit values based on the 64bit value that is computed by xoroshiro128plus.\n *   Caution: The last addition step works slightly different than in the original implementation - the add carry of the\n *   first 32bit addition is not carried over to the last 32bit.\n *\n * [Reference implementation](http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c)\n */\nexport class Xoroshiro128plus {\n  /**\n   * @param {number} seed Unsigned 32 bit number\n   */\n  constructor (seed) {\n    this.seed = seed\n    // This is a variant of Xoroshiro128plus to fill the initial state\n    const xorshift32 = new Xorshift32(seed)\n    this.state = new Uint32Array(4)\n    for (let i = 0; i < 4; i++) {\n      this.state[i] = xorshift32.next() * binary.BITS32\n    }\n    this._fresh = true\n  }\n\n  /**\n   * @return {number} Float/Double in [0,1)\n   */\n  next () {\n    const state = this.state\n    if (this._fresh) {\n      this._fresh = false\n      return ((state[0] + state[2]) >>> 0) / (binary.BITS32 + 1)\n    } else {\n      this._fresh = true\n      const s0 = state[0]\n      const s1 = state[1]\n      const s2 = state[2] ^ s0\n      const s3 = state[3] ^ s1\n      // function js_rotl (x, k) {\n      //   k = k - 32\n      //   const x1 = x[0]\n      //   const x2 = x[1]\n      //   x[0] = x2 << k | x1 >>> (32 - k)\n      //   x[1] = x1 << k | x2 >>> (32 - k)\n      // }\n      // rotl(s0, 55) // k = 23 = 55 - 32; j = 9 =  32 - 23\n      state[0] = (s1 << 23 | s0 >>> 9) ^ s2 ^ (s2 << 14 | s3 >>> 18)\n      state[1] = (s0 << 23 | s1 >>> 9) ^ s3 ^ (s3 << 14)\n      // rol(s1, 36) // k = 4 = 36 - 32; j = 23 = 32 - 9\n      state[2] = s3 << 4 | s2 >>> 28\n      state[3] = s2 << 4 | s3 >>> 28\n      return (((state[1] + state[3]) >>> 0) / (binary.BITS32 + 1))\n    }\n  }\n}\n\n/*\n// Reference implementation\n// Source: http://vigna.di.unimi.it/xorshift/xoroshiro128plus.c\n// By David Blackman and Sebastiano Vigna\n// Who published the reference implementation under Public Domain (CC0)\n\n#include <stdint.h>\n#include <stdio.h>\n\nuint64_t s[2];\n\nstatic inline uint64_t rotl(const uint64_t x, int k) {\n    return (x << k) | (x >> (64 - k));\n}\n\nuint64_t next(void) {\n    const uint64_t s0 = s[0];\n    uint64_t s1 = s[1];\n    s1 ^= s0;\n    s[0] = rotl(s0, 55) ^ s1 ^ (s1 << 14); // a, b\n    s[1] = rotl(s1, 36); // c\n    return (s[0] + s[1]) & 0xFFFFFFFF;\n}\n\nint main(void)\n{\n    int i;\n    s[0] = 1111 | (1337ul << 32);\n    s[1] = 1234 | (9999ul << 32);\n\n    printf(\"1000 outputs of genrand_int31()\\n\");\n    for (i=0; i<100; i++) {\n        printf(\"%10lu \", i);\n        printf(\"%10lu \", next());\n        printf(\"- %10lu \", s[0] >> 32);\n        printf(\"%10lu \", (s[0] << 32) >> 32);\n        printf(\"%10lu \", s[1] >> 32);\n        printf(\"%10lu \", (s[1] << 32) >> 32);\n        printf(\"\\n\");\n        // if (i%5==4) printf(\"\\n\");\n    }\n    return 0;\n}\n*/\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && string.utf8TextEncoder.encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/**\n * Fast Pseudo Random Number Generators.\n *\n * Given a seed a PRNG generates a sequence of numbers that cannot be reasonably predicted.\n * Two PRNGs must generate the same random sequence of numbers if  given the same seed.\n *\n * @module prng\n */\n\nimport * as binary from './binary.js'\nimport { fromCharCode, fromCodePoint } from './string.js'\nimport * as math from './math.js'\nimport { Xoroshiro128plus } from './prng/Xoroshiro128plus.js'\nimport * as buffer from './buffer.js'\n\n/**\n * Description of the function\n *  @callback generatorNext\n *  @return {number} A random float in the cange of [0,1)\n */\n\n/**\n * A random type generator.\n *\n * @typedef {Object} PRNG\n * @property {generatorNext} next Generate new number\n */\nexport const DefaultPRNG = Xoroshiro128plus\n\n/**\n * Create a Xoroshiro128plus Pseudo-Random-Number-Generator.\n * This is the fastest full-period generator passing BigCrush without systematic failures.\n * But there are more PRNGs available in ./PRNG/.\n *\n * @param {number} seed A positive 32bit integer. Do not use negative numbers.\n * @return {PRNG}\n */\nexport const create = seed => new DefaultPRNG(seed)\n\n/**\n * Generates a single random bool.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Boolean} A random boolean\n */\nexport const bool = gen => (gen.next() >= 0.5)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const int53 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const uint53 = (gen, min, max) => math.abs(int53(gen, min, max))\n\n/**\n * Generates a random integer with 32 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const int32 = (gen, min, max) => math.floor(gen.next() * (max + 1 - min) + min)\n\n/**\n * Generates a random integer with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive).\n * @return {Number} A random integer on [min, max]\n */\nexport const uint32 = (gen, min, max) => int32(gen, min, max) >>> 0\n\n/**\n * @deprecated\n * Optimized version of prng.int32. It has the same precision as prng.int32, but should be preferred when\n * openaring on smaller ranges.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Number} min The lower bound of the allowed return values (inclusive).\n * @param {Number} max The upper bound of the allowed return values (inclusive). The max inclusive number is `binary.BITS31-1`\n * @return {Number} A random integer on [min, max]\n */\nexport const int31 = (gen, min, max) => int32(gen, min, max)\n\n/**\n * Generates a random real on [0, 1) with 53 bit resolution.\n *\n * @param {PRNG} gen A random number generator.\n * @return {Number} A random real number on [0, 1).\n */\nexport const real53 = gen => gen.next() // (((gen.next() >>> 5) * binary.BIT26) + (gen.next() >>> 6)) / MAX_SAFE_INTEGER\n\n/**\n * Generates a random character from char code 32 - 126. I.e. Characters, Numbers, special characters, and Space:\n *\n * @param {PRNG} gen A random number generator.\n * @return {string}\n *\n * (Space)!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[/]^_`abcdefghijklmnopqrstuvwxyz{|}~\n */\nexport const char = gen => fromCharCode(int31(gen, 32, 126))\n\n/**\n * @param {PRNG} gen\n * @return {string} A single letter (a-z)\n */\nexport const letter = gen => fromCharCode(int31(gen, 97, 122))\n\n/**\n * @param {PRNG} gen\n * @param {number} [minLen=0]\n * @param {number} [maxLen=20]\n * @return {string} A random word (0-20 characters) without spaces consisting of letters (a-z)\n */\nexport const word = (gen, minLen = 0, maxLen = 20) => {\n  const len = int31(gen, minLen, maxLen)\n  let str = ''\n  for (let i = 0; i < len; i++) {\n    str += letter(gen)\n  }\n  return str\n}\n\n/**\n * TODO: this function produces invalid runes. Does not cover all of utf16!!\n *\n * @param {PRNG} gen\n * @return {string}\n */\nexport const utf16Rune = gen => {\n  const codepoint = int31(gen, 0, 256)\n  return fromCodePoint(codepoint)\n}\n\n/**\n * @param {PRNG} gen\n * @param {number} [maxlen = 20]\n */\nexport const utf16String = (gen, maxlen = 20) => {\n  const len = int31(gen, 0, maxlen)\n  let str = ''\n  for (let i = 0; i < len; i++) {\n    str += utf16Rune(gen)\n  }\n  return str\n}\n\n/**\n * Returns one element of a given array.\n *\n * @param {PRNG} gen A random number generator.\n * @param {Array<T>} array Non empty Array of possible values.\n * @return {T} One of the values of the supplied Array.\n * @template T\n */\nexport const oneOf = (gen, array) => array[int31(gen, 0, array.length - 1)]\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint8Array}\n */\nexport const uint8Array = (gen, len) => {\n  const buf = buffer.createUint8ArrayFromLen(len)\n  for (let i = 0; i < buf.length; i++) {\n    buf[i] = int32(gen, 0, binary.BITS8)\n  }\n  return buf\n}\n\n/* c8 ignore start */\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint16Array}\n */\nexport const uint16Array = (gen, len) => new Uint16Array(uint8Array(gen, len * 2).buffer)\n\n/**\n * @param {PRNG} gen\n * @param {number} len\n * @return {Uint32Array}\n */\nexport const uint32Array = (gen, len) => new Uint32Array(uint8Array(gen, len * 4).buffer)\n/* c8 ignore stop */\n","/**\n * Utility helpers for generating statistics.\n *\n * @module statistics\n */\n\nimport * as math from './math.js'\n\n/**\n * @param {Array<number>} arr Array of values\n * @return {number} Returns null if the array is empty\n */\nexport const median = arr => arr.length === 0 ? NaN : (arr.length % 2 === 1 ? arr[(arr.length - 1) / 2] : (arr[math.floor((arr.length - 1) / 2)] + arr[math.ceil((arr.length - 1) / 2)]) / 2)\n\n/**\n * @param {Array<number>} arr\n * @return {number}\n */\nexport const average = arr => arr.reduce(math.add, 0) / arr.length\n","/**\n * Utility helpers to work with promises.\n *\n * @module promise\n */\n\nimport * as time from './time.js'\n\n/**\n * @template T\n * @callback PromiseResolve\n * @param {T|PromiseLike<T>} [result]\n */\n\n/**\n * @template T\n * @param {function(PromiseResolve<T>,function(Error):void):any} f\n * @return {Promise<T>}\n */\nexport const create = f => /** @type {Promise<T>} */ (new Promise(f))\n\n/**\n * @param {function(function():void,function(Error):void):void} f\n * @return {Promise<void>}\n */\nexport const createEmpty = f => new Promise(f)\n\n/**\n * `Promise.all` wait for all promises in the array to resolve and return the result\n * @template T\n * @param {Array<Promise<T>>} arrp\n * @return {Promise<Array<T>>}\n */\nexport const all = arrp => Promise.all(arrp)\n\n/**\n * @param {Error} [reason]\n * @return {Promise<never>}\n */\nexport const reject = reason => Promise.reject(reason)\n\n/**\n * @template T\n * @param {T|void} res\n * @return {Promise<T|void>}\n */\nexport const resolve = res => Promise.resolve(res)\n\n/**\n * @template T\n * @param {T} res\n * @return {Promise<T>}\n */\nexport const resolveWith = res => Promise.resolve(res)\n\n/**\n * @todo Next version, reorder parameters: check, [timeout, [intervalResolution]]\n *\n * @param {number} timeout\n * @param {function():boolean} check\n * @param {number} [intervalResolution]\n * @return {Promise<void>}\n */\nexport const until = (timeout, check, intervalResolution = 10) => create((resolve, reject) => {\n  const startTime = time.getUnixTime()\n  const hasTimeout = timeout > 0\n  const untilInterval = () => {\n    if (check()) {\n      clearInterval(intervalHandle)\n      resolve()\n    } else if (hasTimeout) {\n      /* c8 ignore else */\n      if (time.getUnixTime() - startTime > timeout) {\n        clearInterval(intervalHandle)\n        reject(new Error('Timeout'))\n      }\n    }\n  }\n  const intervalHandle = setInterval(untilInterval, intervalResolution)\n})\n\n/**\n * @param {number} timeout\n * @return {Promise<undefined>}\n */\nexport const wait = timeout => create((resolve, reject) => setTimeout(resolve, timeout))\n\n/**\n * Checks if an object is a promise using ducktyping.\n *\n * Promises are often polyfilled, so it makes sense to add some additional guarantees if the user of this\n * library has some insane environment where global Promise objects are overwritten.\n *\n * @param {any} p\n * @return {boolean}\n */\nexport const isPromise = p => p instanceof Promise || (p && p.then && p.catch && p.finally)\n","/**\n * Testing framework with support for generating tests.\n *\n * ```js\n * // test.js template for creating a test executable\n * import { runTests } from 'lib0/testing'\n * import * as log from 'lib0/logging'\n * import * as mod1 from './mod1.test.js'\n * import * as mod2 from './mod2.test.js'\n\n * import { isBrowser, isNode } from 'lib0/environment.js'\n *\n * if (isBrowser) {\n *   // optional: if this is ran in the browser, attach a virtual console to the dom\n *   log.createVConsole(document.body)\n * }\n *\n * runTests({\n *  mod1,\n *  mod2,\n * }).then(success => {\n *   if (isNode) {\n *     process.exit(success ? 0 : 1)\n *   }\n * })\n * ```\n *\n * ```js\n * // mod1.test.js\n * /**\n *  * runTests automatically tests all exported functions that start with \"test\".\n *  * The name of the function should be in camelCase and is used for the logging output.\n *  *\n *  * @param {t.TestCase} tc\n *  *\\/\n * export const testMyFirstTest = tc => {\n *   t.compare({ a: 4 }, { a: 4 }, 'objects are equal')\n * }\n * ```\n *\n * Now you can simply run `node test.js` to run your test or run test.js in the browser.\n *\n * @module testing\n */\n\nimport * as log from './logging.js'\nimport { simpleDiffString } from './diff.js'\nimport * as object from './object.js'\nimport * as string from './string.js'\nimport * as math from './math.js'\nimport * as random from './random.js'\nimport * as prng from './prng.js'\nimport * as statistics from './statistics.js'\nimport * as array from './array.js'\nimport * as env from './environment.js'\nimport * as json from './json.js'\nimport * as time from './time.js'\nimport * as promise from './promise.js'\n\nimport { performance } from './isomorphic.js'\n\nexport { production } from './environment.js'\n\nexport const extensive = env.hasConf('extensive')\n\n/* c8 ignore next */\nexport const envSeed = env.hasParam('--seed') ? Number.parseInt(env.getParam('--seed', '0')) : null\n\nexport class TestCase {\n  /**\n   * @param {string} moduleName\n   * @param {string} testName\n   */\n  constructor (moduleName, testName) {\n    /**\n     * @type {string}\n     */\n    this.moduleName = moduleName\n    /**\n     * @type {string}\n     */\n    this.testName = testName\n    this._seed = null\n    this._prng = null\n  }\n\n  resetSeed () {\n    this._seed = null\n    this._prng = null\n  }\n\n  /**\n   * @type {number}\n   */\n  /* c8 ignore next */\n  get seed () {\n    /* c8 ignore else */\n    if (this._seed === null) {\n      /* c8 ignore next */\n      this._seed = envSeed === null ? random.uint32() : envSeed\n    }\n    return this._seed\n  }\n\n  /**\n   * A PRNG for this test case. Use only this PRNG for randomness to make the test case reproducible.\n   *\n   * @type {prng.PRNG}\n   */\n  get prng () {\n    /* c8 ignore else */\n    if (this._prng === null) {\n      this._prng = prng.create(this.seed)\n    }\n    return this._prng\n  }\n}\n\nexport const repetitionTime = Number(env.getParam('--repetition-time', '50'))\n/* c8 ignore next */\nconst testFilter = env.hasParam('--filter') ? env.getParam('--filter', '') : null\n\n/* c8 ignore next */\nconst testFilterRegExp = testFilter !== null ? new RegExp(testFilter) : new RegExp('.*')\n\nconst repeatTestRegex = /^(repeat|repeating)\\s/\n\n/**\n * @param {string} moduleName\n * @param {string} name\n * @param {function(TestCase):void|Promise<any>} f\n * @param {number} i\n * @param {number} numberOfTests\n */\nexport const run = async (moduleName, name, f, i, numberOfTests) => {\n  const uncamelized = string.fromCamelCase(name.slice(4), ' ')\n  const filtered = !testFilterRegExp.test(`[${i + 1}/${numberOfTests}] ${moduleName}: ${uncamelized}`)\n  /* c8 ignore next 3 */\n  if (filtered) {\n    return true\n  }\n  const tc = new TestCase(moduleName, name)\n  const repeat = repeatTestRegex.test(uncamelized)\n  const groupArgs = [log.GREY, `[${i + 1}/${numberOfTests}] `, log.PURPLE, `${moduleName}: `, log.BLUE, uncamelized]\n  /* c8 ignore next 5 */\n  if (testFilter === null) {\n    log.groupCollapsed(...groupArgs)\n  } else {\n    log.group(...groupArgs)\n  }\n  const times = []\n  const start = performance.now()\n  let lastTime = start\n  /**\n   * @type {any}\n   */\n  let err = null\n  performance.mark(`${name}-start`)\n  do {\n    try {\n      const p = f(tc)\n      if (promise.isPromise(p)) {\n        await p\n      }\n    } catch (_err) {\n      err = _err\n    }\n    const currTime = performance.now()\n    times.push(currTime - lastTime)\n    lastTime = currTime\n    if (repeat && err === null && (lastTime - start) < repetitionTime) {\n      tc.resetSeed()\n    } else {\n      break\n    }\n  } while (err === null && (lastTime - start) < repetitionTime)\n  performance.mark(`${name}-end`)\n  /* c8 ignore next 3 */\n  if (err !== null && err.constructor !== SkipError) {\n    log.printError(err)\n  }\n  performance.measure(name, `${name}-start`, `${name}-end`)\n  log.groupEnd()\n  const duration = lastTime - start\n  let success = true\n  times.sort((a, b) => a - b)\n  /* c8 ignore next 3 */\n  const againMessage = env.isBrowser\n    ? `     - ${window.location.host + window.location.pathname}?filter=\\\\[${i + 1}/${tc._seed === null ? '' : `&seed=${tc._seed}`}`\n    : `\\nrepeat: npm run test -- --filter \"\\\\[${i + 1}/\" ${tc._seed === null ? '' : `--seed ${tc._seed}`}`\n  const timeInfo = (repeat && err === null)\n    ? ` - ${times.length} repetitions in ${time.humanizeDuration(duration)} (best: ${time.humanizeDuration(times[0])}, worst: ${time.humanizeDuration(array.last(times))}, median: ${time.humanizeDuration(statistics.median(times))}, average: ${time.humanizeDuration(statistics.average(times))})`\n    : ` in ${time.humanizeDuration(duration)}`\n  if (err !== null) {\n    /* c8 ignore start */\n    if (err.constructor === SkipError) {\n      log.print(log.GREY, log.BOLD, 'Skipped: ', log.UNBOLD, uncamelized)\n    } else {\n      success = false\n      log.print(log.RED, log.BOLD, 'Failure: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\n    }\n    /* c8 ignore stop */\n  } else {\n    log.print(log.GREEN, log.BOLD, 'Success: ', log.UNBOLD, log.UNCOLOR, uncamelized, log.GREY, timeInfo, againMessage)\n  }\n  return success\n}\n\n/**\n * Describe what you are currently testing. The message will be logged.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.describe('crunching numbers', 'already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} description\n * @param {string} info\n */\nexport const describe = (description, info = '') => log.print(log.BLUE, description, ' ', log.GREY, info)\n\n/**\n * Describe the state of the current computation.\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.info(already crunched 4 numbers!') // the optional second argument can describe the state.\n * }\n * ```\n *\n * @param {string} info\n */\nexport const info = info => describe('', info)\n\nexport const printDom = log.printDom\n\nexport const printCanvas = log.printCanvas\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):void} f\n */\nexport const group = (description, f) => {\n  log.group(log.BLUE, description)\n  try {\n    f()\n  } finally {\n    log.groupEnd()\n  }\n}\n\n/**\n * Group outputs in a collapsible category.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.group('subtest 1', () => {\n *     t.describe('this message is part of a collapsible section')\n *   })\n *   await t.groupAsync('subtest async 2', async () => {\n *     await someaction()\n *     t.describe('this message is part of a collapsible section')\n *   })\n * }\n * ```\n *\n * @param {string} description\n * @param {function(void):Promise<any>} f\n */\nexport const groupAsync = async (description, f) => {\n  log.group(log.BLUE, description)\n  try {\n    await f()\n  } finally {\n    log.groupEnd()\n  }\n}\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTime('measurement', () => {\n *     heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():void} f\n * @return {number} Returns a promise that resolves the measured duration to apply f\n */\nexport const measureTime = (message, f) => {\n  let duration\n  const start = performance.now()\n  try {\n    f()\n  } finally {\n    duration = performance.now() - start\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\n  }\n  return duration\n}\n\n/**\n * Measure the time that it takes to calculate something.\n *\n * ```js\n * export const testMyFirstTest = async tc => {\n *   t.measureTimeAsync('measurement', async () => {\n *     await heavyCalculation()\n *   })\n *   await t.groupAsync('async measurement', async () => {\n *     await heavyAsyncCalculation()\n *   })\n * }\n * ```\n *\n * @param {string} message\n * @param {function():Promise<any>} f\n * @return {Promise<number>} Returns a promise that resolves the measured duration to apply f\n */\nexport const measureTimeAsync = async (message, f) => {\n  let duration\n  const start = performance.now()\n  try {\n    await f()\n  } finally {\n    duration = performance.now() - start\n    log.print(log.PURPLE, message, log.GREY, ` ${time.humanizeDuration(duration)}`)\n  }\n  return duration\n}\n\n/**\n * @template T\n * @param {Array<T>} as\n * @param {Array<T>} bs\n * @param {string} [m]\n * @return {boolean}\n */\nexport const compareArrays = (as, bs, m = 'Arrays match') => {\n  if (as.length !== bs.length) {\n    fail(m)\n  }\n  for (let i = 0; i < as.length; i++) {\n    if (as[i] !== bs[i]) {\n      fail(m)\n    }\n  }\n  return true\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @param {string} [m]\n * @throws {TestError} Throws if tests fails\n */\nexport const compareStrings = (a, b, m = 'Strings match') => {\n  if (a !== b) {\n    const diff = simpleDiffString(a, b)\n    log.print(log.GREY, a.slice(0, diff.index), log.RED, a.slice(diff.index, diff.remove), log.GREEN, diff.insert, log.GREY, a.slice(diff.index + diff.remove))\n    fail(m)\n  }\n}\n\n/**\n * @template K,V\n * @param {Object<K,V>} a\n * @param {Object<K,V>} b\n * @param {string} [m]\n * @throws {TestError} Throws if test fails\n */\nexport const compareObjects = (a, b, m = 'Objects match') => { object.equalFlat(a, b) || fail(m) }\n\n/**\n * @param {any} _constructor\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @throws {TestError}\n */\nconst compareValues = (_constructor, a, b, path) => {\n  if (a !== b) {\n    fail(`Values ${json.stringify(a)} and ${json.stringify(b)} don't match (${path})`)\n  }\n  return true\n}\n\n/**\n * @param {string?} message\n * @param {string} reason\n * @param {string} path\n * @throws {TestError}\n */\nconst _failMessage = (message, reason, path) => fail(\n  message === null\n    ? `${reason} ${path}`\n    : `${message} (${reason}) ${path}`\n)\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {string} path\n * @param {string?} message\n * @param {function(any,any,any,string,any):boolean} customCompare\n */\nconst _compare = (a, b, path, message, customCompare) => {\n  // we don't use assert here because we want to test all branches (istanbul errors if one branch is not tested)\n  if (a == null || b == null) {\n    return compareValues(null, a, b, path)\n  }\n  if (a.constructor !== b.constructor) {\n    _failMessage(message, 'Constructors don\\'t match', path)\n  }\n  let success = true\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        _failMessage(message, 'ArrayBuffer lengths match', path)\n      }\n      for (let i = 0; success && i < a.length; i++) {\n        success = success && a[i] === b[i]\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Sets have different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach(value => {\n        if (!b.has(value)) {\n          _failMessage(message, `b.${path} does have ${value}`, path)\n        }\n      })\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        _failMessage(message, 'Maps have different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach((value, key) => {\n        if (!b.has(key)) {\n          _failMessage(message, `Property ${path}[\"${key}\"] does not exist on second argument`, path)\n        }\n        _compare(value, b.get(key), `${path}[\"${key}\"]`, message, customCompare)\n      })\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        _failMessage(message, 'Objects have a different number of attributes', path)\n      }\n      object.forEach(a, (value, key) => {\n        if (!object.hasProperty(b, key)) {\n          _failMessage(message, `Property ${path} does not exist on second argument`, path)\n        }\n        _compare(value, b[key], `${path}[\"${key}\"]`, message, customCompare)\n      })\n      break\n    case Array:\n      if (a.length !== b.length) {\n        _failMessage(message, 'Arrays have a different number of attributes', path)\n      }\n      // @ts-ignore\n      a.forEach((value, i) => _compare(value, b[i], `${path}[${i}]`, message, customCompare))\n      break\n    /* c8 ignore next 4 */\n    default:\n      if (!customCompare(a.constructor, a, b, path, compareValues)) {\n        _failMessage(message, `Values ${json.stringify(a)} and ${json.stringify(b)} don't match`, path)\n      }\n  }\n  assert(success, message)\n  return true\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @param {string?} [message]\n * @param {function(any,T,T,string,any):boolean} [customCompare]\n */\nexport const compare = (a, b, message = null, customCompare = compareValues) => _compare(a, b, 'obj', message, customCompare)\n\n/**\n * @template T\n * @param {T} property\n * @param {string?} [message]\n * @return {asserts property is NonNullable<T>}\n * @throws {TestError}\n */\n/* c8 ignore next */\nexport const assert = (property, message = null) => { property || fail(`Assertion failed${message !== null ? `: ${message}` : ''}`) }\n\n/**\n * @param {function():Promise<any>} f\n */\nexport const promiseRejected = async f => {\n  try {\n    await f()\n  } catch (err) {\n    return\n  }\n  fail('Expected promise to fail')\n}\n\n/**\n * @param {function():void} f\n * @throws {TestError}\n */\nexport const fails = f => {\n  try {\n    f()\n  } catch (_err) {\n    log.print(log.GREEN, '⇖ This Error was expected')\n    return\n  }\n  fail('Expected this to fail')\n}\n\n/**\n * @param {function():Promise<any>} f\n * @throws {TestError}\n */\nexport const failsAsync = async f => {\n  try {\n    await f()\n  } catch (_err) {\n    log.print(log.GREEN, '⇖ This Error was expected')\n    return\n  }\n  fail('Expected this to fail')\n}\n\n/**\n * @param {Object<string, Object<string, function(TestCase):void|Promise<any>>>} tests\n */\nexport const runTests = async tests => {\n  /**\n   * @param {string} testname\n   */\n  const filterTest = testname => testname.startsWith('test') || testname.startsWith('benchmark')\n  const numberOfTests = object.map(tests, mod => object.map(mod, (f, fname) => /* c8 ignore next */ f && filterTest(fname) ? 1 : 0).reduce(math.add, 0)).reduce(math.add, 0)\n  let successfulTests = 0\n  let testnumber = 0\n  const start = performance.now()\n  for (const modName in tests) {\n    const mod = tests[modName]\n    for (const fname in mod) {\n      const f = mod[fname]\n      /* c8 ignore else */\n      if (f && filterTest(fname)) {\n        const repeatEachTest = 1\n        let success = true\n        for (let i = 0; success && i < repeatEachTest; i++) {\n          success = await run(modName, fname, f, testnumber, numberOfTests)\n        }\n        testnumber++\n        /* c8 ignore else */\n        if (success) {\n          successfulTests++\n        }\n      }\n    }\n  }\n  const end = performance.now()\n  log.print('')\n  const success = successfulTests === numberOfTests\n  /* c8 ignore start */\n  if (success) {\n    log.print(log.GREEN, log.BOLD, 'All tests successful!', log.GREY, log.UNBOLD, ` in ${time.humanizeDuration(end - start)}`)\n    log.printImgBase64(nyanCatImage, 50)\n  } else {\n    const failedTests = numberOfTests - successfulTests\n    log.print(log.RED, log.BOLD, `> ${failedTests} test${failedTests > 1 ? 's' : ''} failed`)\n  }\n  /* c8 ignore stop */\n  return success\n}\n\nclass TestError extends Error {}\n\n/**\n * @param {string} reason\n * @throws {TestError}\n */\nexport const fail = reason => {\n  log.print(log.RED, log.BOLD, 'X ', log.UNBOLD, reason)\n  throw new TestError('Test Failed')\n}\n\nclass SkipError extends Error {}\n\n/**\n * @param {boolean} cond If true, this tests will be skipped\n * @throws {SkipError}\n */\nexport const skip = (cond = true) => {\n  if (cond) {\n    throw new SkipError('skipping..')\n  }\n}\n\n// eslint-disable-next-line\nconst nyanCatImage = 'R0lGODlhjABMAPcAAMiSE0xMTEzMzUKJzjQ0NFsoKPc7//FM/9mH/z9x0HIiIoKCgmBHN+frGSkZLdDQ0LCwsDk71g0KCUzDdrQQEOFz/8yYdelmBdTiHFxcXDU2erR/mLrTHCgoKK5szBQUFNgSCTk6ymfpCB9VZS2Bl+cGBt2N8kWm0uDcGXhZRUvGq94NCFPhDiwsLGVlZTgqIPMDA1g3aEzS5D6xAURERDtG9JmBjJsZGWs2AD1W6Hp6eswyDeJ4CFNTU1LcEoJRmTMzSd14CTg5ser2GmDzBd17/xkZGUzMvoSMDiEhIfKruCwNAJaWlvRzA8kNDXDrCfi0pe1U/+GS6SZrAB4eHpZwVhoabsx9oiYmJt/TGHFxcYyMjOid0+Zl/0rF6j09PeRr/0zU9DxO6j+z0lXtBtp8qJhMAEssLGhoaPL/GVn/AAsWJ/9/AE3Z/zs9/3cAAOlf/+aa2RIyADo85uhh/0i84WtrazQ0UyMlmDMzPwUFBe16BTMmHau0E03X+g8pMEAoS1MBAf++kkzO8pBaqSZoe9uB/zE0BUQ3Sv///4WFheuiyzo880gzNDIyNissBNqF/8RiAOF2qG5ubj0vL1z6Avl5ASsgGkgUSy8vL/8n/z4zJy8lOv96uEssV1csAN5ZCDQ0Wz1a3tbEGHLeDdYKCg4PATE7PiMVFSoqU83eHEi43gUPAOZ8reGogeKU5dBBC8faHEez2lHYF4bQFMukFtl4CzY3kkzBVJfMGZkAAMfSFf27mP0t//g4/9R6Dfsy/1DRIUnSAPRD/0fMAFQ0Q+l7rnbaD0vEntCDD6rSGtO8GNpUCU/MK07LPNEfC7RaABUWWkgtOst+71v9AfD7GfDw8P19ATtA/NJpAONgB9yL+fm6jzIxMdnNGJxht1/2A9x//9jHGOSX3+5tBP27l35+fk5OTvZ9AhYgTjo0PUhGSDs9+LZjCFf2Aw0IDwcVAA8PD5lwg9+Q7YaChC0kJP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh/wtYTVAgRGF0YVhNUDw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VSZWYjIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpGNEM2MUEyMzE0QTRFMTExOUQzRkE3QTBCRDNBMjdBQyIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDpERjQ0NEY0QkI2MTcxMUUxOUJEQkUzNUNGQTkwRTU2MiIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpERjQ0NEY0QUI2MTcxMUUxOUJEQkUzNUNGQTkwRTU2MiIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M1IFdpbmRvd3MiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo1OEE3RTIwRjcyQTlFMTExOTQ1QkY2QTU5QzVCQjJBOSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpGNEM2MUEyMzE0QTRFMTExOUQzRkE3QTBCRDNBMjdBQyIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PgH//v38+/r5+Pf29fTz8vHw7+7t7Ovq6ejn5uXk4+Lh4N/e3dzb2tnY19bV1NPS0dDPzs3My8rJyMfGxcTDwsHAv769vLu6ubi3trW0s7KxsK+urayrqqmop6alpKOioaCfnp2cm5qZmJeWlZSTkpGQj46NjIuKiYiHhoWEg4KBgH9+fXx7enl4d3Z1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'\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractConnector = void 0;\nconst observable_1 = require(\"lib0/observable\");\n/**\n * This is an abstract interface that all Connectors should implement to keep them interchangeable.\n *\n * @note This interface is experimental and it is not advised to actually inherit this class.\n *             It just serves as typing information.\n *\n * @extends {Observable<any>}\n */\nclass AbstractConnector extends observable_1.Observable {\n    constructor(ydoc, awareness) {\n        super();\n        this.doc = ydoc;\n        this.awareness = awareness;\n    }\n}\nexports.AbstractConnector = AbstractConnector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readAndApplyDeleteSet = exports.readDeleteSet = exports.writeDeleteSet = exports.createDeleteSetFromStructStore = exports.createDeleteSet = exports.addToDeleteSet = exports.mergeDeleteSets = exports.sortAndMergeDeleteSet = exports.isDeleted = exports.findIndexDS = exports.iterateDeletedStructs = exports.DeleteSet = exports.DeleteItem = void 0;\nconst internals_1 = require(\"../internals\");\nconst array = require(\"lib0/array\");\nconst math = require(\"lib0/math\");\nconst map = require(\"lib0/map\");\nconst encoding = require(\"lib0/encoding\");\nconst decoding = require(\"lib0/decoding\");\nclass DeleteItem {\n    /**\n     * @param {number} clock\n     * @param {number} len\n     */\n    constructor(clock, len) {\n        /**\n         * @type {number}\n         */\n        this.clock = clock;\n        /**\n         * @type {number}\n         */\n        this.len = len;\n    }\n}\nexports.DeleteItem = DeleteItem;\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *     - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nclass DeleteSet {\n    constructor() {\n        /**\n         * @type {Map<number,Array<DeleteItem>>}\n         */\n        this.clients = new Map();\n    }\n}\nexports.DeleteSet = DeleteSet;\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateDeletedStructs = (transaction, ds, f) => ds.clients.forEach((deletes, clientid) => {\n    const structs = (transaction.doc.store.clients.get(clientid));\n    for (let i = 0; i < deletes.length; i++) {\n        const del = deletes[i];\n        (0, internals_1.iterateStructs)(transaction, structs, del.clock, del.len, f);\n    }\n});\nexports.iterateDeletedStructs = iterateDeletedStructs;\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nconst findIndexDS = (dis, clock) => {\n    let left = 0;\n    let right = dis.length - 1;\n    while (left <= right) {\n        const midindex = math.floor((left + right) / 2);\n        const mid = dis[midindex];\n        const midclock = mid.clock;\n        if (midclock <= clock) {\n            if (clock < midclock + mid.len) {\n                return midindex;\n            }\n            left = midindex + 1;\n        }\n        else {\n            right = midindex - 1;\n        }\n    }\n    return null;\n};\nexports.findIndexDS = findIndexDS;\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nconst isDeleted = (ds, id) => {\n    const dis = ds.clients.get(id.client);\n    return dis !== undefined && (0, exports.findIndexDS)(dis, id.clock) !== null;\n};\nexports.isDeleted = isDeleted;\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst sortAndMergeDeleteSet = (ds) => {\n    ds.clients.forEach(dels => {\n        dels.sort((a, b) => a.clock - b.clock);\n        // merge items without filtering or splicing the array\n        // i is the current pointer\n        // j refers to the current insert position for the pointed item\n        // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n        let i, j;\n        for (i = 1, j = 1; i < dels.length; i++) {\n            const left = dels[j - 1];\n            const right = dels[i];\n            if (left.clock + left.len >= right.clock) {\n                left.len = math.max(left.len, right.clock + right.len - left.clock);\n            }\n            else {\n                if (j < i) {\n                    dels[j] = right;\n                }\n                j++;\n            }\n        }\n        dels.length = j;\n    });\n};\nexports.sortAndMergeDeleteSet = sortAndMergeDeleteSet;\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nconst mergeDeleteSets = (dss) => {\n    const merged = new DeleteSet();\n    for (let dssI = 0; dssI < dss.length; dssI++) {\n        dss[dssI].clients.forEach((delsLeft, client) => {\n            if (!merged.clients.has(client)) {\n                // Write all missing keys from current ds and all following.\n                // If merged already contains `client` current ds has already been added.\n                /**\n                 * @type {Array<DeleteItem>}\n                 */\n                const dels = delsLeft.slice();\n                for (let i = dssI + 1; i < dss.length; i++) {\n                    array.appendTo(dels, dss[i].clients.get(client) || []);\n                }\n                merged.clients.set(client, dels);\n            }\n        });\n    }\n    (0, exports.sortAndMergeDeleteSet)(merged);\n    return merged;\n};\nexports.mergeDeleteSets = mergeDeleteSets;\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nconst addToDeleteSet = (ds, client, clock, length) => {\n    map.setIfUndefined(ds.clients, client, () => [])\n        .push(new DeleteItem(clock, length));\n};\nexports.addToDeleteSet = addToDeleteSet;\nconst createDeleteSet = () => new DeleteSet();\nexports.createDeleteSet = createDeleteSet;\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nconst createDeleteSetFromStructStore = (ss) => {\n    const ds = (0, exports.createDeleteSet)();\n    ss.clients.forEach((structs, client) => {\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dsitems = [];\n        for (let i = 0; i < structs.length; i++) {\n            const struct = structs[i];\n            if (struct.deleted) {\n                const clock = struct.id.clock;\n                let len = struct.length;\n                if (i + 1 < structs.length) {\n                    for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n                        len += next.length;\n                    }\n                }\n                dsitems.push(new DeleteItem(clock, len));\n            }\n        }\n        if (dsitems.length > 0) {\n            ds.clients.set(client, dsitems);\n        }\n    });\n    return ds;\n};\nexports.createDeleteSetFromStructStore = createDeleteSetFromStructStore;\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nconst writeDeleteSet = (encoder, ds) => {\n    encoding.writeVarUint(encoder.restEncoder, ds.clients.size);\n    // Ensure that the delete set is written in a deterministic order\n    array.from(ds.clients.entries())\n        .sort((a, b) => b[0] - a[0])\n        .forEach(([client, dsitems]) => {\n        encoder.resetDsCurVal();\n        encoding.writeVarUint(encoder.restEncoder, client);\n        const len = dsitems.length;\n        encoding.writeVarUint(encoder.restEncoder, len);\n        for (let i = 0; i < len; i++) {\n            const item = dsitems[i];\n            encoder.writeDsClock(item.clock);\n            encoder.writeDsLen(item.len);\n        }\n    });\n};\nexports.writeDeleteSet = writeDeleteSet;\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nconst readDeleteSet = (decoder) => {\n    const ds = new DeleteSet();\n    const numClients = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numClients; i++) {\n        decoder.resetDsCurVal();\n        const client = decoding.readVarUint(decoder.restDecoder);\n        const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n        if (numberOfDeletes > 0) {\n            const dsField = map.setIfUndefined(ds.clients, client, () => []);\n            for (let i = 0; i < numberOfDeletes; i++) {\n                dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()));\n            }\n        }\n    }\n    return ds;\n};\nexports.readDeleteSet = readDeleteSet;\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nconst readAndApplyDeleteSet = (decoder, transaction, store) => {\n    const unappliedDS = new DeleteSet();\n    const numClients = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numClients; i++) {\n        decoder.resetDsCurVal();\n        const client = decoding.readVarUint(decoder.restDecoder);\n        const numberOfDeletes = decoding.readVarUint(decoder.restDecoder);\n        const structs = store.clients.get(client) || [];\n        const state = (0, internals_1.getState)(store, client);\n        for (let i = 0; i < numberOfDeletes; i++) {\n            const clock = decoder.readDsClock();\n            const clockEnd = clock + decoder.readDsLen();\n            if (clock < state) {\n                if (state < clockEnd) {\n                    (0, exports.addToDeleteSet)(unappliedDS, client, state, clockEnd - state);\n                }\n                let index = (0, internals_1.findIndexSS)(structs, clock);\n                /**\n                 * We can ignore the case of GC and Delete structs, because we are going to skip them\n                 * @type {Item}\n                 */\n                // @ts-ignore\n                let struct = structs[index];\n                // split the first item if necessary\n                if (!struct.deleted && struct.id.clock < clock) {\n                    structs.splice(index + 1, 0, (0, internals_1.splitItem)(transaction, struct, clock - struct.id.clock));\n                    index++; // increase we now want to use the next struct\n                }\n                while (index < structs.length) {\n                    // @ts-ignore\n                    struct = structs[index++];\n                    if (struct.id.clock < clockEnd) {\n                        if (!struct.deleted) {\n                            if (clockEnd < struct.id.clock + struct.length) {\n                                structs.splice(index, 0, (0, internals_1.splitItem)(transaction, struct, clockEnd - struct.id.clock));\n                            }\n                            struct.delete(transaction);\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                (0, exports.addToDeleteSet)(unappliedDS, client, clock, clockEnd - clock);\n            }\n        }\n    }\n    if (unappliedDS.clients.size > 0) {\n        const ds = new internals_1.UpdateEncoderV2();\n        encoding.writeVarUint(ds.restEncoder, 0); // encode 0 structs\n        (0, exports.writeDeleteSet)(ds, unappliedDS);\n        return ds.toUint8Array();\n    }\n    return null;\n};\nexports.readAndApplyDeleteSet = readAndApplyDeleteSet;\n","\"use strict\";\n/**\n * @module Y\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Doc = exports.generateNewClientId = void 0;\nconst internals_1 = require(\"../internals\");\nconst observable_1 = require(\"lib0/observable\");\nconst random = require(\"lib0/random\");\nconst map = require(\"lib0/map\");\nconst array = require(\"lib0/array\");\nconst promise = require(\"lib0/promise\");\nexports.generateNewClientId = random.uint32;\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nclass Doc extends observable_1.Observable {\n    /**\n     * @param {DocOpts} opts configuration\n     */\n    constructor({ guid = random.uuidv4(), collectionid = null, gc = true, gcFilter = () => true, meta = null, autoLoad = false, shouldLoad = true } = {}) {\n        super();\n        this.gc = gc;\n        this.gcFilter = gcFilter;\n        this.clientID = (0, exports.generateNewClientId)();\n        this.guid = guid;\n        this.collectionid = collectionid;\n        /**\n         * @type {Map<string, AbstractType<YEvent<any>>>}\n         */\n        this.share = new Map();\n        this.store = new internals_1.StructStore();\n        /**\n         * @type {Transaction | null}\n         */\n        this._transaction = null;\n        /**\n         * @type {Array<Transaction>}\n         */\n        this._transactionCleanups = [];\n        /**\n         * @type {Set<Doc>}\n         */\n        this.subdocs = new Set();\n        /**\n         * If this document is a subdocument - a document integrated into another document - then _item is defined.\n         * @type {Item?}\n         */\n        this._item = null;\n        this.shouldLoad = shouldLoad;\n        this.autoLoad = autoLoad;\n        this.meta = meta;\n        /**\n         * This is set to true when the persistence provider loaded the document from the database or when the `sync` event fires.\n         * Note that not all providers implement this feature. Provider authors are encouraged to fire the `load` event when the doc content is loaded from the database.\n         *\n         * @type {boolean}\n         */\n        this.isLoaded = false;\n        /**\n         * This is set to true when the connection provider has successfully synced with a backend.\n         * Note that when using peer-to-peer providers this event may not provide very useful.\n         * Also note that not all providers implement this feature. Provider authors are encouraged to fire\n         * the `sync` event when the doc has been synced (with `true` as a parameter) or if connection is\n         * lost (with false as a parameter).\n         */\n        this.isSynced = false;\n        /**\n         * Promise that resolves once the document has been loaded from a presistence provider.\n         */\n        this.whenLoaded = promise.create(resolve => {\n            this.on('load', () => {\n                this.isLoaded = true;\n                resolve(this);\n            });\n        });\n        const provideSyncedPromise = () => new Promise(resolve => {\n            /**\n             * @param {boolean} isSynced\n             */\n            const eventHandler = (isSynced) => {\n                if (isSynced === undefined || isSynced === true) {\n                    this.off('sync', eventHandler);\n                    resolve();\n                }\n            };\n            this.on('sync', eventHandler);\n        });\n        this.on('sync', (isSynced) => {\n            if (isSynced === false && this.isSynced) {\n                this.whenSynced = provideSyncedPromise();\n            }\n            this.isSynced = isSynced === undefined || isSynced === true;\n            if (!this.isLoaded) {\n                this.emit('load', []);\n            }\n        });\n        /**\n         * Promise that resolves once the document has been synced with a backend.\n         * This promise is recreated when the connection is lost.\n         * Note the documentation about the `isSynced` property.\n         */\n        this.whenSynced = provideSyncedPromise();\n    }\n    /**\n     * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n     *\n     * `load()` might be used in the future to request any provider to load the most current data.\n     *\n     * It is safe to call `load()` multiple times.\n     */\n    load() {\n        const item = this._item;\n        if (item !== null && !this.shouldLoad) {\n            (0, internals_1.transact)(item.parent.doc, transaction => {\n                transaction.subdocsLoaded.add(this);\n            }, null, true);\n        }\n        this.shouldLoad = true;\n    }\n    getSubdocs() {\n        return this.subdocs;\n    }\n    getSubdocGuids() {\n        return new Set(array.from(this.subdocs).map(doc => doc.guid));\n    }\n    /**\n     * Changes that happen inside of a transaction are bundled. This means that\n     * the observer fires _after_ the transaction is finished and that all changes\n     * that happened inside of the transaction are sent as one message to the\n     * other peers.\n     *\n     * @param {function(Transaction):void} f The function that should be executed as a transaction\n     * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n     *\n     * @public\n     */\n    transact(f, origin = null) {\n        (0, internals_1.transact)(this, f, origin);\n    }\n    /**\n     * Define a shared data type.\n     *\n     * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n     * and do not overwrite each other. I.e.\n     * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n     *\n     * After this method is called, the type is also available on `y.share.get(name)`.\n     *\n     * *Best Practices:*\n     * Define all types right after the Yjs instance is created and store them in a separate object.\n     * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n     *\n     * @example\n     *     const y = new Y(..)\n     *     const appState = {\n     *         document: y.getText('document')\n     *         comments: y.getArray('comments')\n     *     }\n     *\n     * @param {string} name\n     * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n     * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n     *\n     * @public\n     */\n    get(name, TypeConstructor = internals_1.AbstractType) {\n        const type = map.setIfUndefined(this.share, name, () => {\n            // @ts-ignore\n            const t = new TypeConstructor();\n            t._integrate(this, null);\n            return t;\n        });\n        const Constr = type.constructor;\n        if (TypeConstructor !== internals_1.AbstractType && Constr !== TypeConstructor) {\n            if (Constr === internals_1.AbstractType) {\n                // @ts-ignore\n                const t = new TypeConstructor();\n                t._map = type._map;\n                type._map.forEach(/** @param {Item?} n */ (n) => {\n                    for (; n !== null; n = n.left) {\n                        // @ts-ignore\n                        n.parent = t;\n                    }\n                });\n                t._start = type._start;\n                for (let n = t._start; n !== null; n = n.right) {\n                    n.parent = t;\n                }\n                t._length = type._length;\n                this.share.set(name, t);\n                t._integrate(this, null);\n                return t;\n            }\n            else {\n                throw new Error(`Type with the name ${name} has already been defined with a different constructor`);\n            }\n        }\n        return type;\n    }\n    /**\n     * @template T\n     * @param {string} [name]\n     * @return {YArray<T>}\n     *\n     * @public\n     */\n    getArray(name = '') {\n        // @ts-ignore\n        return this.get(name, internals_1.YArray);\n    }\n    /**\n     * @param {string} [name]\n     * @return {YText}\n     *\n     * @public\n     */\n    getText(name = '') {\n        // @ts-ignore\n        return this.get(name, internals_1.YText);\n    }\n    /**\n     * @template T\n     * @param {string} [name]\n     * @return {YMap<T>}\n     *\n     * @public\n     */\n    getMap(name = '') {\n        // @ts-ignore\n        return this.get(name, internals_1.YMap);\n    }\n    /**\n     * @param {string} [name]\n     * @return {YXmlFragment}\n     *\n     * @public\n     */\n    getXmlFragment(name = '') {\n        // @ts-ignore\n        return this.get(name, internals_1.YXmlFragment);\n    }\n    /**\n     * Converts the entire document into a js object, recursively traversing each yjs type\n     * Doesn't log types that have not been defined (using ydoc.getType(..)).\n     *\n     * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n     *\n     * @return {Object<string, any>}\n     */\n    toJSON() {\n        /**\n         * @type {Object<string, any>}\n         */\n        const doc = {};\n        this.share.forEach((value, key) => {\n            doc[key] = value.toJSON();\n        });\n        return doc;\n    }\n    /**\n     * Emit `destroy` event and unregister all event handlers.\n     */\n    destroy() {\n        array.from(this.subdocs).forEach(subdoc => subdoc.destroy());\n        const item = this._item;\n        if (item !== null) {\n            this._item = null;\n            const content = item.content;\n            content.doc = new Doc(Object.assign(Object.assign({ guid: this.guid }, content.opts), { shouldLoad: false }));\n            content.doc._item = item;\n            (0, internals_1.transact)(item.parent.doc, transaction => {\n                const doc = content.doc;\n                if (!item.deleted) {\n                    transaction.subdocsAdded.add(doc);\n                }\n                transaction.subdocsRemoved.add(this);\n            }, null, true);\n        }\n        this.emit('destroyed', [true]);\n        this.emit('destroy', [this]);\n        super.destroy();\n    }\n    /**\n     * @param {string} eventName\n     * @param {function(...any):any} f\n     */\n    on(eventName, f) {\n        super.on(eventName, f);\n    }\n    /**\n     * @param {string} eventName\n     * @param {function} f\n     */\n    off(eventName, f) {\n        super.off(eventName, f);\n    }\n}\nexports.Doc = Doc;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateDecoderV2 = exports.DSDecoderV2 = exports.UpdateDecoderV1 = exports.DSDecoderV1 = void 0;\nconst buffer = require(\"lib0/buffer\");\nconst decoding = require(\"lib0/decoding\");\nconst internals_1 = require(\"../internals\");\nclass DSDecoderV1 {\n    constructor(decoder) {\n        this.restDecoder = decoder;\n    }\n    resetDsCurVal() { }\n    readDsClock() {\n        return decoding.readVarUint(this.restDecoder);\n    }\n    readDsLen() {\n        return decoding.readVarUint(this.restDecoder);\n    }\n}\nexports.DSDecoderV1 = DSDecoderV1;\nclass UpdateDecoderV1 extends DSDecoderV1 {\n    readLeftID() {\n        return (0, internals_1.createID)(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder));\n    }\n    readRightID() {\n        return (0, internals_1.createID)(decoding.readVarUint(this.restDecoder), decoding.readVarUint(this.restDecoder));\n    }\n    /**\n     * Read the next client id.\n     * Use this in favor of readID whenever possible to reduce the number of objects created.\n     */\n    readClient() {\n        return decoding.readVarUint(this.restDecoder);\n    }\n    /**\n     * @return {number} info An unsigned 8-bit integer\n     */\n    readInfo() {\n        return decoding.readUint8(this.restDecoder);\n    }\n    readString() {\n        return decoding.readVarString(this.restDecoder);\n    }\n    readParentInfo() {\n        return decoding.readVarUint(this.restDecoder) === 1;\n    }\n    readTypeRef() {\n        return decoding.readVarUint(this.restDecoder);\n    }\n    /** Write len of a struct - well suited for Opt RLE encoder. */\n    readLen() {\n        return decoding.readVarUint(this.restDecoder);\n    }\n    readAny() {\n        return decoding.readAny(this.restDecoder);\n    }\n    readBuf() {\n        return buffer.copyUint8Array(decoding.readVarUint8Array(this.restDecoder));\n    }\n    /** Legacy implementation uses JSON parse. We use any-decoding in v2. */\n    readJSON() {\n        return JSON.parse(decoding.readVarString(this.restDecoder));\n    }\n    readKey() {\n        return decoding.readVarString(this.restDecoder);\n    }\n}\nexports.UpdateDecoderV1 = UpdateDecoderV1;\nclass DSDecoderV2 {\n    constructor(decoder) {\n        this.dsCurrVal = 0;\n        this.restDecoder = decoder;\n    }\n    resetDsCurVal() {\n        this.dsCurrVal = 0;\n    }\n    readDsClock() {\n        this.dsCurrVal += decoding.readVarUint(this.restDecoder);\n        return this.dsCurrVal;\n    }\n    readDsLen() {\n        const diff = decoding.readVarUint(this.restDecoder) + 1;\n        this.dsCurrVal += diff;\n        return diff;\n    }\n}\nexports.DSDecoderV2 = DSDecoderV2;\nclass UpdateDecoderV2 extends DSDecoderV2 {\n    constructor(decoder) {\n        super(decoder);\n        /**\n         * List of cached keys. If the keys[id] does not exist, we read a new key\n         * from stringEncoder and push it to keys.\n         */\n        this.keys = [];\n        decoding.readVarUint(decoder); // read feature flag - currently unused\n        this.keyClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n        this.clientDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n        this.leftClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n        this.rightClockDecoder = new decoding.IntDiffOptRleDecoder(decoding.readVarUint8Array(decoder));\n        this.infoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n        this.stringDecoder = new decoding.StringDecoder(decoding.readVarUint8Array(decoder));\n        this.parentInfoDecoder = new decoding.RleDecoder(decoding.readVarUint8Array(decoder), decoding.readUint8);\n        this.typeRefDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n        this.lenDecoder = new decoding.UintOptRleDecoder(decoding.readVarUint8Array(decoder));\n    }\n    readLeftID() {\n        return new internals_1.ID(this.clientDecoder.read(), this.leftClockDecoder.read());\n    }\n    readRightID() {\n        return new internals_1.ID(this.clientDecoder.read(), this.rightClockDecoder.read());\n    }\n    /**\n     * Read the next client id.\n     * Use this in favor of readID whenever possible to reduce the number of objects created.\n     */\n    readClient() {\n        return this.clientDecoder.read();\n    }\n    /**\n     * @return {number} info An unsigned 8-bit integer\n     */\n    readInfo() {\n        return /** @type {number} */ (this.infoDecoder.read());\n    }\n    readString() {\n        return this.stringDecoder.read();\n    }\n    readParentInfo() {\n        return this.parentInfoDecoder.read() === 1;\n    }\n    /**\n     * @return {number} An unsigned 8-bit integer\n     */\n    readTypeRef() {\n        return this.typeRefDecoder.read();\n    }\n    /**\n     * Write len of a struct - well suited for Opt RLE encoder.\n     */\n    readLen() {\n        return this.lenDecoder.read();\n    }\n    readAny() {\n        return decoding.readAny(this.restDecoder);\n    }\n    readBuf() {\n        return decoding.readVarUint8Array(this.restDecoder);\n    }\n    /**\n     * This is mainly here for legacy purposes.\n     *\n     * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n     */\n    readJSON() {\n        return decoding.readAny(this.restDecoder);\n    }\n    readKey() {\n        const keyClock = this.keyClockDecoder.read();\n        if (keyClock < this.keys.length) {\n            return this.keys[keyClock];\n        }\n        else {\n            const key = this.stringDecoder.read();\n            this.keys.push(key);\n            return key;\n        }\n    }\n}\nexports.UpdateDecoderV2 = UpdateDecoderV2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateEncoderV2 = exports.DSEncoderV2 = exports.UpdateEncoderV1 = exports.DSEncoderV1 = void 0;\nconst error = require(\"lib0/error\");\nconst encoding = require(\"lib0/encoding\");\nclass DSEncoderV1 {\n    constructor() {\n        this.restEncoder = encoding.createEncoder();\n    }\n    toUint8Array() {\n        return encoding.toUint8Array(this.restEncoder);\n    }\n    resetDsCurVal() {\n        // nop\n    }\n    writeDsClock(clock) {\n        encoding.writeVarUint(this.restEncoder, clock);\n    }\n    writeDsLen(len) {\n        encoding.writeVarUint(this.restEncoder, len);\n    }\n}\nexports.DSEncoderV1 = DSEncoderV1;\nclass UpdateEncoderV1 extends DSEncoderV1 {\n    writeLeftID(id) {\n        encoding.writeVarUint(this.restEncoder, id.client);\n        encoding.writeVarUint(this.restEncoder, id.clock);\n    }\n    writeRightID(id) {\n        encoding.writeVarUint(this.restEncoder, id.client);\n        encoding.writeVarUint(this.restEncoder, id.clock);\n    }\n    /** Use writeClient and writeClock instead of writeID if possible. */\n    writeClient(client) {\n        encoding.writeVarUint(this.restEncoder, client);\n    }\n    /**\n     * @param {number} info An unsigned 8-bit integer\n     */\n    writeInfo(info) {\n        encoding.writeUint8(this.restEncoder, info);\n    }\n    writeString(s) {\n        encoding.writeVarString(this.restEncoder, s);\n    }\n    /**\n     * @param {boolean} isYKey\n     */\n    writeParentInfo(isYKey) {\n        encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0);\n    }\n    /**\n     * @param {number} info An unsigned 8-bit integer\n     */\n    writeTypeRef(info) {\n        encoding.writeVarUint(this.restEncoder, info);\n    }\n    /**\n     * Write len of a struct - well suited for Opt RLE encoder.\n     *\n     * @param {number} len\n     */\n    writeLen(len) {\n        encoding.writeVarUint(this.restEncoder, len);\n    }\n    /**\n     * @param {any} any\n     */\n    writeAny(any) {\n        encoding.writeAny(this.restEncoder, any);\n    }\n    /**\n     * @param {Uint8Array} buf\n     */\n    writeBuf(buf) {\n        encoding.writeVarUint8Array(this.restEncoder, buf);\n    }\n    /**\n     * @param {any} embed\n     */\n    writeJSON(embed) {\n        encoding.writeVarString(this.restEncoder, JSON.stringify(embed));\n    }\n    /**\n     * @param {string} key\n     */\n    writeKey(key) {\n        encoding.writeVarString(this.restEncoder, key);\n    }\n}\nexports.UpdateEncoderV1 = UpdateEncoderV1;\nclass DSEncoderV2 {\n    constructor() {\n        this.dsCurrVal = 0;\n        this.restEncoder = encoding.createEncoder(); // encodes all the rest / non-optimized\n    }\n    toUint8Array() {\n        return encoding.toUint8Array(this.restEncoder);\n    }\n    resetDsCurVal() {\n        this.dsCurrVal = 0;\n    }\n    /**\n     * @param {number} clock\n     */\n    writeDsClock(clock) {\n        const diff = clock - this.dsCurrVal;\n        this.dsCurrVal = clock;\n        encoding.writeVarUint(this.restEncoder, diff);\n    }\n    /**\n     * @param {number} len\n     */\n    writeDsLen(len) {\n        if (len === 0) {\n            error.unexpectedCase();\n        }\n        encoding.writeVarUint(this.restEncoder, len - 1);\n        this.dsCurrVal += len;\n    }\n}\nexports.DSEncoderV2 = DSEncoderV2;\nclass UpdateEncoderV2 extends DSEncoderV2 {\n    constructor() {\n        super();\n        this.keyMap = new Map();\n        this.keyClock = 0;\n        this.keyClockEncoder = new encoding.IntDiffOptRleEncoder();\n        this.clientEncoder = new encoding.UintOptRleEncoder();\n        this.leftClockEncoder = new encoding.IntDiffOptRleEncoder();\n        this.rightClockEncoder = new encoding.IntDiffOptRleEncoder();\n        this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n        this.stringEncoder = new encoding.StringEncoder();\n        this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8);\n        this.typeRefEncoder = new encoding.UintOptRleEncoder();\n        this.lenEncoder = new encoding.UintOptRleEncoder();\n    }\n    toUint8Array() {\n        const encoder = encoding.createEncoder();\n        encoding.writeVarUint(encoder, 0); // this is a feature flag that we might use in the future\n        encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder));\n        encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder));\n        encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array());\n        encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array());\n        // @note The rest encoder is appended! (note the missing var)\n        encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder));\n        return encoding.toUint8Array(encoder);\n    }\n    writeLeftID(id) {\n        this.clientEncoder.write(id.client);\n        this.leftClockEncoder.write(id.clock);\n    }\n    writeRightID(id) {\n        this.clientEncoder.write(id.client);\n        this.rightClockEncoder.write(id.clock);\n    }\n    writeClient(client) {\n        this.clientEncoder.write(client);\n    }\n    /**\n     * @param {number} info An unsigned 8-bit integer\n     */\n    writeInfo(info) {\n        this.infoEncoder.write(info);\n    }\n    writeString(s) {\n        this.stringEncoder.write(s);\n    }\n    writeParentInfo(isYKey) {\n        this.parentInfoEncoder.write(isYKey ? 1 : 0);\n    }\n    /**\n     * @param {number} info An unsigned 8-bit integer\n     */\n    writeTypeRef(info) {\n        this.typeRefEncoder.write(info);\n    }\n    /** Write len of a struct - well suited for Opt RLE encoder. */\n    writeLen(len) {\n        this.lenEncoder.write(len);\n    }\n    writeAny(any) {\n        encoding.writeAny(this.restEncoder, any);\n    }\n    writeBuf(buf) {\n        encoding.writeVarUint8Array(this.restEncoder, buf);\n    }\n    /**\n     * This is mainly here for legacy purposes.\n     *\n     * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n     */\n    writeJSON(embed) {\n        encoding.writeAny(this.restEncoder, embed);\n    }\n    /**\n     * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n     * occur very often. For a 3d application, the key `position` might occur very often.\n     *\n     * We cache these keys in a Map and refer to them via a unique number.\n     */\n    writeKey(key) {\n        const clock = this.keyMap.get(key);\n        if (clock === undefined) {\n            /**\n             * @todo uncomment to introduce this feature finally\n             *\n             * Background. The ContentFormat object was always encoded using writeKey, but the decoder used to use readString.\n             * Furthermore, I forgot to set the keyclock. So everything was working fine.\n             *\n             * However, this feature here is basically useless as it is not being used (it actually only consumes extra memory).\n             *\n             * I don't know yet how to reintroduce this feature..\n             *\n             * Older clients won't be able to read updates when we reintroduce this feature. So this should probably be done using a flag.\n             *\n             */\n            // this.keyMap.set(key, this.keyClock)\n            this.keyClockEncoder.write(this.keyClock++);\n            this.stringEncoder.write(key);\n        }\n        else {\n            this.keyClockEncoder.write(clock);\n        }\n    }\n}\nexports.UpdateEncoderV2 = UpdateEncoderV2;\n","\"use strict\";\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeStateVector = exports.encodeStateVectorV2 = exports.writeDocumentStateVector = exports.writeStateVector = exports.decodeStateVector = exports.readStateVector = exports.encodeStateAsUpdate = exports.encodeStateAsUpdateV2 = exports.writeStateAsUpdate = exports.applyUpdate = exports.applyUpdateV2 = exports.readUpdate = exports.readUpdateV2 = exports.writeStructsFromTransaction = exports.readClientsStructRefs = exports.writeClientsStructs = void 0;\nconst internals_1 = require(\"../internals\");\nconst encoding = require(\"lib0/encoding\");\nconst decoding = require(\"lib0/decoding\");\nconst binary = require(\"lib0/binary\");\nconst map = require(\"lib0/map\");\nconst math = require(\"lib0/math\");\nconst array = require(\"lib0/array\");\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n    // write first id\n    clock = math.max(clock, structs[0].id.clock); // make sure the first id exists\n    const startNewStructs = (0, internals_1.findIndexSS)(structs, clock);\n    // write # encoded structs\n    encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs);\n    encoder.writeClient(client);\n    encoding.writeVarUint(encoder.restEncoder, clock);\n    const firstStruct = structs[startNewStructs];\n    // write first struct with an offset\n    firstStruct.write(encoder, clock - firstStruct.id.clock);\n    for (let i = startNewStructs + 1; i < structs.length; i++) {\n        structs[i].write(encoder, 0);\n    }\n};\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nconst writeClientsStructs = (encoder, store, _sm) => {\n    // we filter all valid _sm entries into sm\n    const sm = new Map();\n    _sm.forEach((clock, client) => {\n        // only write if new structs are available\n        if ((0, internals_1.getState)(store, client) > clock) {\n            sm.set(client, clock);\n        }\n    });\n    (0, internals_1.getStateVector)(store).forEach((clock, client) => {\n        if (!_sm.has(client)) {\n            sm.set(client, 0);\n        }\n    });\n    // write # states that were updated\n    encoding.writeVarUint(encoder.restEncoder, sm.size);\n    // Write items with higher client ids first\n    // This heavily improves the conflict algorithm.\n    array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n        // @ts-ignore\n        writeStructs(encoder, store.clients.get(client), client, clock);\n    });\n};\nexports.writeClientsStructs = writeClientsStructs;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nconst readClientsStructRefs = (decoder, doc) => {\n    /**\n     * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n     */\n    const clientRefs = map.create();\n    const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numOfStateUpdates; i++) {\n        const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n        /**\n         * @type {Array<GC|Item>}\n         */\n        const refs = new Array(numberOfStructs);\n        const client = decoder.readClient();\n        let clock = decoding.readVarUint(decoder.restDecoder);\n        // const start = performance.now()\n        clientRefs.set(client, { i: 0, refs });\n        for (let i = 0; i < numberOfStructs; i++) {\n            const info = decoder.readInfo();\n            switch (binary.BITS5 & info) {\n                case 0: { // GC\n                    const len = decoder.readLen();\n                    refs[i] = new internals_1.GC((0, internals_1.createID)(client, clock), len);\n                    clock += len;\n                    break;\n                }\n                case 10: { // Skip Struct (nothing to apply)\n                    // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n                    const len = decoding.readVarUint(decoder.restDecoder);\n                    refs[i] = new internals_1.Skip((0, internals_1.createID)(client, clock), len);\n                    clock += len;\n                    break;\n                }\n                default: { // Item with content\n                    /**\n                     * The optimized implementation doesn't use any variables because inlining variables is faster.\n                     * Below a non-optimized version is shown that implements the basic algorithm with\n                     * a few comments\n                     */\n                    const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n                    // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n                    // and we read the next string as parentYKey.\n                    // It indicates how we store/retrieve parent from `y.share`\n                    // @type {string|null}\n                    const struct = new internals_1.Item((0, internals_1.createID)(client, clock), null, // leftd\n                    (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n                    null, // right\n                    (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n                    cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n                    cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n                    (0, internals_1.readItemContent)(decoder, info) // item content\n                    );\n                    /* A non-optimized implementation of the above algorithm:\n\n                    // The item that was originally to the left of this item.\n                    const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n                    // The item that was originally to the right of this item.\n                    const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n                    const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n                    const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n                    // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n                    // and we read the next string as parentYKey.\n                    // It indicates how we store/retrieve parent from `y.share`\n                    // @type {string|null}\n                    const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n                    const struct = new Item(\n                        createID(client, clock),\n                        null, // leftd\n                        origin, // origin\n                        null, // right\n                        rightOrigin, // right origin\n                        cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n                        cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n                        readItemContent(decoder, info) // item content\n                    )\n                    */\n                    refs[i] = struct;\n                    clock += struct.length;\n                }\n            }\n        }\n        // console.log('time to read: ', performance.now() - start) // @todo remove\n    }\n    return clientRefs;\n};\nexports.readClientsStructRefs = readClientsStructRefs;\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n    /**\n     * @type {Array<Item | GC>}\n     */\n    const stack = [];\n    // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n    let clientsStructRefsIds = array.from(clientsStructRefs.keys()).sort((a, b) => a - b);\n    if (clientsStructRefsIds.length === 0) {\n        return null;\n    }\n    const getNextStructTarget = () => {\n        if (clientsStructRefsIds.length === 0) {\n            return null;\n        }\n        let nextStructsTarget = clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]);\n        while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n            clientsStructRefsIds.pop();\n            if (clientsStructRefsIds.length > 0) {\n                nextStructsTarget = (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]));\n            }\n            else {\n                return null;\n            }\n        }\n        return nextStructsTarget;\n    };\n    let curStructsTarget = getNextStructTarget();\n    if (curStructsTarget === null && stack.length === 0) {\n        return null;\n    }\n    /**\n     * @type {StructStore}\n     */\n    const restStructs = new internals_1.StructStore();\n    const missingSV = new Map();\n    /**\n     * @param {number} client\n     * @param {number} clock\n     */\n    const updateMissingSv = (client, clock) => {\n        const mclock = missingSV.get(client);\n        if (mclock == null || mclock > clock) {\n            missingSV.set(client, clock);\n        }\n    };\n    /**\n     * @type {GC|Item}\n     */\n    let stackHead = curStructsTarget.refs[curStructsTarget.i++];\n    // caching the state because it is used very often\n    const state = new Map();\n    const addStackToRestSS = () => {\n        for (const item of stack) {\n            const client = item.id.client;\n            const unapplicableItems = clientsStructRefs.get(client);\n            if (unapplicableItems) {\n                // decrement because we weren't able to apply previous operation\n                unapplicableItems.i--;\n                restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i));\n                clientsStructRefs.delete(client);\n                unapplicableItems.i = 0;\n                unapplicableItems.refs = [];\n            }\n            else {\n                // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n                restStructs.clients.set(client, [item]);\n            }\n            // remove client from clientsStructRefsIds to prevent users from applying the same update again\n            clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client);\n        }\n        stack.length = 0;\n    };\n    // iterate over all struct readers until we are done\n    while (true) {\n        if (stackHead.constructor !== internals_1.Skip) {\n            const localClock = map.setIfUndefined(state, stackHead.id.client, () => (0, internals_1.getState)(store, stackHead.id.client));\n            const offset = localClock - stackHead.id.clock;\n            if (offset < 0) {\n                // update from the same client is missing\n                stack.push(stackHead);\n                updateMissingSv(stackHead.id.client, stackHead.id.clock - 1);\n                // hid a dead wall, add all items from stack to restSS\n                addStackToRestSS();\n            }\n            else {\n                const missing = stackHead.getMissing(transaction, store);\n                if (missing !== null) {\n                    stack.push(stackHead);\n                    // get the struct reader that has the missing struct\n                    /**\n                     * @type {{ refs: Array<GC|Item>, i: number }}\n                     */\n                    const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 };\n                    if (structRefs.refs.length === structRefs.i) {\n                        // This update message causally depends on another update message that doesn't exist yet\n                        updateMissingSv(/** @type {number} */ (missing), (0, internals_1.getState)(store, missing));\n                        addStackToRestSS();\n                    }\n                    else {\n                        stackHead = structRefs.refs[structRefs.i++];\n                        continue;\n                    }\n                }\n                else if (offset === 0 || offset < stackHead.length) {\n                    // all fine, apply the stackhead\n                    stackHead.integrate(transaction, offset);\n                    state.set(stackHead.id.client, stackHead.id.clock + stackHead.length);\n                }\n            }\n        }\n        // iterate to next stackHead\n        if (stack.length > 0) {\n            stackHead = (stack.pop());\n        }\n        else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n            stackHead = (curStructsTarget.refs[curStructsTarget.i++]);\n        }\n        else {\n            curStructsTarget = getNextStructTarget();\n            if (curStructsTarget === null) {\n                // we are done!\n                break;\n            }\n            else {\n                stackHead = (curStructsTarget.refs[curStructsTarget.i++]);\n            }\n        }\n    }\n    if (restStructs.clients.size > 0) {\n        const encoder = new internals_1.UpdateEncoderV2();\n        (0, exports.writeClientsStructs)(encoder, restStructs, new Map());\n        // write empty deleteset\n        // writeDeleteSet(encoder, new DeleteSet())\n        encoding.writeVarUint(encoder.restEncoder, 0); // => no need for an extra function call, just write 0 deletes\n        return { missing: missingSV, update: encoder.toUint8Array() };\n    }\n    return null;\n};\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst writeStructsFromTransaction = (encoder, transaction) => (0, exports.writeClientsStructs)(encoder, transaction.doc.store, transaction.beforeState);\nexports.writeStructsFromTransaction = writeStructsFromTransaction;\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nconst readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new internals_1.UpdateDecoderV2(decoder)) => (0, internals_1.transact)(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false;\n    let retry = false;\n    const doc = transaction.doc;\n    const store = doc.store;\n    // let start = performance.now()\n    const ss = (0, exports.readClientsStructRefs)(structDecoder, doc);\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss);\n    const pending = store.pendingStructs;\n    if (pending) {\n        // check if we can apply something\n        for (const [client, clock] of pending.missing) {\n            if (clock < (0, internals_1.getState)(store, client)) {\n                retry = true;\n                break;\n            }\n        }\n        if (restStructs) {\n            // merge restStructs into store.pending\n            for (const [client, clock] of restStructs.missing) {\n                const mclock = pending.missing.get(client);\n                if (mclock == null || mclock > clock) {\n                    pending.missing.set(client, clock);\n                }\n            }\n            pending.update = (0, internals_1.mergeUpdatesV2)([pending.update, restStructs.update]);\n        }\n    }\n    else {\n        store.pendingStructs = restStructs;\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = (0, internals_1.readAndApplyDeleteSet)(structDecoder, transaction, store);\n    if (store.pendingDs) {\n        // @todo we could make a lower-bound state-vector check as we do above\n        const pendingDSUpdate = new internals_1.UpdateDecoderV2(decoding.createDecoder(store.pendingDs));\n        decoding.readVarUint(pendingDSUpdate.restDecoder); // read 0 structs, because we only encode deletes in pendingdsupdate\n        const dsRest2 = (0, internals_1.readAndApplyDeleteSet)(pendingDSUpdate, transaction, store);\n        if (dsRest && dsRest2) {\n            // case 1: ds1 != null && ds2 != null\n            store.pendingDs = (0, internals_1.mergeUpdatesV2)([dsRest, dsRest2]);\n        }\n        else {\n            // case 2: ds1 != null\n            // case 3: ds2 != null\n            // case 4: ds1 == null && ds2 == null\n            store.pendingDs = dsRest || dsRest2;\n        }\n    }\n    else {\n        // Either dsRest == null && pendingDs == null OR dsRest != null\n        store.pendingDs = dsRest;\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n        const update = store.pendingStructs.update;\n        store.pendingStructs = null;\n        (0, exports.applyUpdateV2)(transaction.doc, update);\n    }\n}, transactionOrigin, false);\nexports.readUpdateV2 = readUpdateV2;\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst readUpdate = (decoder, ydoc, transactionOrigin) => (0, exports.readUpdateV2)(decoder, ydoc, transactionOrigin, new internals_1.UpdateDecoderV1(decoder));\nexports.readUpdate = readUpdate;\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nconst applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = internals_1.UpdateDecoderV2) => {\n    const decoder = decoding.createDecoder(update);\n    (0, exports.readUpdateV2)(decoder, ydoc, transactionOrigin, new YDecoder(decoder));\n};\nexports.applyUpdateV2 = applyUpdateV2;\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nconst applyUpdate = (ydoc, update, transactionOrigin) => (0, exports.applyUpdateV2)(ydoc, update, transactionOrigin, internals_1.UpdateDecoderV1);\nexports.applyUpdate = applyUpdate;\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nconst writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n    (0, exports.writeClientsStructs)(encoder, doc.store, targetStateVector);\n    (0, internals_1.writeDeleteSet)(encoder, (0, internals_1.createDeleteSetFromStructStore)(doc.store));\n};\nexports.writeStateAsUpdate = writeStateAsUpdate;\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new internals_1.UpdateEncoderV2()) => {\n    const targetStateVector = (0, exports.decodeStateVector)(encodedTargetStateVector);\n    (0, exports.writeStateAsUpdate)(encoder, doc, targetStateVector);\n    const updates = [encoder.toUint8Array()];\n    // also add the pending updates (if there are any)\n    if (doc.store.pendingDs) {\n        updates.push(doc.store.pendingDs);\n    }\n    if (doc.store.pendingStructs) {\n        updates.push((0, internals_1.diffUpdateV2)(doc.store.pendingStructs.update, encodedTargetStateVector));\n    }\n    if (updates.length > 1) {\n        if (encoder.constructor === internals_1.UpdateEncoderV1) {\n            return (0, internals_1.mergeUpdates)(updates.map((update, i) => i === 0 ? update : (0, internals_1.convertUpdateFormatV2ToV1)(update)));\n        }\n        else if (encoder.constructor === internals_1.UpdateEncoderV2) {\n            return (0, internals_1.mergeUpdatesV2)(updates);\n        }\n    }\n    return updates[0];\n};\nexports.encodeStateAsUpdateV2 = encodeStateAsUpdateV2;\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateAsUpdate = (doc, encodedTargetStateVector) => {\n    return (0, exports.encodeStateAsUpdateV2)(doc, encodedTargetStateVector, new internals_1.UpdateEncoderV1());\n};\nexports.encodeStateAsUpdate = encodeStateAsUpdate;\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst readStateVector = (decoder) => {\n    const ss = new Map();\n    const ssLength = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < ssLength; i++) {\n        const client = decoding.readVarUint(decoder.restDecoder);\n        const clock = decoding.readVarUint(decoder.restDecoder);\n        ss.set(client, clock);\n    }\n    return ss;\n};\nexports.readStateVector = readStateVector;\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nconst decodeStateVector = (decodedState) => (0, exports.readStateVector)(new internals_1.DSDecoderV1(decoding.createDecoder(decodedState)));\nexports.decodeStateVector = decodeStateVector;\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nconst writeStateVector = (encoder, sv) => {\n    encoding.writeVarUint(encoder.restEncoder, sv.size);\n    array.from(sv.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n        encoding.writeVarUint(encoder.restEncoder, client); // @todo use a special client decoder that is based on mapping\n        encoding.writeVarUint(encoder.restEncoder, clock);\n    });\n    return encoder;\n};\nexports.writeStateVector = writeStateVector;\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nconst writeDocumentStateVector = (encoder, doc) => (0, exports.writeStateVector)(encoder, (0, internals_1.getStateVector)(doc.store));\nexports.writeDocumentStateVector = writeDocumentStateVector;\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVectorV2 = (doc, encoder = new internals_1.DSEncoderV2()) => {\n    if (doc instanceof Map) {\n        (0, exports.writeStateVector)(encoder, doc);\n    }\n    else {\n        (0, exports.writeDocumentStateVector)(encoder, doc);\n    }\n    return encoder.toUint8Array();\n};\nexports.encodeStateVectorV2 = encodeStateVectorV2;\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nconst encodeStateVector = (doc) => (0, exports.encodeStateVectorV2)(doc, new internals_1.DSEncoderV1());\nexports.encodeStateVector = encodeStateVector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callEventHandlerListeners = exports.removeAllEventHandlerListeners = exports.removeEventHandlerListener = exports.addEventHandlerListener = exports.createEventHandler = exports.EventHandler = void 0;\nconst f = require(\"lib0/function\");\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nclass EventHandler {\n    constructor() {\n        this.l = [];\n        this.l = [];\n    }\n}\nexports.EventHandler = EventHandler;\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nconst createEventHandler = () => new EventHandler();\nexports.createEventHandler = createEventHandler;\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nconst addEventHandlerListener = (eventHandler, f) => eventHandler.l.push(f);\nexports.addEventHandlerListener = addEventHandlerListener;\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                                         {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nconst removeEventHandlerListener = (eventHandler, f) => {\n    const l = eventHandler.l;\n    const len = l.length;\n    eventHandler.l = l.filter(g => f !== g);\n    if (len === eventHandler.l.length) {\n        console.error('[yjs] Tried to remove event handler that doesn\\'t exist.');\n    }\n};\nexports.removeEventHandlerListener = removeEventHandlerListener;\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nconst removeAllEventHandlerListeners = (eventHandler) => {\n    eventHandler.l.length = 0;\n};\nexports.removeAllEventHandlerListeners = removeAllEventHandlerListeners;\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nconst callEventHandlerListeners = (eventHandler, arg0, arg1) => {\n    return f.callAll(eventHandler.l, [arg0, arg1]);\n};\nexports.callEventHandlerListeners = callEventHandlerListeners;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findRootTypeKey = exports.readID = exports.writeID = exports.createID = exports.compareIDs = exports.ID = void 0;\nconst decoding = require(\"lib0/decoding\");\nconst encoding = require(\"lib0/encoding\");\nconst error = require(\"lib0/error\");\nclass ID {\n    /**\n     * @param {number} client client id\n     * @param {number} clock unique per client id, continuous number\n     */\n    constructor(client, clock) {\n        this.client = client;\n        this.clock = clock;\n    }\n}\nexports.ID = ID;\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareIDs = (a, b) => {\n    return a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock);\n};\nexports.compareIDs = compareIDs;\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nconst createID = (client, clock) => {\n    return new ID(client, clock);\n};\nexports.createID = createID;\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nconst writeID = (encoder, id) => {\n    encoding.writeVarUint(encoder, id.client);\n    encoding.writeVarUint(encoder, id.clock);\n};\nexports.writeID = writeID;\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nconst readID = (decoder) => (0, exports.createID)(decoding.readVarUint(decoder), decoding.readVarUint(decoder));\nexports.readID = readID;\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nconst findRootTypeKey = (type) => {\n    // @ts-ignore _y must be defined, otherwise unexpected case\n    for (const [key, value] of type.doc.share.entries()) {\n        if (value === type) {\n            return key;\n        }\n    }\n    throw error.unexpectedCase();\n};\nexports.findRootTypeKey = findRootTypeKey;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isParentOf = void 0;\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nconst isParentOf = (parent, child) => {\n    while (child !== null) {\n        if (child.parent === parent) {\n            return true;\n        }\n        child = child.parent._item;\n    }\n    return false;\n};\nexports.isParentOf = isParentOf;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logType = void 0;\n/**\n * Convenient helper to log type information.\n *\n * Do not use in productive systems as the output can be immense!\n *\n * @param {AbstractType<any>} type\n */\nconst logType = (type) => {\n    const res = [];\n    let n = type._start;\n    while (n) {\n        res.push(n);\n        n = n.right;\n    }\n    console.log('Children: ', res);\n    console.log('Children content: ', res.filter(m => !m.deleted).map(m => m.content));\n};\nexports.logType = logType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PermanentUserData = void 0;\nconst internals_1 = require(\"../internals\");\nconst decoding = require(\"lib0/decoding\");\nclass PermanentUserData {\n    /**\n     * @param {Doc} doc\n     * @param {YMap<any>} [storeType]\n     */\n    constructor(doc, storeType = doc.getMap('users')) {\n        const dss = new Map();\n        this.yusers = storeType;\n        this.doc = doc;\n        this.clients = new Map();\n        this.dss = dss;\n        /**\n         * @param {YMap<any>} user\n         * @param {string} userDescription\n         */\n        const initUser = (user, userDescription) => {\n            /**\n             * @type {YArray<Uint8Array>}\n             */\n            const ds = user.get('ds');\n            const ids = user.get('ids');\n            const addClientId = (clientid) => this.clients.set(clientid, userDescription);\n            ds.observe((event) => {\n                event.changes.added.forEach(item => {\n                    item.content.getContent().forEach(encodedDs => {\n                        if (encodedDs instanceof Uint8Array) {\n                            this.dss.set(userDescription, (0, internals_1.mergeDeleteSets)([this.dss.get(userDescription) || (0, internals_1.createDeleteSet)(), (0, internals_1.readDeleteSet)(new internals_1.DSDecoderV1(decoding.createDecoder(encodedDs)))]));\n                        }\n                    });\n                });\n            });\n            this.dss.set(userDescription, (0, internals_1.mergeDeleteSets)(ds.map((encodedDs) => (0, internals_1.readDeleteSet)(new internals_1.DSDecoderV1(decoding.createDecoder(encodedDs))))));\n            ids.observe((event) => event.changes.added.forEach(item => item.content.getContent().forEach(addClientId)));\n            ids.forEach(addClientId);\n        };\n        // observe users\n        storeType.observe(event => {\n            event.keysChanged.forEach(userDescription => initUser(storeType.get(userDescription), userDescription));\n        });\n        // add intial data\n        storeType.forEach(initUser);\n    }\n    /**\n     * @param {Doc} doc\n     * @param {number} clientid\n     * @param {string} userDescription\n     * @param {Object} conf\n     * @param {function(Transaction, DeleteSet):boolean} [conf.filter]\n     */\n    setUserMapping(doc, clientid, userDescription, { filter = () => true } = {}) {\n        const users = this.yusers;\n        let user = users.get(userDescription);\n        if (!user) {\n            user = new internals_1.YMap();\n            user.set('ids', new internals_1.YArray());\n            user.set('ds', new internals_1.YArray());\n            users.set(userDescription, user);\n        }\n        user.get('ids').push([clientid]);\n        users.observe(_event => {\n            setTimeout(() => {\n                const userOverwrite = users.get(userDescription);\n                if (userOverwrite !== user) {\n                    // user was overwritten, port all data over to the next user object\n                    // @todo Experiment with Y.Sets here\n                    user = userOverwrite;\n                    // @todo iterate over old type\n                    this.clients.forEach((_userDescription, clientid) => {\n                        if (userDescription === _userDescription) {\n                            user.get('ids').push([clientid]);\n                        }\n                    });\n                    const encoder = new internals_1.DSEncoderV1();\n                    const ds = this.dss.get(userDescription);\n                    if (ds) {\n                        (0, internals_1.writeDeleteSet)(encoder, ds);\n                        user.get('ds').push([encoder.toUint8Array()]);\n                    }\n                }\n            }, 0);\n        });\n        doc.on('afterTransaction', (transaction) => {\n            setTimeout(() => {\n                const yds = user.get('ds');\n                const ds = transaction.deleteSet;\n                if (transaction.local && ds.clients.size > 0 && filter(transaction, ds)) {\n                    const encoder = new internals_1.DSEncoderV1();\n                    (0, internals_1.writeDeleteSet)(encoder, ds);\n                    yds.push([encoder.toUint8Array()]);\n                }\n            });\n        });\n    }\n    /**\n     * @param {number} clientid\n     * @return {any}\n     */\n    getUserByClientId(clientid) {\n        return this.clients.get(clientid) || null;\n    }\n    /**\n     * @param {ID} id\n     * @return {string | null}\n     */\n    getUserByDeletedId(id) {\n        for (const [userDescription, ds] of this.dss.entries()) {\n            if ((0, internals_1.isDeleted)(ds, id)) {\n                return userDescription;\n            }\n        }\n        return null;\n    }\n}\nexports.PermanentUserData = PermanentUserData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compareRelativePositions = exports.createAbsolutePositionFromRelativePosition = exports.decodeRelativePosition = exports.readRelativePosition = exports.encodeRelativePosition = exports.writeRelativePosition = exports.createRelativePositionFromTypeIndex = exports.createRelativePosition = exports.createAbsolutePosition = exports.AbsolutePosition = exports.createRelativePositionFromJSON = exports.relativePositionToJSON = exports.RelativePosition = void 0;\nconst internals_1 = require(\"../internals\");\nconst encoding = require(\"lib0/encoding\");\nconst decoding = require(\"lib0/decoding\");\nconst error = require(\"lib0/error\");\n/**\n * A relative position is based on the Yjs model and is not affected by document changes.\n * E.g. If you place a relative position before a certain character, it will always point to this character.\n * If you place a relative position at the end of a type, it will always point to the end of the type.\n *\n * A numeric position is often unsuited for user selections, because it does not change when content is inserted\n * before or after.\n *\n * ```Insert(0, 'x')('a|bc') = 'xa|bc'``` Where | is the relative position.\n *\n * One of the properties must be defined.\n *\n * @example\n *     // Current cursor position is at position 10\n *     const relativePosition = createRelativePositionFromIndex(yText, 10)\n *     // modify yText\n *     yText.insert(0, 'abc')\n *     yText.delete(3, 10)\n *     // Compute the cursor position\n *     const absolutePosition = createAbsolutePositionFromRelativePosition(y, relativePosition)\n *     absolutePosition.type === yText // => true\n *     console.log('cursor location is ' + absolutePosition.index) // => cursor location is 3\n *\n */\nclass RelativePosition {\n    /**\n     * @param {ID|null} type\n     * @param {string|null} tname\n     * @param {ID|null} item\n     * @param {number} assoc\n     */\n    constructor(type, tname, item, assoc = 0) {\n        this.type = type;\n        this.tname = tname;\n        this.item = item;\n        /**\n         * A relative position is associated to a specific character. By default\n         * assoc >= 0, the relative position is associated to the character\n         * after the meant position.\n         * I.e. position 1 in 'ab' is associated to character 'b'.\n         *\n         * If assoc < 0, then the relative position is associated to the caharacter\n         * before the meant position.\n         */\n        this.assoc = assoc;\n    }\n}\nexports.RelativePosition = RelativePosition;\n/**\n * @param {RelativePosition} rpos\n * @return {any}\n */\nconst relativePositionToJSON = (rpos) => {\n    const json = {};\n    if (rpos.type) {\n        json.type = rpos.type;\n    }\n    if (rpos.tname) {\n        json.tname = rpos.tname;\n    }\n    if (rpos.item) {\n        json.item = rpos.item;\n    }\n    if (rpos.assoc != null) {\n        json.assoc = rpos.assoc;\n    }\n    return json;\n};\nexports.relativePositionToJSON = relativePositionToJSON;\n/**\n * @param {any} json\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromJSON = (json) => {\n    return new RelativePosition(json.type == null ? null : (0, internals_1.createID)(json.type.client, json.type.clock), json.tname || null, json.item == null ? null : (0, internals_1.createID)(json.item.client, json.item.clock), json.assoc == null ? 0 : json.assoc);\n};\nexports.createRelativePositionFromJSON = createRelativePositionFromJSON;\nclass AbsolutePosition {\n    constructor(type, index, assoc = 0) {\n        this.type = type;\n        this.index = index;\n        this.assoc = assoc;\n    }\n}\nexports.AbsolutePosition = AbsolutePosition;\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @param {number} [assoc]\n *\n * @function\n */\nconst createAbsolutePosition = (type, index, assoc = 0) => {\n    return new AbsolutePosition(type, index, assoc);\n};\nexports.createAbsolutePosition = createAbsolutePosition;\n/**\n * @param {AbstractType<any>} type\n * @param {ID|null} item\n * @param {number} [assoc]\n *\n * @function\n */\nconst createRelativePosition = (type, item, assoc) => {\n    let typeid = null;\n    let tname = null;\n    if (type._item === null) {\n        tname = (0, internals_1.findRootTypeKey)(type);\n    }\n    else {\n        typeid = (0, internals_1.createID)(type._item.id.client, type._item.id.clock);\n    }\n    return new RelativePosition(typeid, tname, item, assoc);\n};\nexports.createRelativePosition = createRelativePosition;\n/**\n * Create a relativePosition based on a absolute position.\n *\n * @param {AbstractType<any>} type The base type (e.g. YText or YArray).\n * @param {number} index The absolute position.\n * @param {number} [assoc]\n * @return {RelativePosition}\n *\n * @function\n */\nconst createRelativePositionFromTypeIndex = (type, index, assoc = 0) => {\n    let t = type._start;\n    if (assoc < 0) {\n        // associated to the left character or the beginning of a type, increment index if possible.\n        if (index === 0) {\n            return (0, exports.createRelativePosition)(type, null, assoc);\n        }\n        index--;\n    }\n    while (t !== null) {\n        if (!t.deleted && t.countable) {\n            if (t.length > index) {\n                // case 1: found position somewhere in the linked list\n                return (0, exports.createRelativePosition)(type, (0, internals_1.createID)(t.id.client, t.id.clock + index), assoc);\n            }\n            index -= t.length;\n        }\n        if (t.right === null && assoc < 0) {\n            // left-associated position, return last available id\n            return (0, exports.createRelativePosition)(type, t.lastId, assoc);\n        }\n        t = t.right;\n    }\n    return (0, exports.createRelativePosition)(type, null, assoc);\n};\nexports.createRelativePositionFromTypeIndex = createRelativePositionFromTypeIndex;\n/**\n * @param {encoding.Encoder} encoder\n * @param {RelativePosition} rpos\n *\n * @function\n */\nconst writeRelativePosition = (encoder, rpos) => {\n    const { type, tname, item, assoc } = rpos;\n    if (item !== null) {\n        encoding.writeVarUint(encoder, 0);\n        (0, internals_1.writeID)(encoder, item);\n    }\n    else if (tname !== null) {\n        // case 2: found position at the end of the list and type is stored in y.share\n        encoding.writeUint8(encoder, 1);\n        encoding.writeVarString(encoder, tname);\n    }\n    else if (type !== null) {\n        // case 3: found position at the end of the list and type is attached to an item\n        encoding.writeUint8(encoder, 2);\n        (0, internals_1.writeID)(encoder, type);\n    }\n    else {\n        throw error.unexpectedCase();\n    }\n    encoding.writeVarInt(encoder, assoc);\n    return encoder;\n};\nexports.writeRelativePosition = writeRelativePosition;\n/**\n * @param {RelativePosition} rpos\n * @return {Uint8Array}\n */\nconst encodeRelativePosition = (rpos) => {\n    const encoder = encoding.createEncoder();\n    (0, exports.writeRelativePosition)(encoder, rpos);\n    return encoding.toUint8Array(encoder);\n};\nexports.encodeRelativePosition = encodeRelativePosition;\n/**\n * @param {decoding.Decoder} decoder\n * @return {RelativePosition}\n *\n * @function\n */\nconst readRelativePosition = (decoder) => {\n    let type = null;\n    let tname = null;\n    let itemID = null;\n    switch (decoding.readVarUint(decoder)) {\n        case 0:\n            // case 1: found position somewhere in the linked list\n            itemID = (0, internals_1.readID)(decoder);\n            break;\n        case 1:\n            // case 2: found position at the end of the list and type is stored in y.share\n            tname = decoding.readVarString(decoder);\n            break;\n        case 2: {\n            // case 3: found position at the end of the list and type is attached to an item\n            type = (0, internals_1.readID)(decoder);\n        }\n    }\n    const assoc = decoding.hasContent(decoder) ? decoding.readVarInt(decoder) : 0;\n    return new RelativePosition(type, tname, itemID, assoc);\n};\nexports.readRelativePosition = readRelativePosition;\n/**\n * @param {Uint8Array} uint8Array\n * @return {RelativePosition}\n */\nconst decodeRelativePosition = (uint8Array) => (0, exports.readRelativePosition)(decoding.createDecoder(uint8Array));\nexports.decodeRelativePosition = decodeRelativePosition;\n/**\n * @param {RelativePosition} rpos\n * @param {Doc} doc\n * @return {AbsolutePosition|null}\n *\n * @function\n */\nconst createAbsolutePositionFromRelativePosition = (rpos, doc) => {\n    const store = doc.store;\n    const rightID = rpos.item;\n    const typeID = rpos.type;\n    const tname = rpos.tname;\n    const assoc = rpos.assoc;\n    let type = null;\n    let index = 0;\n    if (rightID !== null) {\n        if ((0, internals_1.getState)(store, rightID.client) <= rightID.clock) {\n            return null;\n        }\n        const res = (0, internals_1.followRedone)(store, rightID);\n        const right = res.item;\n        if (!(right instanceof internals_1.Item)) {\n            return null;\n        }\n        type = right.parent;\n        if (type._item === null || !type._item.deleted) {\n            index = (right.deleted || !right.countable) ? 0 : (res.diff + (assoc >= 0 ? 0 : 1)); // adjust position based on left association if necessary\n            let n = right.left;\n            while (n !== null) {\n                if (!n.deleted && n.countable) {\n                    index += n.length;\n                }\n                n = n.left;\n            }\n        }\n    }\n    else {\n        if (tname !== null) {\n            type = doc.get(tname);\n        }\n        else if (typeID !== null) {\n            if ((0, internals_1.getState)(store, typeID.client) <= typeID.clock) {\n                // type does not exist yet\n                return null;\n            }\n            const { item } = (0, internals_1.followRedone)(store, typeID);\n            if (item instanceof internals_1.Item && item.content instanceof internals_1.ContentType) {\n                type = item.content.type;\n            }\n            else {\n                // struct is garbage collected\n                return null;\n            }\n        }\n        else {\n            throw error.unexpectedCase();\n        }\n        if (assoc >= 0) {\n            index = type._length;\n        }\n        else {\n            index = 0;\n        }\n    }\n    return (0, exports.createAbsolutePosition)(type, index, rpos.assoc);\n};\nexports.createAbsolutePositionFromRelativePosition = createAbsolutePositionFromRelativePosition;\n/**\n * @param {RelativePosition|null} a\n * @param {RelativePosition|null} b\n * @return {boolean}\n *\n * @function\n */\nconst compareRelativePositions = (a, b) => a === b || (a !== null && b !== null && a.tname === b.tname && (0, internals_1.compareIDs)(a.item, b.item) && (0, internals_1.compareIDs)(a.type, b.type) && a.assoc === b.assoc);\nexports.compareRelativePositions = compareRelativePositions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDocFromSnapshot = exports.splitSnapshotAffectedStructs = exports.isVisible = exports.snapshot = exports.emptySnapshot = exports.createSnapshot = exports.decodeSnapshot = exports.decodeSnapshotV2 = exports.encodeSnapshot = exports.encodeSnapshotV2 = exports.equalSnapshots = exports.Snapshot = void 0;\nconst internals_1 = require(\"../internals\");\nconst map = require(\"lib0/map\");\nconst set = require(\"lib0/set\");\nconst decoding = require(\"lib0/decoding\");\nconst encoding = require(\"lib0/encoding\");\nclass Snapshot {\n    /**\n     * @param {DeleteSet} ds\n     * @param {Map<number,number>} sv state map\n     */\n    constructor(ds, sv) {\n        this.ds = ds;\n        this.sv = sv;\n    }\n}\nexports.Snapshot = Snapshot;\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nconst equalSnapshots = (snap1, snap2) => {\n    const ds1 = snap1.ds.clients;\n    const ds2 = snap2.ds.clients;\n    const sv1 = snap1.sv;\n    const sv2 = snap2.sv;\n    if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n        return false;\n    }\n    for (const [key, value] of sv1.entries()) {\n        if (sv2.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [client, dsitems1] of ds1.entries()) {\n        const dsitems2 = ds2.get(client) || [];\n        if (dsitems1.length !== dsitems2.length) {\n            return false;\n        }\n        for (let i = 0; i < dsitems1.length; i++) {\n            const dsitem1 = dsitems1[i];\n            const dsitem2 = dsitems2[i];\n            if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\nexports.equalSnapshots = equalSnapshots;\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nconst encodeSnapshotV2 = (snapshot, encoder = new internals_1.DSEncoderV2()) => {\n    (0, internals_1.writeDeleteSet)(encoder, snapshot.ds);\n    (0, internals_1.writeStateVector)(encoder, snapshot.sv);\n    return encoder.toUint8Array();\n};\nexports.encodeSnapshotV2 = encodeSnapshotV2;\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nconst encodeSnapshot = (snapshot) => (0, exports.encodeSnapshotV2)(snapshot, new internals_1.DSEncoderV1());\nexports.encodeSnapshot = encodeSnapshot;\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nconst decodeSnapshotV2 = (buf, decoder = new internals_1.DSDecoderV2(decoding.createDecoder(buf))) => {\n    return new Snapshot((0, internals_1.readDeleteSet)(decoder), (0, internals_1.readStateVector)(decoder));\n};\nexports.decodeSnapshotV2 = decodeSnapshotV2;\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nconst decodeSnapshot = (buf) => (0, exports.decodeSnapshotV2)(buf, new internals_1.DSDecoderV1(decoding.createDecoder(buf)));\nexports.decodeSnapshot = decodeSnapshot;\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nconst createSnapshot = (ds, sm) => new Snapshot(ds, sm);\nexports.createSnapshot = createSnapshot;\nexports.emptySnapshot = (0, exports.createSnapshot)((0, internals_1.createDeleteSet)(), new Map());\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nconst snapshot = (doc) => (0, exports.createSnapshot)((0, internals_1.createDeleteSetFromStructStore)(doc.store), (0, internals_1.getStateVector)(doc.store));\nexports.snapshot = snapshot;\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nconst isVisible = (item, snapshot) => snapshot === undefined\n    ? !item.deleted\n    : snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !(0, internals_1.isDeleted)(snapshot.ds, item.id);\nexports.isVisible = isVisible;\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nconst splitSnapshotAffectedStructs = (transaction, snapshot) => {\n    const meta = map.setIfUndefined(transaction.meta, exports.splitSnapshotAffectedStructs, set.create);\n    const store = transaction.doc.store;\n    // check if we already split for this snapshot\n    if (!meta.has(snapshot)) {\n        snapshot.sv.forEach((clock, client) => {\n            if (clock < (0, internals_1.getState)(store, client)) {\n                (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(client, clock));\n            }\n        });\n        (0, internals_1.iterateDeletedStructs)(transaction, snapshot.ds, item => { });\n        meta.add(snapshot);\n    }\n};\nexports.splitSnapshotAffectedStructs = splitSnapshotAffectedStructs;\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nconst createDocFromSnapshot = (originDoc, snapshot, newDoc = new internals_1.Doc()) => {\n    if (originDoc.gc) {\n        // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n        throw new Error('originDoc must not be garbage collected');\n    }\n    const { sv, ds } = snapshot;\n    const encoder = new internals_1.UpdateEncoderV2();\n    originDoc.transact(transaction => {\n        let size = 0;\n        sv.forEach(clock => {\n            if (clock > 0) {\n                size++;\n            }\n        });\n        encoding.writeVarUint(encoder.restEncoder, size);\n        // splitting the structs before writing them to the encoder\n        for (const [client, clock] of sv) {\n            if (clock === 0) {\n                continue;\n            }\n            if (clock < (0, internals_1.getState)(originDoc.store, client)) {\n                (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(client, clock));\n            }\n            const structs = originDoc.store.clients.get(client) || [];\n            const lastStructIndex = (0, internals_1.findIndexSS)(structs, clock - 1);\n            // write # encoded structs\n            encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1);\n            encoder.writeClient(client);\n            // first clock written is 0\n            encoding.writeVarUint(encoder.restEncoder, 0);\n            for (let i = 0; i <= lastStructIndex; i++) {\n                structs[i].write(encoder, 0);\n            }\n        }\n        (0, internals_1.writeDeleteSet)(encoder, ds);\n    });\n    (0, internals_1.applyUpdateV2)(newDoc, encoder.toUint8Array(), 'snapshot');\n    return newDoc;\n};\nexports.createDocFromSnapshot = createDocFromSnapshot;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.iterateStructs = exports.replaceStruct = exports.getItemCleanEnd = exports.getItemCleanStart = exports.findIndexCleanStart = exports.getItem = exports.find = exports.findIndexSS = exports.addStruct = exports.integretyCheck = exports.getState = exports.getStateVector = exports.StructStore = void 0;\nconst internals_1 = require(\"../internals\");\nconst math = require(\"lib0/math\");\nconst error = require(\"lib0/error\");\nclass StructStore {\n    constructor() {\n        this.clients = new Map();\n        this.pendingStructs = null;\n        this.pendingDs = null;\n    }\n}\nexports.StructStore = StructStore;\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nconst getStateVector = (store) => {\n    const sm = new Map();\n    store.clients.forEach((structs, client) => {\n        const struct = structs[structs.length - 1];\n        sm.set(client, struct.id.clock + struct.length);\n    });\n    return sm;\n};\nexports.getStateVector = getStateVector;\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nconst getState = (store, client) => {\n    const structs = store.clients.get(client);\n    if (structs === undefined) {\n        return 0;\n    }\n    const lastStruct = structs[structs.length - 1];\n    return lastStruct.id.clock + lastStruct.length;\n};\nexports.getState = getState;\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nconst integretyCheck = (store) => {\n    store.clients.forEach(structs => {\n        for (let i = 1; i < structs.length; i++) {\n            const l = structs[i - 1];\n            const r = structs[i];\n            if (l.id.clock + l.length !== r.id.clock) {\n                throw new Error('StructStore failed integrety check');\n            }\n        }\n    });\n};\nexports.integretyCheck = integretyCheck;\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nconst addStruct = (store, struct) => {\n    let structs = store.clients.get(struct.id.client);\n    if (structs === undefined) {\n        structs = [];\n        store.clients.set(struct.id.client, structs);\n    }\n    else {\n        const lastStruct = structs[structs.length - 1];\n        if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n            throw error.unexpectedCase();\n        }\n    }\n    structs.push(struct);\n};\nexports.addStruct = addStruct;\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nconst findIndexSS = (structs, clock) => {\n    let left = 0;\n    let right = structs.length - 1;\n    let mid = structs[right];\n    let midclock = mid.id.clock;\n    if (midclock === clock) {\n        return right;\n    }\n    // @todo does it even make sense to pivot the search?\n    // If a good split misses, it might actually increase the time to find the correct item.\n    // Currently, the only advantage is that search with pivoting might find the item on the first try.\n    let midindex = math.floor((clock / (midclock + mid.length - 1)) * right); // pivoting the search\n    while (left <= right) {\n        mid = structs[midindex];\n        midclock = mid.id.clock;\n        if (midclock <= clock) {\n            if (clock < midclock + mid.length) {\n                return midindex;\n            }\n            left = midindex + 1;\n        }\n        else {\n            right = midindex - 1;\n        }\n        midindex = math.floor((left + right) / 2);\n    }\n    // Always check state before looking for a struct in StructStore\n    // Therefore the case of not finding a struct is unexpected\n    throw error.unexpectedCase();\n};\nexports.findIndexSS = findIndexSS;\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nconst find = (store, id) => {\n    const structs = store.clients.get(id.client);\n    return structs[(0, exports.findIndexSS)(structs, id.clock)];\n};\nexports.find = find;\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nconst getItem = (store, id) => {\n    return (0, exports.find)(store, id);\n};\nexports.getItem = getItem;\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nconst findIndexCleanStart = (transaction, structs, clock) => {\n    const index = (0, exports.findIndexSS)(structs, clock);\n    const struct = structs[index];\n    if (struct.id.clock < clock && struct instanceof internals_1.Item) {\n        structs.splice(index + 1, 0, (0, internals_1.splitItem)(transaction, struct, clock - struct.id.clock));\n        return index + 1;\n    }\n    return index;\n};\nexports.findIndexCleanStart = findIndexCleanStart;\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanStart = (transaction, id) => {\n    const structs = transaction.doc.store.clients.get(id.client);\n    return structs[(0, exports.findIndexCleanStart)(transaction, structs, id.clock)];\n};\nexports.getItemCleanStart = getItemCleanStart;\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nconst getItemCleanEnd = (transaction, store, id) => {\n    const structs = store.clients.get(id.client);\n    const index = (0, exports.findIndexSS)(structs, id.clock);\n    const struct = structs[index];\n    if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== internals_1.GC) {\n        structs.splice(index + 1, 0, (0, internals_1.splitItem)(transaction, struct, id.clock - struct.id.clock + 1));\n    }\n    return struct;\n};\nexports.getItemCleanEnd = getItemCleanEnd;\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nconst replaceStruct = (store, struct, newStruct) => {\n    const structs = store.clients.get(struct.id.client);\n    structs[(0, exports.findIndexSS)(structs, struct.id.clock)] = newStruct;\n};\nexports.replaceStruct = replaceStruct;\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nconst iterateStructs = (transaction, structs, clockStart, len, f) => {\n    if (len === 0) {\n        return;\n    }\n    const clockEnd = clockStart + len;\n    let index = (0, exports.findIndexCleanStart)(transaction, structs, clockStart);\n    let struct;\n    do {\n        struct = structs[index++];\n        if (clockEnd < struct.id.clock + struct.length) {\n            (0, exports.findIndexCleanStart)(transaction, structs, clockEnd);\n        }\n        f(struct);\n    } while (index < structs.length && structs[index].id.clock < clockEnd);\n};\nexports.iterateStructs = iterateStructs;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transact = exports.tryGc = exports.addChangedTypeToTransaction = exports.nextID = exports.writeUpdateMessageFromTransaction = exports.Transaction = void 0;\nconst internals_1 = require(\"../internals\");\nconst map = require(\"lib0/map\");\nconst math = require(\"lib0/math\");\nconst set = require(\"lib0/set\");\nconst logging = require(\"lib0/logging\");\nconst function_1 = require(\"lib0/function\");\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *     console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *     map.set('a', 1)\n *     map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nclass Transaction {\n    constructor(doc, origin, local) {\n        /** Describes the set of deleted items by ids */\n        this.deleteSet = new internals_1.DeleteSet();\n        /** Holds the state after the transaction. */\n        this.afterState = new Map();\n        /**\n         * All types that were directly modified (property added or child\n         * inserted/deleted). New types are not included in this Set.\n         * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n         */\n        this.changed = new Map();\n        /**\n         * Stores the events for the types that observe also child elements.\n         * It is mainly used by `observeDeep`.\n         */\n        this.changedParentTypes = new Map();\n        /** Stores meta information on the transaction */\n        this.meta = new Map();\n        this.subdocsAdded = new Set();\n        this.subdocsRemoved = new Set();\n        this.subdocsLoaded = new Set();\n        this._mergeStructs = [];\n        this.doc = doc;\n        this.beforeState = (0, internals_1.getStateVector)(doc.store);\n        this.origin = origin;\n        this.local = local;\n    }\n}\nexports.Transaction = Transaction;\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nconst writeUpdateMessageFromTransaction = (encoder, transaction) => {\n    if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n        return false;\n    }\n    (0, internals_1.sortAndMergeDeleteSet)(transaction.deleteSet);\n    (0, internals_1.writeStructsFromTransaction)(encoder, transaction);\n    (0, internals_1.writeDeleteSet)(encoder, transaction.deleteSet);\n    return true;\n};\nexports.writeUpdateMessageFromTransaction = writeUpdateMessageFromTransaction;\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nconst nextID = (transaction) => {\n    const y = transaction.doc;\n    return (0, internals_1.createID)(y.clientID, (0, internals_1.getState)(y.store, y.clientID));\n};\nexports.nextID = nextID;\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent<any>>} type\n * @param {string|null} parentSub\n */\nconst addChangedTypeToTransaction = (transaction, type, parentSub) => {\n    const item = type._item;\n    if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n        map.setIfUndefined(transaction.changed, type, set.create).add(parentSub);\n    }\n};\nexports.addChangedTypeToTransaction = addChangedTypeToTransaction;\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n    const left = structs[pos - 1];\n    const right = structs[pos];\n    if (left.deleted === right.deleted && left.constructor === right.constructor) {\n        if (left.mergeWith(right)) {\n            structs.splice(pos, 1);\n            if (right instanceof internals_1.Item && right.parentSub !== null && right.parent._map.get(right.parentSub) === right) {\n                right.parent._map.set(right.parentSub, left);\n            }\n        }\n    }\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n    for (const [client, deleteItems] of ds.clients.entries()) {\n        const structs = store.clients.get(client);\n        for (let di = deleteItems.length - 1; di >= 0; di--) {\n            const deleteItem = deleteItems[di];\n            const endDeleteItemClock = deleteItem.clock + deleteItem.len;\n            for (let si = (0, internals_1.findIndexSS)(structs, deleteItem.clock), struct = structs[si]; si < structs.length && struct.id.clock < endDeleteItemClock; struct = structs[++si]) {\n                const struct = structs[si];\n                if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n                    break;\n                }\n                if (struct instanceof internals_1.Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n                    struct.gc(store, false);\n                }\n            }\n        }\n    }\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n    // try to merge deleted / gc'd items\n    // merge from right to left for better efficiecy and so we don't miss any merge targets\n    ds.clients.forEach((deleteItems, client) => {\n        const structs = store.clients.get(client);\n        for (let di = deleteItems.length - 1; di >= 0; di--) {\n            const deleteItem = deleteItems[di];\n            // start with merging the item next to the last deleted item\n            const mostRightIndexToCheck = math.min(structs.length - 1, 1 + (0, internals_1.findIndexSS)(structs, deleteItem.clock + deleteItem.len - 1));\n            for (let si = mostRightIndexToCheck, struct = structs[si]; si > 0 && struct.id.clock >= deleteItem.clock; struct = structs[--si]) {\n                tryToMergeWithLeft(structs, si);\n            }\n        }\n    });\n};\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGc = (ds, store, gcFilter) => {\n    tryGcDeleteSet(ds, store, gcFilter);\n    tryMergeDeleteSet(ds, store);\n};\nexports.tryGc = tryGc;\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n    if (i < transactionCleanups.length) {\n        const transaction = transactionCleanups[i];\n        const doc = transaction.doc;\n        const store = doc.store;\n        const ds = transaction.deleteSet;\n        const mergeStructs = transaction._mergeStructs;\n        try {\n            (0, internals_1.sortAndMergeDeleteSet)(ds);\n            transaction.afterState = (0, internals_1.getStateVector)(transaction.doc.store);\n            doc.emit('beforeObserverCalls', [transaction, doc]);\n            /**\n             * An array of event callbacks.\n             *\n             * Each callback is called even if the other ones throw errors.\n             *\n             * @type {Array<function():void>}\n             */\n            const fs = [];\n            // observe events on changed types\n            transaction.changed.forEach((subs, itemtype) => fs.push(() => {\n                if (itemtype._item === null || !itemtype._item.deleted) {\n                    itemtype._callObserver(transaction, subs);\n                }\n            }));\n            fs.push(() => {\n                // deep observe events\n                transaction.changedParentTypes.forEach((events, type) => fs.push(() => {\n                    // We need to think about the possibility that the user transforms the\n                    // Y.Doc in the event.\n                    if (type._item === null || !type._item.deleted) {\n                        events = events\n                            .filter(event => event.target._item === null || !event.target._item.deleted);\n                        events\n                            .forEach(event => {\n                            event.currentTarget = type;\n                        });\n                        // sort events by path length so that top-level events are fired first.\n                        events\n                            .sort((event1, event2) => event1.path.length - event2.path.length);\n                        // We don't need to check for events.length\n                        // because we know it has at least one element\n                        (0, internals_1.callEventHandlerListeners)(type._dEH, events, transaction);\n                    }\n                }));\n                fs.push(() => doc.emit('afterTransaction', [transaction, doc]));\n            });\n            (0, function_1.callAll)(fs, []);\n        }\n        finally {\n            // Replace deleted items with ItemDeleted / GC.\n            // This is where content is actually remove from the Yjs Doc.\n            if (doc.gc) {\n                tryGcDeleteSet(ds, store, doc.gcFilter);\n            }\n            tryMergeDeleteSet(ds, store);\n            // on all affected store.clients props, try to merge\n            transaction.afterState.forEach((clock, client) => {\n                const beforeClock = transaction.beforeState.get(client) || 0;\n                if (beforeClock !== clock) {\n                    const structs = store.clients.get(client);\n                    // we iterate from right to left so we can safely remove entries\n                    const firstChangePos = math.max((0, internals_1.findIndexSS)(structs, beforeClock), 1);\n                    for (let i = structs.length - 1; i >= firstChangePos; i--) {\n                        tryToMergeWithLeft(structs, i);\n                    }\n                }\n            });\n            // try to merge mergeStructs\n            // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n            //                but at the moment DS does not handle duplicates\n            for (let i = 0; i < mergeStructs.length; i++) {\n                const { client, clock } = mergeStructs[i].id;\n                const structs = store.clients.get(client);\n                const replacedStructPos = (0, internals_1.findIndexSS)(structs, clock);\n                if (replacedStructPos + 1 < structs.length) {\n                    tryToMergeWithLeft(structs, replacedStructPos + 1);\n                }\n                if (replacedStructPos > 0) {\n                    tryToMergeWithLeft(structs, replacedStructPos);\n                }\n            }\n            if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n                logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.');\n                doc.clientID = (0, internals_1.generateNewClientId)();\n            }\n            // @todo Merge all the transactions into one and provide send the data as a single update message\n            doc.emit('afterTransactionCleanup', [transaction, doc]);\n            if (doc._observers.has('update')) {\n                const encoder = new internals_1.UpdateEncoderV1();\n                const hasContent = (0, exports.writeUpdateMessageFromTransaction)(encoder, transaction);\n                if (hasContent) {\n                    doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n                }\n            }\n            if (doc._observers.has('updateV2')) {\n                const encoder = new internals_1.UpdateEncoderV2();\n                const hasContent = (0, exports.writeUpdateMessageFromTransaction)(encoder, transaction);\n                if (hasContent) {\n                    doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction]);\n                }\n            }\n            const { subdocsAdded, subdocsLoaded, subdocsRemoved } = transaction;\n            if (subdocsAdded.size > 0 || subdocsRemoved.size > 0 || subdocsLoaded.size > 0) {\n                subdocsAdded.forEach(subdoc => {\n                    subdoc.clientID = doc.clientID;\n                    if (subdoc.collectionid == null) {\n                        subdoc.collectionid = doc.collectionid;\n                    }\n                    doc.subdocs.add(subdoc);\n                });\n                subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc));\n                doc.emit('subdocs', [{ loaded: subdocsLoaded, added: subdocsAdded, removed: subdocsRemoved }, doc, transaction]);\n                subdocsRemoved.forEach(subdoc => subdoc.destroy());\n            }\n            if (transactionCleanups.length <= i + 1) {\n                doc._transactionCleanups = [];\n                doc.emit('afterAllTransactions', [doc, transactionCleanups]);\n            }\n            else {\n                cleanupTransactions(transactionCleanups, i + 1);\n            }\n        }\n    }\n};\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nconst transact = (doc, f, origin = null, local = true) => {\n    const transactionCleanups = doc._transactionCleanups;\n    let initialCall = false;\n    if (doc._transaction === null) {\n        initialCall = true;\n        doc._transaction = new Transaction(doc, origin, local);\n        transactionCleanups.push(doc._transaction);\n        if (transactionCleanups.length === 1) {\n            doc.emit('beforeAllTransactions', [doc]);\n        }\n        doc.emit('beforeTransaction', [doc._transaction, doc]);\n    }\n    try {\n        f(doc._transaction);\n    }\n    finally {\n        if (initialCall) {\n            const finishCleanup = doc._transaction === transactionCleanups[0];\n            doc._transaction = null;\n            if (finishCleanup) {\n                // The first transaction ended, now process observer calls.\n                // Observer call may create new transactions for which we need to call the observers and do cleanup.\n                // We don't want to nest these calls, so we execute these calls one after\n                // another.\n                // Also we need to ensure that all cleanups are called, even if the\n                // observes throw errors.\n                // This file is full of hacky try {} finally {} blocks to ensure that an\n                // event can throw errors and also that the cleanup is called.\n                cleanupTransactions(transactionCleanups, 0);\n            }\n        }\n    }\n};\nexports.transact = transact;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UndoManager = void 0;\nconst internals_1 = require(\"../internals\");\nconst time = require(\"lib0/time\");\nconst array = require(\"lib0/array\");\nconst observable_1 = require(\"lib0/observable\");\nclass StackItem {\n    constructor(deletions, insertions) {\n        this.insertions = insertions;\n        this.deletions = deletions;\n        this.meta = new Map();\n    }\n}\nconst clearUndoManagerStackItem = (tr, um, stackItem) => {\n    (0, internals_1.iterateDeletedStructs)(tr, stackItem.deletions, item => {\n        if (item instanceof internals_1.Item && um.scope.some(type => (0, internals_1.isParentOf)(type, item))) {\n            (0, internals_1.keepItem)(item, false);\n        }\n    });\n};\nconst popStackItem = (undoManager, stack, eventType) => {\n    /** Whether a change happened */\n    let result = null;\n    /** Keep a reference to the transaction so we can fire the event with the changedParentTypes */\n    let _tr = null;\n    const doc = undoManager.doc;\n    const scope = undoManager.scope;\n    (0, internals_1.transact)(doc, transaction => {\n        while (stack.length > 0 && result === null) {\n            const store = doc.store;\n            const stackItem = stack.pop();\n            const itemsToRedo = new Set();\n            const itemsToDelete = [];\n            let performedChange = false;\n            (0, internals_1.iterateDeletedStructs)(transaction, stackItem.insertions, struct => {\n                if (struct instanceof internals_1.Item) {\n                    if (struct.redone !== null) {\n                        let { item, diff } = (0, internals_1.followRedone)(store, struct.id);\n                        if (diff > 0) {\n                            item = (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(item.id.client, item.id.clock + diff));\n                        }\n                        struct = item;\n                    }\n                    if (!struct.deleted && scope.some(type => (0, internals_1.isParentOf)(type, struct))) {\n                        itemsToDelete.push(struct);\n                    }\n                }\n            });\n            (0, internals_1.iterateDeletedStructs)(transaction, stackItem.deletions, struct => {\n                if (struct instanceof internals_1.Item &&\n                    scope.some(type => (0, internals_1.isParentOf)(type, struct)) &&\n                    // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n                    !(0, internals_1.isDeleted)(stackItem.insertions, struct.id)) {\n                    itemsToRedo.add(struct);\n                }\n            });\n            itemsToRedo.forEach(struct => {\n                performedChange = (0, internals_1.redoItem)(transaction, struct, itemsToRedo, stackItem.insertions, undoManager.ignoreRemoteMapChanges) !== null || performedChange;\n            });\n            // We want to delete in reverse order so that children are deleted before\n            // parents, so we have more information available when items are filtered.\n            for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n                const item = itemsToDelete[i];\n                if (undoManager.deleteFilter(item)) {\n                    item.delete(transaction);\n                    performedChange = true;\n                }\n            }\n            result = performedChange ? stackItem : null;\n        }\n        transaction.changed.forEach((subProps, type) => {\n            // destroy search marker if necessary\n            if (subProps.has(null) && type._searchMarker) {\n                type._searchMarker.length = 0;\n            }\n        });\n        _tr = transaction;\n    }, undoManager);\n    if (result != null) {\n        const changedParentTypes = _tr.changedParentTypes;\n        undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager]);\n    }\n    return result;\n};\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'|'stack-cleared'|'stack-item-updated'>}\n */\nclass UndoManager extends observable_1.Observable {\n    /**\n     * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n     * @param {UndoManagerOptions} options\n     */\n    constructor(typeScope, { captureTimeout = 500, captureTransaction = tr => true, deleteFilter = () => true, trackedOrigins = new Set([null]), ignoreRemoteMapChanges = false, doc = (array.isArray(typeScope) ? typeScope[0].doc : typeScope.doc) } = {}) {\n        super();\n        this.scope = [];\n        this.addToScope(typeScope);\n        this.deleteFilter = deleteFilter;\n        trackedOrigins.add(this);\n        this.trackedOrigins = trackedOrigins;\n        this.captureTransaction = captureTransaction;\n        this.undoStack = [];\n        this.redoStack = [];\n        /**\n         * Whether the client is currently undoing (calling UndoManager.undo)\n         *\n         * @type {boolean}\n         */\n        this.undoing = false;\n        this.redoing = false;\n        this.doc = doc;\n        this.lastChange = 0;\n        this.ignoreRemoteMapChanges = ignoreRemoteMapChanges;\n        this.captureTimeout = captureTimeout;\n        /**\n         * @param {Transaction} transaction\n         */\n        this.afterTransactionHandler = (transaction) => {\n            // Only track certain transactions\n            if (!this.captureTransaction(transaction) ||\n                !this.scope.some(type => transaction.changedParentTypes.has(type)) ||\n                (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n                return;\n            }\n            const undoing = this.undoing;\n            const redoing = this.redoing;\n            const stack = undoing ? this.redoStack : this.undoStack;\n            if (undoing) {\n                this.stopCapturing(); // next undo should not be appended to last stack item\n            }\n            else if (!redoing) {\n                // neither undoing nor redoing: delete redoStack\n                this.clear(false, true);\n            }\n            const insertions = new internals_1.DeleteSet();\n            transaction.afterState.forEach((endClock, client) => {\n                const startClock = transaction.beforeState.get(client) || 0;\n                const len = endClock - startClock;\n                if (len > 0) {\n                    (0, internals_1.addToDeleteSet)(insertions, client, startClock, len);\n                }\n            });\n            const now = time.getUnixTime();\n            let didAdd = false;\n            if (this.lastChange > 0 && now - this.lastChange < this.captureTimeout && stack.length > 0 && !undoing && !redoing) {\n                // append change to last stack op\n                const lastOp = stack[stack.length - 1];\n                lastOp.deletions = (0, internals_1.mergeDeleteSets)([lastOp.deletions, transaction.deleteSet]);\n                lastOp.insertions = (0, internals_1.mergeDeleteSets)([lastOp.insertions, insertions]);\n            }\n            else {\n                // create a new stack op\n                stack.push(new StackItem(transaction.deleteSet, insertions));\n                didAdd = true;\n            }\n            if (!undoing && !redoing) {\n                this.lastChange = now;\n            }\n            // make sure that deleted structs are not gc'd\n            (0, internals_1.iterateDeletedStructs)(transaction, transaction.deleteSet, /** @param {Item|GC} item */ /** @param {Item|GC} item */ item => {\n                if (item instanceof internals_1.Item && this.scope.some(type => (0, internals_1.isParentOf)(type, item))) {\n                    (0, internals_1.keepItem)(item, true);\n                }\n            });\n            const changeEvent = [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this];\n            if (didAdd) {\n                this.emit('stack-item-added', changeEvent);\n            }\n            else {\n                this.emit('stack-item-updated', changeEvent);\n            }\n        };\n        this.doc.on('afterTransaction', this.afterTransactionHandler);\n        this.doc.on('destroy', () => {\n            this.destroy();\n        });\n    }\n    addToScope(ytypes) {\n        ytypes = array.isArray(ytypes) ? ytypes : [ytypes];\n        ytypes.forEach(ytype => {\n            if (this.scope.every(yt => yt !== ytype)) {\n                this.scope.push(ytype);\n            }\n        });\n    }\n    addTrackedOrigin(origin) {\n        this.trackedOrigins.add(origin);\n    }\n    removeTrackedOrigin(origin) {\n        this.trackedOrigins.delete(origin);\n    }\n    clear(clearUndoStack = true, clearRedoStack = true) {\n        if ((clearUndoStack && this.canUndo()) || (clearRedoStack && this.canRedo())) {\n            this.doc.transact(tr => {\n                if (clearUndoStack) {\n                    this.undoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n                    this.undoStack = [];\n                }\n                if (clearRedoStack) {\n                    this.redoStack.forEach(item => clearUndoManagerStackItem(tr, this, item));\n                    this.redoStack = [];\n                }\n                this.emit('stack-cleared', [{ undoStackCleared: clearUndoStack, redoStackCleared: clearRedoStack }]);\n            });\n        }\n    }\n    /**\n     * UndoManager merges Undo-StackItem if they are created within time-gap\n     * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n     * StackItem won't be merged.\n     *\n     *\n     * @example\n     *         // without stopCapturing\n     *         ytext.insert(0, 'a')\n     *         ytext.insert(1, 'b')\n     *         um.undo()\n     *         ytext.toString() // => '' (note that 'ab' was removed)\n     *         // with stopCapturing\n     *         ytext.insert(0, 'a')\n     *         um.stopCapturing()\n     *         ytext.insert(0, 'b')\n     *         um.undo()\n     *         ytext.toString() // => 'a' (note that only 'b' was removed)\n     *\n     */\n    stopCapturing() {\n        this.lastChange = 0;\n    }\n    /**\n     * Undo last changes on type.\n     *\n     * @return {StackItem?} Returns StackItem if a change was applied\n     */\n    undo() {\n        this.undoing = true;\n        let res;\n        try {\n            res = popStackItem(this, this.undoStack, 'undo');\n        }\n        finally {\n            this.undoing = false;\n        }\n        return res;\n    }\n    /**\n     * Redo last undo operation.\n     *\n     * @return {StackItem?} Returns StackItem if a change was applied\n     */\n    redo() {\n        this.redoing = true;\n        let res;\n        try {\n            res = popStackItem(this, this.redoStack, 'redo');\n        }\n        finally {\n            this.redoing = false;\n        }\n        return res;\n    }\n    /**\n     * Are undo steps available?\n     *\n     * @return {boolean} `true` if undo is possible\n     */\n    canUndo() {\n        return this.undoStack.length > 0;\n    }\n    /**\n     * Are redo steps available?\n     *\n     * @return {boolean} `true` if redo is possible\n     */\n    canRedo() {\n        return this.redoStack.length > 0;\n    }\n    destroy() {\n        this.trackedOrigins.delete(this);\n        this.doc.off('afterTransaction', this.afterTransactionHandler);\n        super.destroy();\n    }\n}\nexports.UndoManager = UndoManager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertUpdateFormatV2ToV1 = exports.convertUpdateFormatV1ToV2 = exports.convertUpdateFormat = exports.diffUpdate = exports.diffUpdateV2 = exports.mergeUpdatesV2 = exports.parseUpdateMeta = exports.parseUpdateMetaV2 = exports.encodeStateVectorFromUpdate = exports.encodeStateVectorFromUpdateV2 = exports.mergeUpdates = exports.LazyStructWriter = exports.decodeUpdateV2 = exports.decodeUpdate = exports.logUpdateV2 = exports.logUpdate = exports.LazyStructReader = void 0;\nconst binary = require(\"lib0/binary\");\nconst decoding = require(\"lib0/decoding\");\nconst encoding = require(\"lib0/encoding\");\nconst logging = require(\"lib0/logging\");\nconst math = require(\"lib0/math\");\nconst internals_1 = require(\"../internals\");\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction* lazyStructReaderGenerator(decoder) {\n    const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder);\n    for (let i = 0; i < numOfStateUpdates; i++) {\n        const numberOfStructs = decoding.readVarUint(decoder.restDecoder);\n        const client = decoder.readClient();\n        let clock = decoding.readVarUint(decoder.restDecoder);\n        for (let i = 0; i < numberOfStructs; i++) {\n            const info = decoder.readInfo();\n            // @todo use switch instead of ifs\n            if (info === 10) {\n                const len = decoding.readVarUint(decoder.restDecoder);\n                yield new internals_1.Skip((0, internals_1.createID)(client, clock), len);\n                clock += len;\n            }\n            else if ((binary.BITS5 & info) !== 0) {\n                const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0;\n                // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n                // and we read the next string as parentYKey.\n                // It indicates how we store/retrieve parent from `y.share`\n                // @type {string|null}\n                const struct = new internals_1.Item((0, internals_1.createID)(client, clock), null, // left\n                (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n                null, // right\n                (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n                // @ts-ignore Force writing a string here.\n                cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n                cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n                (0, internals_1.readItemContent)(decoder, info) // item content\n                );\n                yield struct;\n                clock += struct.length;\n            }\n            else {\n                const len = decoder.readLen();\n                yield new internals_1.GC((0, internals_1.createID)(client, clock), len);\n                clock += len;\n            }\n        }\n    }\n}\nclass LazyStructReader {\n    /**\n     * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n     * @param {boolean} filterSkips\n     */\n    constructor(decoder, filterSkips) {\n        this.gen = lazyStructReaderGenerator(decoder);\n        /**\n         * @type {null | Item | Skip | GC}\n         */\n        this.curr = null;\n        this.done = false;\n        this.filterSkips = filterSkips;\n        this.next();\n    }\n    /**\n     * @return {Item | GC | Skip |null}\n     */\n    next() {\n        // ignore \"Skip\" structs\n        do {\n            this.curr = this.gen.next().value || null;\n        } while (this.filterSkips && this.curr !== null && this.curr.constructor === internals_1.Skip);\n        return this.curr;\n    }\n}\nexports.LazyStructReader = LazyStructReader;\n/**\n * @param {Uint8Array} update\n *\n */\nconst logUpdate = (update) => (0, exports.logUpdateV2)(update, internals_1.UpdateDecoderV1);\nexports.logUpdate = logUpdate;\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst logUpdateV2 = (update, YDecoder = internals_1.UpdateDecoderV2) => {\n    const structs = [];\n    const updateDecoder = new YDecoder(decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n        structs.push(curr);\n    }\n    logging.print('Structs: ', structs);\n    const ds = (0, internals_1.readDeleteSet)(updateDecoder);\n    logging.print('DeleteSet: ', ds);\n};\nexports.logUpdateV2 = logUpdateV2;\n/**\n * @param {Uint8Array} update\n *\n */\nconst decodeUpdate = (update) => (0, exports.decodeUpdateV2)(update, internals_1.UpdateDecoderV1);\nexports.decodeUpdate = decodeUpdate;\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nconst decodeUpdateV2 = (update, YDecoder = internals_1.UpdateDecoderV2) => {\n    const structs = [];\n    const updateDecoder = new YDecoder(decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n        structs.push(curr);\n    }\n    return {\n        structs,\n        ds: (0, internals_1.readDeleteSet)(updateDecoder)\n    };\n};\nexports.decodeUpdateV2 = decodeUpdateV2;\nclass LazyStructWriter {\n    /**\n     * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n     */\n    constructor(encoder) {\n        this.currClient = 0;\n        this.startClock = 0;\n        this.written = 0;\n        this.encoder = encoder;\n        /**\n         * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n         *\n         * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n         *\n         * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n         * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n         *\n         * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n         */\n        this.clientStructs = [];\n    }\n}\nexports.LazyStructWriter = LazyStructWriter;\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nconst mergeUpdates = (updates) => (0, exports.mergeUpdatesV2)(updates, internals_1.UpdateDecoderV1, internals_1.UpdateEncoderV1);\nexports.mergeUpdates = mergeUpdates;\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdateV2 = (update, YEncoder = internals_1.DSEncoderV2, YDecoder = internals_1.UpdateDecoderV2) => {\n    const encoder = new YEncoder();\n    const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n    let curr = updateDecoder.curr;\n    if (curr !== null) {\n        let size = 0;\n        let currClient = curr.id.client;\n        let stopCounting = curr.id.clock !== 0; // must start at 0\n        let currClock = stopCounting ? 0 : curr.id.clock + curr.length;\n        for (; curr !== null; curr = updateDecoder.next()) {\n            if (currClient !== curr.id.client) {\n                if (currClock !== 0) {\n                    size++;\n                    // We found a new client\n                    // write what we have to the encoder\n                    encoding.writeVarUint(encoder.restEncoder, currClient);\n                    encoding.writeVarUint(encoder.restEncoder, currClock);\n                }\n                currClient = curr.id.client;\n                currClock = 0;\n                stopCounting = curr.id.clock !== 0;\n            }\n            // we ignore skips\n            if (curr.constructor === internals_1.Skip) {\n                stopCounting = true;\n            }\n            if (!stopCounting) {\n                currClock = curr.id.clock + curr.length;\n            }\n        }\n        // write what we have\n        if (currClock !== 0) {\n            size++;\n            encoding.writeVarUint(encoder.restEncoder, currClient);\n            encoding.writeVarUint(encoder.restEncoder, currClock);\n        }\n        // prepend the size of the state vector\n        const enc = encoding.createEncoder();\n        encoding.writeVarUint(enc, size);\n        encoding.writeBinaryEncoder(enc, encoder.restEncoder);\n        encoder.restEncoder = enc;\n        return encoder.toUint8Array();\n    }\n    else {\n        encoding.writeVarUint(encoder.restEncoder, 0);\n        return encoder.toUint8Array();\n    }\n};\nexports.encodeStateVectorFromUpdateV2 = encodeStateVectorFromUpdateV2;\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nconst encodeStateVectorFromUpdate = (update) => (0, exports.encodeStateVectorFromUpdateV2)(update, internals_1.DSEncoderV1, internals_1.UpdateDecoderV1);\nexports.encodeStateVectorFromUpdate = encodeStateVectorFromUpdate;\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMetaV2 = (update, YDecoder = internals_1.UpdateDecoderV2) => {\n    /**\n     * @type {Map<number, number>}\n     */\n    const from = new Map();\n    /**\n     * @type {Map<number, number>}\n     */\n    const to = new Map();\n    const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false);\n    let curr = updateDecoder.curr;\n    if (curr !== null) {\n        let currClient = curr.id.client;\n        let currClock = curr.id.clock;\n        // write the beginning to `from`\n        from.set(currClient, currClock);\n        for (; curr !== null; curr = updateDecoder.next()) {\n            if (currClient !== curr.id.client) {\n                // We found a new client\n                // write the end to `to`\n                to.set(currClient, currClock);\n                // write the beginning to `from`\n                from.set(curr.id.client, curr.id.clock);\n                // update currClient\n                currClient = curr.id.client;\n            }\n            currClock = curr.id.clock + curr.length;\n        }\n        // write the end to `to`\n        to.set(currClient, currClock);\n    }\n    return { from, to };\n};\nexports.parseUpdateMetaV2 = parseUpdateMetaV2;\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nconst parseUpdateMeta = (update) => (0, exports.parseUpdateMetaV2)(update, internals_1.UpdateDecoderV1);\nexports.parseUpdateMeta = parseUpdateMeta;\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n    if (left.constructor === internals_1.GC) {\n        const { client, clock } = left.id;\n        return new internals_1.GC((0, internals_1.createID)(client, clock + diff), left.length - diff);\n    }\n    else if (left.constructor === internals_1.Skip) {\n        const { client, clock } = left.id;\n        return new internals_1.Skip((0, internals_1.createID)(client, clock + diff), left.length - diff);\n    }\n    else {\n        const leftItem = left;\n        const { client, clock } = leftItem.id;\n        return new internals_1.Item((0, internals_1.createID)(client, clock + diff), null, (0, internals_1.createID)(client, clock + diff - 1), null, leftItem.rightOrigin, leftItem.parent, leftItem.parentSub, leftItem.content.splice(diff));\n    }\n};\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nconst mergeUpdatesV2 = (updates, YDecoder = internals_1.UpdateDecoderV2, YEncoder = internals_1.UpdateEncoderV2) => {\n    if (updates.length === 1) {\n        return updates[0];\n    }\n    const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)));\n    let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true));\n    /**\n     * @todo we don't need offset because we always slice before\n     * @type {null | { struct: Item | GC | Skip, offset: number }}\n     */\n    let currWrite = null;\n    const updateEncoder = new YEncoder();\n    // write structs lazily\n    const lazyStructEncoder = new LazyStructWriter(updateEncoder);\n    // Note: We need to ensure that all lazyStructDecoders are fully consumed\n    // Note: Should merge document updates whenever possible - even from different updates\n    // Note: Should handle that some operations cannot be applied yet ()\n    while (true) {\n        // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n        lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null);\n        lazyStructDecoders.sort((dec1, dec2) => {\n            if (dec1.curr.id.client === dec2.curr.id.client) {\n                const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock;\n                if (clockDiff === 0) {\n                    // @todo remove references to skip since the structDecoders must filter Skips.\n                    return dec1.curr.constructor === dec2.curr.constructor\n                        ? 0\n                        : dec1.curr.constructor === internals_1.Skip ? 1 : -1; // we are filtering skips anyway.\n                }\n                else {\n                    return clockDiff;\n                }\n            }\n            else {\n                return dec2.curr.id.client - dec1.curr.id.client;\n            }\n        });\n        if (lazyStructDecoders.length === 0) {\n            break;\n        }\n        const currDecoder = lazyStructDecoders[0];\n        // write from currDecoder until the next operation is from another client or if filler-struct\n        // then we need to reorder the decoders and find the next operation to write\n        const firstClient = currDecoder.curr.id.client;\n        if (currWrite !== null) {\n            let curr = (currDecoder.curr);\n            let iterated = false;\n            // iterate until we find something that we haven't written already\n            // remember: first the high client-ids are written\n            while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n                curr = currDecoder.next();\n                iterated = true;\n            }\n            if (curr === null || // current decoder is empty\n                curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n                (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n            ) {\n                continue;\n            }\n            if (firstClient !== currWrite.struct.id.client) {\n                writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                currWrite = { struct: curr, offset: 0 };\n                currDecoder.next();\n            }\n            else {\n                if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n                    // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n                    if (currWrite.struct.constructor === internals_1.Skip) {\n                        // extend existing skip\n                        currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock;\n                    }\n                    else {\n                        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                        const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length;\n                        /**\n                         * @type {Skip}\n                         */\n                        const struct = new internals_1.Skip((0, internals_1.createID)(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff);\n                        currWrite = { struct, offset: 0 };\n                    }\n                }\n                else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n                    const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock;\n                    if (diff > 0) {\n                        if (currWrite.struct.constructor === internals_1.Skip) {\n                            // prefer to slice Skip because the other struct might contain more information\n                            currWrite.struct.length -= diff;\n                        }\n                        else {\n                            curr = sliceStruct(curr, diff);\n                        }\n                    }\n                    if (!currWrite.struct.mergeWith(curr)) {\n                        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n                        currWrite = { struct: curr, offset: 0 };\n                        currDecoder.next();\n                    }\n                }\n            }\n        }\n        else {\n            currWrite = { struct: currDecoder.curr, offset: 0 };\n            currDecoder.next();\n        }\n        for (let next = currDecoder.curr; next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== internals_1.Skip; next = currDecoder.next()) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n            currWrite = { struct: next, offset: 0 };\n        }\n    }\n    if (currWrite !== null) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset);\n        currWrite = null;\n    }\n    finishLazyStructWriting(lazyStructEncoder);\n    const dss = updateDecoders.map(decoder => (0, internals_1.readDeleteSet)(decoder));\n    const ds = (0, internals_1.mergeDeleteSets)(dss);\n    (0, internals_1.writeDeleteSet)(updateEncoder, ds);\n    return updateEncoder.toUint8Array();\n};\nexports.mergeUpdatesV2 = mergeUpdatesV2;\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nconst diffUpdateV2 = (update, sv, YDecoder = internals_1.UpdateDecoderV2, YEncoder = internals_1.UpdateEncoderV2) => {\n    const state = (0, internals_1.decodeStateVector)(sv);\n    const encoder = new YEncoder();\n    const lazyStructWriter = new LazyStructWriter(encoder);\n    const decoder = new YDecoder(decoding.createDecoder(update));\n    const reader = new LazyStructReader(decoder, false);\n    while (reader.curr) {\n        const curr = reader.curr;\n        const currClient = curr.id.client;\n        const svClock = state.get(currClient) || 0;\n        if (reader.curr.constructor === internals_1.Skip) {\n            // the first written struct shouldn't be a skip\n            reader.next();\n            continue;\n        }\n        if (curr.id.clock + curr.length > svClock) {\n            writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0));\n            reader.next();\n            while (reader.curr && reader.curr.id.client === currClient) {\n                writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0);\n                reader.next();\n            }\n        }\n        else {\n            // read until something new comes up\n            while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n                reader.next();\n            }\n        }\n    }\n    finishLazyStructWriting(lazyStructWriter);\n    // write ds\n    const ds = (0, internals_1.readDeleteSet)(decoder);\n    (0, internals_1.writeDeleteSet)(encoder, ds);\n    return encoder.toUint8Array();\n};\nexports.diffUpdateV2 = diffUpdateV2;\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nconst diffUpdate = (update, sv) => (0, exports.diffUpdateV2)(update, sv, internals_1.UpdateDecoderV1, internals_1.UpdateEncoderV1);\nexports.diffUpdate = diffUpdate;\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = (lazyWriter) => {\n    if (lazyWriter.written > 0) {\n        lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) });\n        lazyWriter.encoder.restEncoder = encoding.createEncoder();\n        lazyWriter.written = 0;\n    }\n};\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n    // flush curr if we start another client\n    if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n        flushLazyStructWriter(lazyWriter);\n    }\n    if (lazyWriter.written === 0) {\n        lazyWriter.currClient = struct.id.client;\n        // write next client\n        lazyWriter.encoder.writeClient(struct.id.client);\n        // write startClock\n        encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset);\n    }\n    struct.write(lazyWriter.encoder, offset);\n    lazyWriter.written++;\n};\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n    flushLazyStructWriter(lazyWriter);\n    // this is a fresh encoder because we called flushCurr\n    const restEncoder = lazyWriter.encoder.restEncoder;\n    /**\n     * Now we put all the fragments together.\n     * This works similarly to `writeClientsStructs`\n     */\n    // write # states that were updated - i.e. the clients\n    encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length);\n    for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n        const partStructs = lazyWriter.clientStructs[i];\n        /**\n         * Works similarly to `writeStructs`\n         */\n        // write # encoded structs\n        encoding.writeVarUint(restEncoder, partStructs.written);\n        // write the rest of the fragment\n        encoding.writeUint8Array(restEncoder, partStructs.restEncoder);\n    }\n};\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nconst convertUpdateFormat = (update, YDecoder, YEncoder) => {\n    const updateDecoder = new YDecoder(decoding.createDecoder(update));\n    const lazyDecoder = new LazyStructReader(updateDecoder, false);\n    const updateEncoder = new YEncoder();\n    const lazyWriter = new LazyStructWriter(updateEncoder);\n    for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n        writeStructToLazyStructWriter(lazyWriter, curr, 0);\n    }\n    finishLazyStructWriting(lazyWriter);\n    const ds = (0, internals_1.readDeleteSet)(updateDecoder);\n    (0, internals_1.writeDeleteSet)(updateEncoder, ds);\n    return updateEncoder.toUint8Array();\n};\nexports.convertUpdateFormat = convertUpdateFormat;\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV1ToV2 = (update) => (0, exports.convertUpdateFormat)(update, internals_1.UpdateDecoderV1, internals_1.UpdateEncoderV2);\nexports.convertUpdateFormatV1ToV2 = convertUpdateFormatV1ToV2;\n/**\n * @param {Uint8Array} update\n */\nconst convertUpdateFormatV2ToV1 = (update) => (0, exports.convertUpdateFormat)(update, internals_1.UpdateDecoderV2, internals_1.UpdateEncoderV1);\nexports.convertUpdateFormatV2ToV1 = convertUpdateFormatV2ToV1;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.YEvent = void 0;\nconst internals_1 = require(\"../internals\");\nconst set = require(\"lib0/set\");\nconst array = require(\"lib0/array\");\n/** YEvent describes the changes on a YType. */\nclass YEvent {\n    /**\n     * @param {T} target The changed type.\n     * @param {Transaction} transaction\n     */\n    constructor(target, transaction) {\n        this.target = target;\n        this.currentTarget = target;\n        this.transaction = transaction;\n        this._changes = null;\n        this._keys = null;\n        this._delta = null;\n    }\n    /**\n     * Computes the path from `y` to the changed type.\n     *\n     * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n     *\n     * The following property holds:\n     * @example\n     *     let type = y\n     *     event.path.forEach(dir => {\n     *         type = type.get(dir)\n     *     })\n     *     type === event.target // => true\n     */\n    get path() {\n        // @ts-ignore _item is defined because target is integrated\n        return getPathTo(this.currentTarget, this.target);\n    }\n    /**\n     * Check if a struct is deleted by this event.\n     *\n     * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n     *\n     * @param {AbstractStruct} struct\n     * @return {boolean}\n     */\n    deletes(struct) {\n        return (0, internals_1.isDeleted)(this.transaction.deleteSet, struct.id);\n    }\n    get keys() {\n        if (this._keys === null) {\n            const keys = new Map();\n            const target = this.target;\n            const changed = this.transaction.changed.get(target);\n            changed.forEach(key => {\n                if (key !== null) {\n                    const item = target._map.get(key);\n                    let action;\n                    let oldValue;\n                    if (this.adds(item)) {\n                        let prev = item.left;\n                        while (prev !== null && this.adds(prev)) {\n                            prev = prev.left;\n                        }\n                        if (this.deletes(item)) {\n                            if (prev !== null && this.deletes(prev)) {\n                                action = 'delete';\n                                oldValue = array.last(prev.content.getContent());\n                            }\n                            else {\n                                return;\n                            }\n                        }\n                        else {\n                            if (prev !== null && this.deletes(prev)) {\n                                action = 'update';\n                                oldValue = array.last(prev.content.getContent());\n                            }\n                            else {\n                                action = 'add';\n                                oldValue = undefined;\n                            }\n                        }\n                    }\n                    else {\n                        if (this.deletes(item)) {\n                            action = 'delete';\n                            oldValue = array.last(item.content.getContent());\n                        }\n                        else {\n                            return; // nop\n                        }\n                    }\n                    keys.set(key, { action, oldValue });\n                }\n            });\n            this._keys = keys;\n        }\n        return this._keys;\n    }\n    /**\n     * @type {Array<{insert?: string | Array<any> | object | AbstractType<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n     */\n    get delta() {\n        return this.changes.delta;\n    }\n    /**\n     * Check if a struct is added by this event.\n     *\n     * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n     */\n    adds(struct) {\n        return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0);\n    }\n    get changes() {\n        let changes = this._changes;\n        if (changes === null) {\n            const target = this.target;\n            const added = set.create();\n            const deleted = set.create();\n            const delta = [];\n            changes = {\n                added,\n                deleted,\n                delta,\n                keys: this.keys\n            };\n            const changed = this.transaction.changed.get(target);\n            if (changed.has(null)) {\n                let lastOp = null;\n                const packOp = () => {\n                    if (lastOp) {\n                        delta.push(lastOp);\n                    }\n                };\n                for (let item = target._start; item !== null; item = item.right) {\n                    if (item.deleted) {\n                        if (this.deletes(item) && !this.adds(item)) {\n                            if (lastOp === null || lastOp.delete === undefined) {\n                                packOp();\n                                lastOp = { delete: 0 };\n                            }\n                            lastOp.delete += item.length;\n                            deleted.add(item);\n                        } // else nop\n                    }\n                    else {\n                        if (this.adds(item)) {\n                            if (lastOp === null || lastOp.insert === undefined) {\n                                packOp();\n                                lastOp = { insert: [] };\n                            }\n                            lastOp.insert = lastOp.insert.concat(item.content.getContent());\n                            added.add(item);\n                        }\n                        else {\n                            if (lastOp === null || lastOp.retain === undefined) {\n                                packOp();\n                                lastOp = { retain: 0 };\n                            }\n                            lastOp.retain += item.length;\n                        }\n                    }\n                }\n                if (lastOp !== null && lastOp.retain === undefined) {\n                    packOp();\n                }\n            }\n            this._changes = changes;\n        }\n        return changes;\n    }\n}\nexports.YEvent = YEvent;\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *     // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *     const path = type.getPathTo(child)\n *     // assuming `type instanceof YArray`\n *     console.log(path) // might look like => [2, 'key1']\n *     child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n    const path = [];\n    while (child._item !== null && child !== parent) {\n        if (child._item.parentSub !== null) {\n            // parent is map-ish\n            path.unshift(child._item.parentSub);\n        }\n        else {\n            // parent is array-ish\n            let i = 0;\n            let c = child._item.parent._start;\n            while (c !== child._item && c !== null) {\n                if (!c.deleted) {\n                    i++;\n                }\n                c = c.right;\n            }\n            path.unshift(i);\n        }\n        child = child._item.parent;\n    }\n    return path;\n};\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMapIterator = exports.typeMapGetSnapshot = exports.typeMapHas = exports.typeMapGetAll = exports.typeMapGet = exports.typeMapSet = exports.typeMapDelete = exports.typeListDelete = exports.typeListPushGenerics = exports.typeListInsertGenerics = exports.typeListInsertGenericsAfter = exports.typeListGet = exports.typeListForEachSnapshot = exports.typeListCreateIterator = exports.typeListMap = exports.typeListForEach = exports.typeListToArraySnapshot = exports.typeListToArray = exports.typeListSlice = exports.AbstractType = exports.callTypeObservers = exports.getTypeChildren = exports.updateMarkerChanges = exports.findMarker = exports.ArraySearchMarker = void 0;\nconst internals_1 = require(\"../internals\");\nconst map = require(\"lib0/map\");\nconst iterator = require(\"lib0/iterator\");\nconst error = require(\"lib0/error\");\nconst math = require(\"lib0/math\");\nconst maxSearchMarker = 80;\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n */\nlet globalSearchMarkerTimestamp = 0;\nclass ArraySearchMarker {\n    constructor(p, index) {\n        this.p = p;\n        this.index = index;\n        p.marker = true;\n        this.timestamp = globalSearchMarkerTimestamp++;\n    }\n}\nexports.ArraySearchMarker = ArraySearchMarker;\nconst refreshMarkerTimestamp = (marker) => {\n    marker.timestamp = globalSearchMarkerTimestamp++;\n};\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n */\nconst overwriteMarker = (marker, p, index) => {\n    marker.p.marker = false;\n    marker.p = p;\n    p.marker = true;\n    marker.index = index;\n    marker.timestamp = globalSearchMarkerTimestamp++;\n};\nconst markPosition = (searchMarker, p, index) => {\n    if (searchMarker.length >= maxSearchMarker) {\n        // override oldest marker (we don't want to create more objects)\n        const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b);\n        overwriteMarker(marker, p, index);\n        return marker;\n    }\n    else {\n        // create new marker\n        const pm = new ArraySearchMarker(p, index);\n        searchMarker.push(pm);\n        return pm;\n    }\n};\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n */\nconst findMarker = (yarray, index) => {\n    if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n        return null;\n    }\n    const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b);\n    let p = yarray._start;\n    let pindex = 0;\n    if (marker !== null) {\n        p = marker.p;\n        pindex = marker.index;\n        refreshMarkerTimestamp(marker); // we used it, we might need to use it again\n    }\n    // iterate to right if possible\n    while (p.right !== null && pindex < index) {\n        if (!p.deleted && p.countable) {\n            if (index < pindex + p.length) {\n                break;\n            }\n            pindex += p.length;\n        }\n        p = p.right;\n    }\n    // iterate to left if necessary (might be that pindex > index)\n    while (p.left !== null && pindex > index) {\n        p = p.left;\n        if (!p.deleted && p.countable) {\n            pindex -= p.length;\n        }\n    }\n    // we want to make sure that p can't be merged with left, because that would screw up everything\n    // in that cas just return what we have (it is most likely the best marker anyway)\n    // iterate to left until p can't be merged with left\n    while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n        p = p.left;\n        if (!p.deleted && p.countable) {\n            pindex -= p.length;\n        }\n    }\n    // @todo remove!\n    // assure position\n    // {\n    //     let start = yarray._start\n    //     let pos = 0\n    //     while (start !== p) {\n    //         if (!start.deleted && start.countable) {\n    //             pos += start.length\n    //         }\n    //         start = /** @type {Item} */ (start.right)\n    //     }\n    //     if (pos !== pindex) {\n    //         debugger\n    //         throw new Error('Gotcha position fail!')\n    //     }\n    // }\n    // if (marker) {\n    //     if (window.lengthes == null) {\n    //         window.lengthes = []\n    //         window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n    //     }\n    //     window.lengthes.push(marker.index - pindex)\n    //     console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n    // }\n    if (marker !== null && math.abs(marker.index - pindex) < p.parent.length / maxSearchMarker) {\n        // adjust existing marker\n        overwriteMarker(marker, p, pindex);\n        return marker;\n    }\n    else {\n        // create new marker\n        return markPosition(yarray._searchMarker, p, pindex);\n    }\n};\nexports.findMarker = findMarker;\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n */\nconst updateMarkerChanges = (searchMarker, index, len) => {\n    for (let i = searchMarker.length - 1; i >= 0; i--) {\n        const m = searchMarker[i];\n        if (len > 0) {\n            let p = m.p;\n            p.marker = false;\n            // Ideally we just want to do a simple position comparison, but this will only work if\n            // search markers don't point to deleted items for formats.\n            // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n            while (p && (p.deleted || !p.countable)) {\n                p = p.left;\n                if (p && !p.deleted && p.countable) {\n                    // adjust position. the loop should break now\n                    m.index -= p.length;\n                }\n            }\n            if (p === null || p.marker === true) {\n                // remove search marker if updated position is null or if position is already marked\n                searchMarker.splice(i, 1);\n                continue;\n            }\n            m.p = p;\n            p.marker = true;\n        }\n        if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n            m.index = math.max(index, m.index + len);\n        }\n    }\n};\nexports.updateMarkerChanges = updateMarkerChanges;\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n */\nconst getTypeChildren = (t) => {\n    let s = t._start;\n    const arr = [];\n    while (s) {\n        arr.push(s);\n        s = s.right;\n    }\n    return arr;\n};\nexports.getTypeChildren = getTypeChildren;\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n */\nconst callTypeObservers = (type, transaction, event) => {\n    const changedType = type;\n    const changedParentTypes = transaction.changedParentTypes;\n    while (true) {\n        // @ts-ignore\n        map.setIfUndefined(changedParentTypes, type, () => []).push(event);\n        if (type._item === null) {\n            break;\n        }\n        type = type._item.parent;\n    }\n    (0, internals_1.callEventHandlerListeners)(changedType._eH, event, transaction);\n};\nexports.callTypeObservers = callTypeObservers;\n/**\n * Abstract Yjs Type class\n */\nclass AbstractType {\n    constructor() {\n        this.doc = null;\n        this._item = null;\n        this._map = new Map();\n        this._start = null;\n        this._length = 0;\n        /** Event handlers */\n        this._eH = (0, internals_1.createEventHandler)();\n        /** Deep event handlers */\n        this._dEH = (0, internals_1.createEventHandler)();\n        this._searchMarker = null;\n    }\n    get parent() {\n        return this._item ? this._item.parent : null;\n    }\n    /**\n     * Integrate this type into the Yjs instance.\n     *\n     * * Save this struct in the os\n     * * This type is sent to other client\n     * * Observer functions are fired\n     */\n    _integrate(y, item) {\n        this.doc = y;\n        this._item = item;\n    }\n    _copy() { throw error.methodUnimplemented(); }\n    clone() { throw error.methodUnimplemented(); }\n    _write(_encoder) { }\n    /** The first non-deleted item */\n    get _first() {\n        let n = this._start;\n        while (n !== null && n.deleted) {\n            n = n.right;\n        }\n        return n;\n    }\n    /**\n     * Creates YEvent and calls all type observers.\n     * Must be implemented by each type.\n     *\n     * @param {Transaction} transaction\n     * @param {Set<null|string>} _parentSubs Keys changed on this type. `null` if list was modified.\n     */\n    _callObserver(transaction, _parentSubs) {\n        if (!transaction.local && this._searchMarker) {\n            this._searchMarker.length = 0;\n        }\n    }\n    /** Observe all events that are created on this type. */\n    observe(f) {\n        (0, internals_1.addEventHandlerListener)(this._eH, f);\n    }\n    /** Observe all events that are created by this type and its children. */\n    observeDeep(f) {\n        (0, internals_1.addEventHandlerListener)(this._dEH, f);\n    }\n    /** Unregister an observer function. */\n    unobserve(f) {\n        (0, internals_1.removeEventHandlerListener)(this._eH, f);\n    }\n    /** Unregister an observer function. */\n    unobserveDeep(f) {\n        (0, internals_1.removeEventHandlerListener)(this._dEH, f);\n    }\n    toJSON() { }\n}\nexports.AbstractType = AbstractType;\nconst typeListSlice = (type, start, end) => {\n    if (start < 0) {\n        start = type._length + start;\n    }\n    if (end < 0) {\n        end = type._length + end;\n    }\n    let len = end - start;\n    const cs = [];\n    let n = type._start;\n    while (n !== null && len > 0) {\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            if (c.length <= start) {\n                start -= c.length;\n            }\n            else {\n                for (let i = start; i < c.length && len > 0; i++) {\n                    cs.push(c[i]);\n                    len--;\n                }\n                start = 0;\n            }\n        }\n        n = n.right;\n    }\n    return cs;\n};\nexports.typeListSlice = typeListSlice;\nconst typeListToArray = (type) => {\n    const cs = [];\n    let n = type._start;\n    while (n !== null) {\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            for (let i = 0; i < c.length; i++) {\n                cs.push(c[i]);\n            }\n        }\n        n = n.right;\n    }\n    return cs;\n};\nexports.typeListToArray = typeListToArray;\nconst typeListToArraySnapshot = (type, snapshot) => {\n    const cs = [];\n    let n = type._start;\n    while (n !== null) {\n        if (n.countable && (0, internals_1.isVisible)(n, snapshot)) {\n            const c = n.content.getContent();\n            for (let i = 0; i < c.length; i++) {\n                cs.push(c[i]);\n            }\n        }\n        n = n.right;\n    }\n    return cs;\n};\nexports.typeListToArraySnapshot = typeListToArraySnapshot;\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n */\nconst typeListForEach = (type, f) => {\n    let index = 0;\n    let n = type._start;\n    while (n !== null) {\n        if (n.countable && !n.deleted) {\n            const c = n.content.getContent();\n            for (let i = 0; i < c.length; i++) {\n                f(c[i], index++, type);\n            }\n        }\n        n = n.right;\n    }\n};\nexports.typeListForEach = typeListForEach;\nconst typeListMap = (type, f) => {\n    const result = [];\n    (0, exports.typeListForEach)(type, (c, i) => {\n        result.push(f(c, i, type));\n    });\n    return result;\n};\nexports.typeListMap = typeListMap;\nconst typeListCreateIterator = (type) => {\n    let n = type._start;\n    let currentContent = null;\n    let currentContentIndex = 0;\n    return {\n        [Symbol.iterator]() {\n            return this;\n        },\n        next: () => {\n            // find some content\n            if (currentContent === null) {\n                while (n !== null && n.deleted) {\n                    n = n.right;\n                }\n                // check if we reached the end, no need to check currentContent, because it does not exist\n                if (n === null) {\n                    return {\n                        done: true,\n                        value: undefined\n                    };\n                }\n                // we found n, so we can set currentContent\n                currentContent = n.content.getContent();\n                currentContentIndex = 0;\n                n = n.right; // we used the content of n, now iterate to next\n            }\n            const value = currentContent[currentContentIndex++];\n            // check if we need to empty currentContent\n            if (currentContent.length <= currentContentIndex) {\n                currentContent = null;\n            }\n            return {\n                done: false,\n                value\n            };\n        }\n    };\n};\nexports.typeListCreateIterator = typeListCreateIterator;\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nconst typeListForEachSnapshot = (type, f, snapshot) => {\n    let index = 0;\n    let n = type._start;\n    while (n !== null) {\n        if (n.countable && (0, internals_1.isVisible)(n, snapshot)) {\n            const c = n.content.getContent();\n            for (let i = 0; i < c.length; i++) {\n                f(c[i], index++, type);\n            }\n        }\n        n = n.right;\n    }\n};\nexports.typeListForEachSnapshot = typeListForEachSnapshot;\nconst typeListGet = (type, index) => {\n    const marker = (0, exports.findMarker)(type, index);\n    let n = type._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n    }\n    for (; n !== null; n = n.right) {\n        if (!n.deleted && n.countable) {\n            if (index < n.length) {\n                return n.content.getContent()[index];\n            }\n            index -= n.length;\n        }\n    }\n};\nexports.typeListGet = typeListGet;\nconst typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n    let left = referenceItem;\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    const store = doc.store;\n    const right = referenceItem === null ? parent._start : referenceItem.right;\n    let jsonContent = [];\n    const packJsonContent = () => {\n        if (jsonContent.length > 0) {\n            left = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentAny(jsonContent));\n            left.integrate(transaction, 0);\n            jsonContent = [];\n        }\n    };\n    content.forEach(c => {\n        if (c === null) {\n            jsonContent.push(c);\n        }\n        else {\n            switch (c.constructor) {\n                case Number:\n                case Object:\n                case Boolean:\n                case Array:\n                case String:\n                    jsonContent.push(c);\n                    break;\n                default:\n                    packJsonContent();\n                    switch (c.constructor) {\n                        case Uint8Array:\n                        case ArrayBuffer:\n                            left = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentBinary(new Uint8Array(c)));\n                            left.integrate(transaction, 0);\n                            break;\n                        case internals_1.Doc:\n                            left = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentDoc(c));\n                            left.integrate(transaction, 0);\n                            break;\n                        default:\n                            if (c instanceof AbstractType) {\n                                left = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentType(c));\n                                left.integrate(transaction, 0);\n                            }\n                            else {\n                                throw new Error('Unexpected content type in insert operation');\n                            }\n                    }\n            }\n        }\n    });\n    packJsonContent();\n};\nexports.typeListInsertGenericsAfter = typeListInsertGenericsAfter;\nconst lengthExceeded = error.create('Length exceeded!');\nconst typeListInsertGenerics = (transaction, parent, index, content) => {\n    if (index > parent._length) {\n        throw lengthExceeded;\n    }\n    if (index === 0) {\n        if (parent._searchMarker) {\n            (0, exports.updateMarkerChanges)(parent._searchMarker, index, content.length);\n        }\n        return (0, exports.typeListInsertGenericsAfter)(transaction, parent, null, content);\n    }\n    const startIndex = index;\n    const marker = (0, exports.findMarker)(parent, index);\n    let n = parent._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n        // we need to iterate one to the left so that the algorithm works\n        if (index === 0) {\n            // @todo refactor this as it actually doesn't consider formats\n            n = n.prev; // important! get the left undeleted item so that we can actually decrease index\n            index += (n && n.countable && !n.deleted) ? n.length : 0;\n        }\n    }\n    for (; n !== null; n = n.right) {\n        if (!n.deleted && n.countable) {\n            if (index <= n.length) {\n                if (index < n.length) {\n                    // insert in-between\n                    (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(n.id.client, n.id.clock + index));\n                }\n                break;\n            }\n            index -= n.length;\n        }\n    }\n    if (parent._searchMarker) {\n        (0, exports.updateMarkerChanges)(parent._searchMarker, startIndex, content.length);\n    }\n    return (0, exports.typeListInsertGenericsAfter)(transaction, parent, n, content);\n};\nexports.typeListInsertGenerics = typeListInsertGenerics;\n/**\n * Pushing content is special as we generally want to push after the last item. So we don't have to update\n * the serach marker.\n*/\nconst typeListPushGenerics = (transaction, parent, content) => {\n    // Use the marker with the highest index and iterate to the right.\n    const marker = (parent._searchMarker || []).reduce((maxMarker, currMarker) => currMarker.index > maxMarker.index ? currMarker : maxMarker, { index: 0, p: parent._start });\n    let n = marker.p;\n    if (n) {\n        while (n.right) {\n            n = n.right;\n        }\n    }\n    return (0, exports.typeListInsertGenericsAfter)(transaction, parent, n, content);\n};\nexports.typeListPushGenerics = typeListPushGenerics;\nconst typeListDelete = (transaction, parent, index, length) => {\n    if (length === 0) {\n        return;\n    }\n    const startIndex = index;\n    const startLength = length;\n    const marker = (0, exports.findMarker)(parent, index);\n    let n = parent._start;\n    if (marker !== null) {\n        n = marker.p;\n        index -= marker.index;\n    }\n    // compute the first item to be deleted\n    for (; n !== null && index > 0; n = n.right) {\n        if (!n.deleted && n.countable) {\n            if (index < n.length) {\n                (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(n.id.client, n.id.clock + index));\n            }\n            index -= n.length;\n        }\n    }\n    // delete all items until done\n    while (length > 0 && n !== null) {\n        if (!n.deleted) {\n            if (length < n.length) {\n                (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(n.id.client, n.id.clock + length));\n            }\n            n.delete(transaction);\n            length -= n.length;\n        }\n        n = n.right;\n    }\n    if (length > 0) {\n        throw lengthExceeded;\n    }\n    if (parent._searchMarker) {\n        (0, exports.updateMarkerChanges)(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */);\n    }\n};\nexports.typeListDelete = typeListDelete;\nconst typeMapDelete = (transaction, parent, key) => {\n    const c = parent._map.get(key);\n    if (c !== undefined) {\n        c.delete(transaction);\n    }\n};\nexports.typeMapDelete = typeMapDelete;\nconst typeMapSet = (transaction, parent, key, value) => {\n    const left = parent._map.get(key) || null;\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    let content;\n    if (value == null) {\n        content = new internals_1.ContentAny([value]);\n    }\n    else {\n        switch (value.constructor) {\n            case Number:\n            case Object:\n            case Boolean:\n            case Array:\n            case String:\n                content = new internals_1.ContentAny([value]);\n                break;\n            case Uint8Array:\n                content = new internals_1.ContentBinary(value);\n                break;\n            case internals_1.Doc:\n                content = new internals_1.ContentDoc(value);\n                break;\n            default:\n                if (value instanceof AbstractType) {\n                    content = new internals_1.ContentType(value);\n                }\n                else {\n                    throw new Error('Unexpected content type');\n                }\n        }\n    }\n    new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0);\n};\nexports.typeMapSet = typeMapSet;\nconst typeMapGet = (parent, key) => {\n    const val = parent._map.get(key);\n    return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined;\n};\nexports.typeMapGet = typeMapGet;\nconst typeMapGetAll = (parent) => {\n    const res = {};\n    parent._map.forEach((value, key) => {\n        if (!value.deleted) {\n            res[key] = value.content.getContent()[value.length - 1];\n        }\n    });\n    return res;\n};\nexports.typeMapGetAll = typeMapGetAll;\nconst typeMapHas = (parent, key) => {\n    const val = parent._map.get(key);\n    return val !== undefined && !val.deleted;\n};\nexports.typeMapHas = typeMapHas;\nconst typeMapGetSnapshot = (parent, key, snapshot) => {\n    let v = parent._map.get(key) || null;\n    while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n        v = v.left;\n    }\n    return v !== null && (0, internals_1.isVisible)(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined;\n};\nexports.typeMapGetSnapshot = typeMapGetSnapshot;\nconst createMapIterator = (map) => {\n    return iterator.iteratorFilter(map.entries(), (entry) => !entry[1].deleted);\n};\nexports.createMapIterator = createMapIterator;\n","\"use strict\";\n/**\n * @module YArray\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYArray = exports.YArray = exports.YArrayEvent = void 0;\nconst internals_1 = require(\"../internals\");\nconst AbstractType_js_1 = require(\"./AbstractType.js\");\n/** Event that describes the changes on a YArray */\nclass YArrayEvent extends internals_1.YEvent {\n    /**\n     * @param {YArray<T>} yarray The changed type\n     * @param {Transaction} transaction The transaction object\n     */\n    constructor(yarray, transaction) {\n        super(yarray, transaction);\n        this._transaction = transaction;\n    }\n}\nexports.YArrayEvent = YArrayEvent;\n/** A shared Array implementation. */\nclass YArray extends internals_1.AbstractType {\n    constructor() {\n        super();\n        this._prelimContent = [];\n        this._searchMarker = [];\n    }\n    /** Construct a new YArray containing the specified items. */\n    static from(items) {\n        const a = new YArray();\n        a.push(items);\n        return a;\n    }\n    /**\n     * Integrate this type into the Yjs instance.\n     *\n     * * Save this struct in the os\n     * * This type is sent to other client\n     * * Observer functions are fired\n     */\n    _integrate(y, item) {\n        super._integrate(y, item);\n        this.insert(0, this._prelimContent);\n        this._prelimContent = null;\n    }\n    _copy() { return new YArray(); }\n    clone() {\n        const arr = new YArray();\n        arr.insert(0, this.toArray().map(el => el instanceof internals_1.AbstractType ? el.clone() : el));\n        return arr;\n    }\n    get length() {\n        return this._prelimContent === null ? this._length : this._prelimContent.length;\n    }\n    /**\n     * Creates YArrayEvent and calls observers.\n     *\n     * @param {Transaction} transaction\n     * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n     */\n    _callObserver(transaction, parentSubs) {\n        super._callObserver(transaction, parentSubs);\n        (0, internals_1.callTypeObservers)(this, transaction, new YArrayEvent(this, transaction));\n    }\n    /**\n     * Inserts new content at an index.\n     *\n     * Important: This function expects an array of content. Not just a content\n     * object. The reason for this \"weirdness\" is that inserting several elements\n     * is very efficient when it is done as a single operation.\n     *\n     * @example\n     *    // Insert character 'a' at position 0\n     *    yarray.insert(0, ['a'])\n     *    // Insert numbers 1, 2 at position 1\n     *    yarray.insert(1, [1, 2])\n     *\n     * @param {number} index The index to insert content at.\n     * @param {Array<T>} content The array of content\n     */\n    insert(index, content) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeListInsertGenerics)(transaction, this, index, content);\n            });\n        }\n        else {\n            this._prelimContent.splice(index, 0, ...content);\n        }\n    }\n    /**\n     * Appends content to this YArray.\n     *\n     * @param {Array<T>} content Array of content to append.\n     *\n     * @todo Use the following implementation in all types.\n     */\n    push(content) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeListPushGenerics)(transaction, this, content);\n            });\n        }\n        else {\n            this._prelimContent.push(...content);\n        }\n    }\n    /**\n     * Preppends content to this YArray.\n     *\n     * @param {Array<T>} content Array of content to preppend.\n     */\n    unshift(content) {\n        this.insert(0, content);\n    }\n    /**\n     * Deletes elements starting from an index.\n     *\n     * @param {number} index Index at which to start deleting elements\n     * @param {number} length The number of elements to remove. Defaults to 1.\n     */\n    delete(index, length = 1) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeListDelete)(transaction, this, index, length);\n            });\n        }\n        else {\n            this._prelimContent.splice(index, length);\n        }\n    }\n    /**\n     * Returns the i-th element from a YArray.\n     *\n     * @param {number} index The index of the element to return from the YArray\n     * @return {T}\n     */\n    get(index) {\n        return (0, internals_1.typeListGet)(this, index);\n    }\n    /** Transforms this YArray to a JavaScript Array. */\n    toArray() {\n        return (0, internals_1.typeListToArray)(this);\n    }\n    /** Transforms this YArray to a JavaScript Array. */\n    slice(start = 0, end = this.length) {\n        return (0, AbstractType_js_1.typeListSlice)(this, start, end);\n    }\n    /**\n     * Transforms this Shared Type to a JSON object.\n     */\n    toJSON() {\n        return this.map((c) => c instanceof internals_1.AbstractType ? c.toJSON() : c);\n    }\n    /**\n     * Returns an Array with the result of calling a provided function on every\n     * element of this YArray.\n     *\n     * @template M\n     * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n     * @return {Array<M>} A new array with each element being the result of the\n     *                                 callback function\n     */\n    map(func) {\n        return (0, internals_1.typeListMap)(this, func);\n    }\n    /**\n     * Executes a provided function on once on overy element of this YArray.\n     *\n     * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n     */\n    forEach(f) {\n        (0, internals_1.typeListForEach)(this, f);\n    }\n    [Symbol.iterator]() {\n        return (0, internals_1.typeListCreateIterator)(this);\n    }\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YArrayRefID);\n    }\n}\nexports.YArray = YArray;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n *\n * @private\n * @function\n */\nconst readYArray = (_decoder) => {\n    return new YArray();\n};\nexports.readYArray = readYArray;\n","\"use strict\";\n/**\n * @module YMap\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYMap = exports.YMap = exports.YMapEvent = void 0;\nconst internals_1 = require(\"../internals\");\nconst AbstractType_1 = require(\"./AbstractType\");\nconst iterator = require(\"lib0/iterator\");\n/** Event that describes the changes on a YMap. */\nclass YMapEvent extends internals_1.YEvent {\n    /**\n     * @param {YMap<T>} ymap The YArray that changed.\n     * @param {Transaction} transaction\n     * @param {Set<any>} subs The keys that changed.\n     */\n    constructor(ymap, transaction, subs) {\n        super(ymap, transaction);\n        this.keysChanged = subs;\n    }\n}\nexports.YMapEvent = YMapEvent;\n/**\n * @template MapType\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<MapType>>\n * @implements {Iterable<MapType>}\n */\nclass YMap extends AbstractType_1.AbstractType {\n    /**\n     *\n     * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n     */\n    constructor(entries = undefined) {\n        super();\n        this._prelimContent = null;\n        if (entries === undefined) {\n            this._prelimContent = new Map();\n        }\n        else {\n            this._prelimContent = new Map(entries);\n        }\n    }\n    /**\n     * Integrate this type into the Yjs instance.\n     *\n     * * Save this struct in the os\n     * * This type is sent to other client\n     * * Observer functions are fired\n     */\n    _integrate(y, item) {\n        super._integrate(y, item);\n        this._prelimContent.forEach((value, key) => {\n            this.set(key, value);\n        });\n        this._prelimContent = null;\n    }\n    _copy() {\n        return new YMap();\n    }\n    clone() {\n        const map = new YMap();\n        this.forEach((value, key) => {\n            map.set(key, value instanceof AbstractType_1.AbstractType ? value.clone() : value);\n        });\n        return map;\n    }\n    /**\n     * Creates YMapEvent and calls observers.\n     *\n     * @param {Transaction} transaction\n     * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n     */\n    _callObserver(transaction, parentSubs) {\n        (0, internals_1.callTypeObservers)(this, transaction, new YMapEvent(this, transaction, parentSubs));\n    }\n    /** Transforms this Shared Type to a JSON object. */\n    toJSON() {\n        const map = {};\n        this._map.forEach((item, key) => {\n            if (!item.deleted) {\n                const v = item.content.getContent()[item.length - 1];\n                map[key] = v instanceof AbstractType_1.AbstractType ? v.toJSON() : v;\n            }\n        });\n        return map;\n    }\n    /** Returns the size of the YMap (count of key/value pairs) */\n    get size() {\n        return [...(0, internals_1.createMapIterator)(this._map)].length;\n    }\n    /** Returns the keys for each element in the YMap Type. */\n    keys() {\n        return iterator.iteratorMap((0, internals_1.createMapIterator)(this._map), (v) => v[0]);\n    }\n    /** Returns the values for each element in the YMap Type. */\n    values() {\n        return iterator.iteratorMap((0, internals_1.createMapIterator)(this._map), (v) => v[1].content.getContent()[v[1].length - 1]);\n    }\n    /** Returns an Iterator of [key, value] pairs */\n    entries() {\n        return iterator.iteratorMap((0, internals_1.createMapIterator)(this._map), (v) => [v[0], v[1].content.getContent()[v[1].length - 1]]);\n    }\n    /** Executes a provided function on once on every key-value pair. */\n    forEach(f) {\n        this._map.forEach((item, key) => {\n            if (!item.deleted) {\n                f(item.content.getContent()[item.length - 1], key, this);\n            }\n        });\n    }\n    /** Returns an Iterator of [key, value] pairs */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /** Remove a specified element from this YMap. */\n    delete(key) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapDelete)(transaction, this, key);\n            });\n        }\n        else {\n            this._prelimContent.delete(key);\n        }\n    }\n    /** Adds or updates an element with a specified key and value. */\n    set(key, value) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapSet)(transaction, this, key, value);\n            });\n        }\n        else {\n            this._prelimContent.set(key, value);\n        }\n        return value;\n    }\n    /** Returns a specified element from this YMap. */\n    get(key) {\n        return (0, internals_1.typeMapGet)(this, key);\n    }\n    /** Returns a boolean indicating whether the specified key exists or not. */\n    has(key) {\n        return (0, internals_1.typeMapHas)(this, key);\n    }\n    /** Removes all elements from this YMap. */\n    clear() {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                this.forEach(function (_value, key, map) {\n                    (0, internals_1.typeMapDelete)(transaction, map, key);\n                });\n            });\n        }\n        else {\n            this._prelimContent.clear();\n        }\n    }\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YMapRefID);\n    }\n}\nexports.YMap = YMap;\nconst readYMap = (_decoder) => {\n    return new YMap();\n};\nexports.readYMap = readYMap;\n","\"use strict\";\n/**\n * @module YText\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYText = exports.YText = exports.YTextEvent = exports.cleanupYTextFormatting = exports.ItemTextListPosition = void 0;\nconst internals_1 = require(\"../internals\");\nconst object = require(\"lib0/object\");\nconst map = require(\"lib0/map\");\nconst error = require(\"lib0/error\");\nconst equalAttrs = (a, b) => {\n    if (a === b)\n        return true;\n    if (typeof a === 'object' && typeof b === 'object') {\n        return (a && b && object.equalFlat(a, b));\n    }\n    return false;\n};\nclass ItemTextListPosition {\n    constructor(left, right, index, currentAttributes) {\n        this.left = left;\n        this.right = right;\n        this.index = index;\n        this.currentAttributes = currentAttributes;\n    }\n    /** Only call this if you know that this.right is defined */\n    forward() {\n        if (this.right === null) {\n            error.unexpectedCase();\n        }\n        switch (this.right.content.constructor) {\n            case internals_1.ContentFormat:\n                if (!this.right.deleted) {\n                    updateCurrentAttributes(this.currentAttributes, this.right.content);\n                }\n                break;\n            default:\n                if (!this.right.deleted) {\n                    this.index += this.right.length;\n                }\n                break;\n        }\n        this.left = this.right;\n        this.right = this.right.right;\n    }\n}\nexports.ItemTextListPosition = ItemTextListPosition;\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n    while (pos.right !== null && count > 0) {\n        switch (pos.right.content.constructor) {\n            case internals_1.ContentFormat:\n                if (!pos.right.deleted) {\n                    updateCurrentAttributes(pos.currentAttributes, pos.right.content);\n                }\n                break;\n            default:\n                if (!pos.right.deleted) {\n                    if (count < pos.right.length) {\n                        // split right\n                        (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(pos.right.id.client, pos.right.id.clock + count));\n                    }\n                    pos.index += pos.right.length;\n                    count -= pos.right.length;\n                }\n                break;\n        }\n        pos.left = pos.right;\n        pos.right = pos.right.right;\n        // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n    }\n    return pos;\n};\nconst findPosition = (transaction, parent, index) => {\n    const currentAttributes = new Map();\n    const marker = (0, internals_1.findMarker)(parent, index);\n    if (marker) {\n        const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes);\n        return findNextPosition(transaction, pos, index - marker.index);\n    }\n    else {\n        const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes);\n        return findNextPosition(transaction, pos, index);\n    }\n};\n/** Negate applied formats */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n    // check if we really need to remove attributes\n    while (currPos.right !== null && (currPos.right.deleted === true || (currPos.right.content.constructor === internals_1.ContentFormat &&\n        equalAttrs(negatedAttributes.get(currPos.right.content.key), currPos.right.content.value)))) {\n        if (!currPos.right.deleted) {\n            negatedAttributes.delete(currPos.right.content.key);\n        }\n        currPos.forward();\n    }\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    negatedAttributes.forEach((val, key) => {\n        const left = currPos.left;\n        const right = currPos.right;\n        const nextFormat = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentFormat(key, val));\n        nextFormat.integrate(transaction, 0);\n        currPos.right = nextFormat;\n        currPos.forward();\n    });\n};\nconst updateCurrentAttributes = (currentAttributes, format) => {\n    const { key, value } = format;\n    if (value === null) {\n        currentAttributes.delete(key);\n    }\n    else {\n        currentAttributes.set(key, value);\n    }\n};\nconst minimizeAttributeChanges = (currPos, attributes) => {\n    // go right while attributes[right.key] === right.value (or right is deleted)\n    while (true) {\n        if (currPos.right === null) {\n            break;\n        }\n        else if (currPos.right.deleted || (currPos.right.content.constructor === internals_1.ContentFormat && equalAttrs(attributes[currPos.right.content.key] || null, currPos.right.content.value))) {\n            //\n        }\n        else {\n            break;\n        }\n        currPos.forward();\n    }\n};\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    const negatedAttributes = new Map();\n    // insert format-start items\n    for (const key in attributes) {\n        const val = attributes[key];\n        const currentVal = currPos.currentAttributes.get(key) || null;\n        if (!equalAttrs(currentVal, val)) {\n            // save negated attribute (set null if currentVal undefined)\n            negatedAttributes.set(key, currentVal);\n            const { left, right } = currPos;\n            currPos.right = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new internals_1.ContentFormat(key, val));\n            currPos.right.integrate(transaction, 0);\n            currPos.forward();\n        }\n    }\n    return negatedAttributes;\n};\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n    currPos.currentAttributes.forEach((_val, key) => {\n        if (attributes[key] === undefined) {\n            attributes[key] = null;\n        }\n    });\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    minimizeAttributeChanges(currPos, attributes);\n    const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n    // insert content\n    const content = text.constructor === String ? new internals_1.ContentString(text) : (text instanceof internals_1.AbstractType ? new internals_1.ContentType(text) : new internals_1.ContentEmbed(text));\n    let { left, right, index } = currPos;\n    if (parent._searchMarker) {\n        (0, internals_1.updateMarkerChanges)(parent._searchMarker, currPos.index, content.getLength());\n    }\n    right = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content);\n    right.integrate(transaction, 0);\n    currPos.right = right;\n    currPos.index = index;\n    currPos.forward();\n    insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n    const doc = transaction.doc;\n    const ownClientId = doc.clientID;\n    minimizeAttributeChanges(currPos, attributes);\n    const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes);\n    // iterate until first non-format or null is found\n    // delete all formats with attributes[format.key] != null\n    // also check the attributes after the first non-format as we do not want to insert redundant negated attributes there\n    // eslint-disable-next-line no-labels\n    iterationLoop: while (currPos.right !== null &&\n        (length > 0 ||\n            (negatedAttributes.size > 0 &&\n                (currPos.right.deleted || currPos.right.content.constructor === internals_1.ContentFormat)))) {\n        if (!currPos.right.deleted) {\n            switch (currPos.right.content.constructor) {\n                case internals_1.ContentFormat: {\n                    const { key, value } = currPos.right.content;\n                    const attr = attributes[key];\n                    if (attr !== undefined) {\n                        if (equalAttrs(attr, value)) {\n                            negatedAttributes.delete(key);\n                        }\n                        else {\n                            if (length === 0) {\n                                // no need to further extend negatedAttributes\n                                // eslint-disable-next-line no-labels\n                                break iterationLoop;\n                            }\n                            negatedAttributes.set(key, value);\n                        }\n                        currPos.right.delete(transaction);\n                    }\n                    else {\n                        currPos.currentAttributes.set(key, value);\n                    }\n                    break;\n                }\n                default:\n                    if (length < currPos.right.length) {\n                        (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(currPos.right.id.client, currPos.right.id.clock + length));\n                    }\n                    length -= currPos.right.length;\n                    break;\n            }\n        }\n        currPos.forward();\n    }\n    // Quill just assumes that the editor starts with a newline and that it always\n    // ends with a newline. We only insert that newline when a new newline is\n    // inserted - i.e when length is bigger than type.length\n    if (length > 0) {\n        let newlines = '';\n        for (; length > 0; length--) {\n            newlines += '\\n';\n        }\n        currPos.right = new internals_1.Item((0, internals_1.createID)(ownClientId, (0, internals_1.getState)(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new internals_1.ContentString(newlines));\n        currPos.right.integrate(transaction, 0);\n        currPos.forward();\n    }\n    insertNegatedAttributes(transaction, parent, currPos, negatedAttributes);\n};\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} curr exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} currAttributes\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, curr, startAttributes, currAttributes) => {\n    let end = start;\n    const endFormats = map.create();\n    while (end && (!end.countable || end.deleted)) {\n        if (!end.deleted && end.content.constructor === internals_1.ContentFormat) {\n            const cf = end.content;\n            endFormats.set(cf.key, cf);\n        }\n        end = end.right;\n    }\n    let cleanups = 0;\n    let reachedCurr = false;\n    while (start !== end) {\n        if (curr === start) {\n            reachedCurr = true;\n        }\n        if (!start.deleted) {\n            const content = start.content;\n            switch (content.constructor) {\n                case internals_1.ContentFormat: {\n                    const { key, value } = content;\n                    const startAttrValue = startAttributes.get(key) || null;\n                    if (endFormats.get(key) !== content || startAttrValue === value) {\n                        // Either this format is overwritten or it is not necessary because the attribute already existed.\n                        start.delete(transaction);\n                        cleanups++;\n                        if (!reachedCurr && (currAttributes.get(key) || null) === value && startAttrValue !== value) {\n                            if (startAttrValue === null) {\n                                currAttributes.delete(key);\n                            }\n                            else {\n                                currAttributes.set(key, startAttrValue);\n                            }\n                        }\n                    }\n                    if (!reachedCurr && !start.deleted) {\n                        updateCurrentAttributes(currAttributes, content);\n                    }\n                    break;\n                }\n            }\n        }\n        start = start.right;\n    }\n    return cleanups;\n};\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n    // iterate until item.right is null or content\n    while (item && item.right && (item.right.deleted || !item.right.countable)) {\n        item = item.right;\n    }\n    const attrs = new Set();\n    // iterate back until a content item is found\n    while (item && (item.deleted || !item.countable)) {\n        if (!item.deleted && item.content.constructor === internals_1.ContentFormat) {\n            const key = item.content.key;\n            if (attrs.has(key)) {\n                item.delete(transaction);\n            }\n            else {\n                attrs.add(key);\n            }\n        }\n        item = item.left;\n    }\n};\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nconst cleanupYTextFormatting = (type) => {\n    let res = 0;\n    (0, internals_1.transact)(type.doc, transaction => {\n        let start = type._start;\n        let end = type._start;\n        let startAttributes = map.create();\n        const currentAttributes = map.copy(startAttributes);\n        while (end) {\n            if (end.deleted === false) {\n                switch (end.content.constructor) {\n                    case internals_1.ContentFormat:\n                        updateCurrentAttributes(currentAttributes, end.content);\n                        break;\n                    default:\n                        res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes);\n                        startAttributes = map.copy(currentAttributes);\n                        start = end;\n                        break;\n                }\n            }\n            end = end.right;\n        }\n    });\n    return res;\n};\nexports.cleanupYTextFormatting = cleanupYTextFormatting;\nconst deleteText = (transaction, currPos, length) => {\n    const startLength = length;\n    const startAttrs = map.copy(currPos.currentAttributes);\n    const start = currPos.right;\n    while (length > 0 && currPos.right !== null) {\n        if (currPos.right.deleted === false) {\n            switch (currPos.right.content.constructor) {\n                case internals_1.ContentType:\n                case internals_1.ContentEmbed:\n                case internals_1.ContentString:\n                    if (length < currPos.right.length) {\n                        (0, internals_1.getItemCleanStart)(transaction, (0, internals_1.createID)(currPos.right.id.client, currPos.right.id.clock + length));\n                    }\n                    length -= currPos.right.length;\n                    currPos.right.delete(transaction);\n                    break;\n            }\n        }\n        currPos.forward();\n    }\n    if (start) {\n        cleanupFormattingGap(transaction, start, currPos.right, startAttrs, currPos.currentAttributes);\n    }\n    const parent = (currPos.left || currPos.right).parent;\n    if (parent._searchMarker) {\n        (0, internals_1.updateMarkerChanges)(parent._searchMarker, currPos.index, -startLength + length);\n    }\n    return currPos;\n};\n/** Event that describes the changes on a YText type. */\nclass YTextEvent extends internals_1.YEvent {\n    /**\n     * @param {YText} ytext\n     * @param {Transaction} transaction\n     * @param {Set<any>} subs The keys that changed\n     */\n    constructor(ytext, transaction, subs) {\n        super(ytext, transaction);\n        this._delta = [];\n        this._changes = null;\n        this.childListChanged = false;\n        this.keysChanged = new Set();\n        subs.forEach((sub) => {\n            if (sub === null) {\n                this.childListChanged = true;\n            }\n            else {\n                this.keysChanged.add(sub);\n            }\n        });\n    }\n    get changes() {\n        if (this._changes === null) {\n            this._changes = { keys: this.keys, delta: this.delta, added: new Set(), deleted: new Set() };\n        }\n        return this._changes;\n    }\n    /**\n     * Compute the changes in the delta format.\n     * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n     */\n    get delta() {\n        if (this._delta === null) {\n            const y = this.target.doc;\n            const delta = [];\n            (0, internals_1.transact)(y, transaction => {\n                const currentAttributes = new Map(); // saves all current attributes for insert\n                const oldAttributes = new Map();\n                let item = this.target._start;\n                let action = null;\n                const attributes = {}; // counts added or removed new attributes for retain\n                let insert = '';\n                let retain = 0;\n                let deleteLen = 0;\n                const addOp = () => {\n                    if (action !== null) {\n                        let op;\n                        switch (action) {\n                            case 'delete':\n                                op = { delete: deleteLen };\n                                deleteLen = 0;\n                                break;\n                            case 'insert':\n                                op = { insert };\n                                if (currentAttributes.size > 0) {\n                                    op.attributes = {};\n                                    currentAttributes.forEach((value, key) => {\n                                        if (value !== null) {\n                                            op.attributes[key] = value;\n                                        }\n                                    });\n                                }\n                                insert = '';\n                                break;\n                            case 'retain':\n                                op = { retain };\n                                if (Object.keys(attributes).length > 0) {\n                                    op.attributes = {};\n                                    for (const key in attributes) {\n                                        op.attributes[key] = attributes[key];\n                                    }\n                                }\n                                retain = 0;\n                                break;\n                        }\n                        delta.push(op);\n                        action = null;\n                    }\n                };\n                while (item !== null) {\n                    switch (item.content.constructor) {\n                        case internals_1.ContentType:\n                        case internals_1.ContentEmbed:\n                            if (this.adds(item)) {\n                                if (!this.deletes(item)) {\n                                    addOp();\n                                    action = 'insert';\n                                    insert = item.content.getContent()[0];\n                                    addOp();\n                                }\n                            }\n                            else if (this.deletes(item)) {\n                                if (action !== 'delete') {\n                                    addOp();\n                                    action = 'delete';\n                                }\n                                deleteLen += 1;\n                            }\n                            else if (!item.deleted) {\n                                if (action !== 'retain') {\n                                    addOp();\n                                    action = 'retain';\n                                }\n                                retain += 1;\n                            }\n                            break;\n                        case internals_1.ContentString:\n                            if (this.adds(item)) {\n                                if (!this.deletes(item)) {\n                                    if (action !== 'insert') {\n                                        addOp();\n                                        action = 'insert';\n                                    }\n                                    insert += item.content.str;\n                                }\n                            }\n                            else if (this.deletes(item)) {\n                                if (action !== 'delete') {\n                                    addOp();\n                                    action = 'delete';\n                                }\n                                deleteLen += item.length;\n                            }\n                            else if (!item.deleted) {\n                                if (action !== 'retain') {\n                                    addOp();\n                                    action = 'retain';\n                                }\n                                retain += item.length;\n                            }\n                            break;\n                        case internals_1.ContentFormat: {\n                            const { key, value } = item.content;\n                            if (this.adds(item)) {\n                                if (!this.deletes(item)) {\n                                    const curVal = currentAttributes.get(key) || null;\n                                    if (!equalAttrs(curVal, value)) {\n                                        if (action === 'retain') {\n                                            addOp();\n                                        }\n                                        if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                                            delete attributes[key];\n                                        }\n                                        else {\n                                            attributes[key] = value;\n                                        }\n                                    }\n                                    else if (value !== null) {\n                                        item.delete(transaction);\n                                    }\n                                }\n                            }\n                            else if (this.deletes(item)) {\n                                oldAttributes.set(key, value);\n                                const curVal = currentAttributes.get(key) || null;\n                                if (!equalAttrs(curVal, value)) {\n                                    if (action === 'retain') {\n                                        addOp();\n                                    }\n                                    attributes[key] = curVal;\n                                }\n                            }\n                            else if (!item.deleted) {\n                                oldAttributes.set(key, value);\n                                const attr = attributes[key];\n                                if (attr !== undefined) {\n                                    if (!equalAttrs(attr, value)) {\n                                        if (action === 'retain') {\n                                            addOp();\n                                        }\n                                        if (value === null) {\n                                            delete attributes[key];\n                                        }\n                                        else {\n                                            attributes[key] = value;\n                                        }\n                                    }\n                                    else if (attr !== null) { // this will be cleaned up automatically by the contextless cleanup function\n                                        item.delete(transaction);\n                                    }\n                                }\n                            }\n                            if (!item.deleted) {\n                                if (action === 'insert') {\n                                    addOp();\n                                }\n                                updateCurrentAttributes(currentAttributes, item.content);\n                            }\n                            break;\n                        }\n                    }\n                    item = item.right;\n                }\n                addOp();\n                while (delta.length > 0) {\n                    const lastOp = delta[delta.length - 1];\n                    if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n                        // retain delta's if they don't assign attributes\n                        delta.pop();\n                    }\n                    else {\n                        break;\n                    }\n                }\n            });\n            this._delta = delta;\n        }\n        return /** @type {any} */ (this._delta);\n    }\n}\nexports.YTextEvent = YTextEvent;\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n */\nclass YText extends internals_1.AbstractType {\n    /**\n     * @param {String} [string] The initial value of the YText.\n     */\n    constructor(string) {\n        super();\n        this._pending = string !== undefined ? [() => this.insert(0, string)] : [];\n        this._searchMarker = [];\n    }\n    /** Number of characters of this text type. */\n    get length() { return this._length; }\n    _integrate(y, item) {\n        var _a;\n        super._integrate(y, item);\n        try {\n            (_a = (this._pending)) === null || _a === void 0 ? void 0 : _a.forEach(f => f());\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this._pending = null;\n    }\n    _copy() {\n        return new YText();\n    }\n    clone() {\n        const text = new YText();\n        text.applyDelta(this.toDelta());\n        return text;\n    }\n    /**\n     * Creates YTextEvent and calls observers.\n     *\n     * @param {Transaction} transaction\n     * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n     */\n    _callObserver(transaction, parentSubs) {\n        super._callObserver(transaction, parentSubs);\n        const event = new YTextEvent(this, transaction, parentSubs);\n        const doc = transaction.doc;\n        (0, internals_1.callTypeObservers)(this, transaction, event);\n        // If a remote change happened, we try to cleanup potential formatting duplicates.\n        if (!transaction.local) {\n            // check if another formatting item was inserted\n            let foundFormattingItem = false;\n            for (const [client, afterClock] of transaction.afterState.entries()) {\n                const clock = transaction.beforeState.get(client) || 0;\n                if (afterClock === clock) {\n                    continue;\n                }\n                (0, internals_1.iterateStructs)(transaction, doc.store.clients.get(client), clock, afterClock, item => {\n                    if (!item.deleted && item.content.constructor === internals_1.ContentFormat) {\n                        foundFormattingItem = true;\n                    }\n                });\n                if (foundFormattingItem) {\n                    break;\n                }\n            }\n            if (!foundFormattingItem) {\n                (0, internals_1.iterateDeletedStructs)(transaction, transaction.deleteSet, item => {\n                    if (item instanceof internals_1.GC || foundFormattingItem) {\n                        return;\n                    }\n                    if (item.parent === this && item.content.constructor === internals_1.ContentFormat) {\n                        foundFormattingItem = true;\n                    }\n                });\n            }\n            (0, internals_1.transact)(doc, (t) => {\n                if (foundFormattingItem) {\n                    // If a formatting item was inserted, we simply clean the whole type.\n                    // We need to compute currentAttributes for the current position anyway.\n                    (0, exports.cleanupYTextFormatting)(this);\n                }\n                else {\n                    // If no formatting attribute was inserted, we can make due with contextless\n                    // formatting cleanups.\n                    // Contextless: it is not necessary to compute currentAttributes for the affected position.\n                    (0, internals_1.iterateDeletedStructs)(t, t.deleteSet, item => {\n                        if (item instanceof internals_1.GC) {\n                            return;\n                        }\n                        if (item.parent === this) {\n                            cleanupContextlessFormattingGap(t, item);\n                        }\n                    });\n                }\n            });\n        }\n    }\n    /** Returns the unformatted string representation of this YText type. */\n    toString() {\n        let str = '';\n        let n = this._start;\n        while (n !== null) {\n            if (!n.deleted && n.countable && n.content.constructor === internals_1.ContentString) {\n                str += n.content.str;\n            }\n            n = n.right;\n        }\n        return str;\n    }\n    /**Returns the unformatted string representation of this YText type. */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Apply a {@link Delta} on this shared YText type.\n     *\n     * @param {any} delta The changes to apply on this element.\n     * @param {object}    opts\n     * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n     *\n     *\n     * @public\n     */\n    applyDelta(delta, { sanitize = true } = {}) {\n        var _a;\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                const currPos = new ItemTextListPosition(null, this._start, 0, new Map());\n                for (let i = 0; i < delta.length; i++) {\n                    const op = delta[i];\n                    if (op.insert !== undefined) {\n                        // Quill assumes that the content starts with an empty paragraph.\n                        // Yjs/Y.Text assumes that it starts empty. We always hide that\n                        // there is a newline at the end of the content.\n                        // If we omit this step, clients will see a different number of\n                        // paragraphs, but nothing bad will happen.\n                        const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert;\n                        if (typeof ins !== 'string' || ins.length > 0) {\n                            insertText(transaction, this, currPos, ins, op.attributes || {});\n                        }\n                    }\n                    else if (op.retain !== undefined) {\n                        formatText(transaction, this, currPos, op.retain, op.attributes || {});\n                    }\n                    else if (op.delete !== undefined) {\n                        deleteText(transaction, currPos, op.delete);\n                    }\n                }\n            });\n        }\n        else {\n            (_a = this._pending) === null || _a === void 0 ? void 0 : _a.push(() => this.applyDelta(delta));\n        }\n    }\n    /** Returns the Delta representation of this YText type. */\n    toDelta(snapshot, prevSnapshot, computeYChange) {\n        const ops = [];\n        const currentAttributes = new Map();\n        const doc = this.doc;\n        let str = '';\n        let n = this._start;\n        function packStr() {\n            if (str.length > 0) {\n                // pack str with attributes to ops\n                const attributes = {};\n                let addAttributes = false;\n                currentAttributes.forEach((value, key) => {\n                    addAttributes = true;\n                    attributes[key] = value;\n                });\n                /**\n                 * @type {Object<string,any>}\n                 */\n                const op = { insert: str };\n                if (addAttributes) {\n                    op.attributes = attributes;\n                }\n                ops.push(op);\n                str = '';\n            }\n        }\n        // snapshots are merged again after the transaction, so we need to keep the\n        // transalive until we are done\n        (0, internals_1.transact)(doc, transaction => {\n            if (snapshot) {\n                (0, internals_1.splitSnapshotAffectedStructs)(transaction, snapshot);\n            }\n            if (prevSnapshot) {\n                (0, internals_1.splitSnapshotAffectedStructs)(transaction, prevSnapshot);\n            }\n            while (n !== null) {\n                if ((0, internals_1.isVisible)(n, snapshot) || (prevSnapshot !== undefined && (0, internals_1.isVisible)(n, prevSnapshot))) {\n                    switch (n.content.constructor) {\n                        case internals_1.ContentString: {\n                            const cur = currentAttributes.get('ychange');\n                            if (snapshot !== undefined && !(0, internals_1.isVisible)(n, snapshot)) {\n                                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'removed') {\n                                    packStr();\n                                    currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' });\n                                }\n                            }\n                            else if (prevSnapshot !== undefined && !(0, internals_1.isVisible)(n, prevSnapshot)) {\n                                if (cur === undefined || cur.user !== n.id.client || cur.type !== 'added') {\n                                    packStr();\n                                    currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' });\n                                }\n                            }\n                            else if (cur !== undefined) {\n                                packStr();\n                                currentAttributes.delete('ychange');\n                            }\n                            str += n.content.str;\n                            break;\n                        }\n                        case internals_1.ContentType:\n                        case internals_1.ContentEmbed: {\n                            packStr();\n                            const op = {\n                                insert: n.content.getContent()[0]\n                            };\n                            if (currentAttributes.size > 0) {\n                                const attrs = ({});\n                                op.attributes = attrs;\n                                currentAttributes.forEach((value, key) => {\n                                    attrs[key] = value;\n                                });\n                            }\n                            ops.push(op);\n                            break;\n                        }\n                        case internals_1.ContentFormat:\n                            if ((0, internals_1.isVisible)(n, snapshot)) {\n                                packStr();\n                                updateCurrentAttributes(currentAttributes, n.content);\n                            }\n                            break;\n                    }\n                }\n                n = n.right;\n            }\n            packStr();\n        }, 'cleanup');\n        return ops;\n    }\n    /**\n     * Insert text at a given index.\n     *\n     * @param {number} index The index at which to start inserting.\n     * @param {String} text The text to insert at the specified position.\n     * @param {TextAttributes} [attributes] Optionally define some formatting\n     *                                                                        information to apply on the inserted\n     *                                                                        Text.\n     * @public\n     */\n    insert(index, text, attributes) {\n        var _a;\n        if (text.length <= 0) {\n            return;\n        }\n        const y = this.doc;\n        if (y !== null) {\n            (0, internals_1.transact)(y, transaction => {\n                const pos = findPosition(transaction, this, index);\n                if (!attributes) {\n                    attributes = {};\n                    pos.currentAttributes.forEach((v, k) => { attributes[k] = v; });\n                }\n                insertText(transaction, this, pos, text, attributes);\n            });\n        }\n        else {\n            (_a = (this._pending)) === null || _a === void 0 ? void 0 : _a.push(() => this.insert(index, text, attributes));\n        }\n    }\n    /**\n     * Inserts an embed at a index.\n     *\n     * @param {number} index The index to insert the embed at.\n     * @param {Object | AbstractType<any>} embed The Object that represents the embed.\n     * @param {TextAttributes} attributes Attribute information to apply on the\n     *                                                                        embed\n     *\n     * @public\n     */\n    insertEmbed(index, embed, attributes = {}) {\n        var _a;\n        const y = this.doc;\n        if (y !== null) {\n            (0, internals_1.transact)(y, transaction => {\n                const pos = findPosition(transaction, this, index);\n                insertText(transaction, this, pos, embed, attributes);\n            });\n        }\n        else {\n            (_a = (this._pending)) === null || _a === void 0 ? void 0 : _a.push(() => this.insertEmbed(index, embed, attributes));\n        }\n    }\n    /**\n     * Deletes text starting from an index.\n     *\n     * @param {number} index Index at which to start deleting.\n     * @param {number} length The number of characters to remove. Defaults to 1.\n     *\n     * @public\n     */\n    delete(index, length) {\n        var _a;\n        if (length === 0) {\n            return;\n        }\n        const y = this.doc;\n        if (y !== null) {\n            (0, internals_1.transact)(y, transaction => {\n                deleteText(transaction, findPosition(transaction, this, index), length);\n            });\n        }\n        else {\n            (_a = (this._pending)) === null || _a === void 0 ? void 0 : _a.push(() => this.delete(index, length));\n        }\n    }\n    /**\n     * Assigns properties to a range of text.\n     *\n     * @param {number} index The position where to start formatting.\n     * @param {number} length The amount of characters to assign properties to.\n     * @param {TextAttributes} attributes Attribute information to apply on the\n     *                                                                        text.\n     *\n     * @public\n     */\n    format(index, length, attributes) {\n        var _a;\n        if (length === 0) {\n            return;\n        }\n        const y = this.doc;\n        if (y !== null) {\n            (0, internals_1.transact)(y, transaction => {\n                const pos = findPosition(transaction, this, index);\n                if (pos.right === null) {\n                    return;\n                }\n                formatText(transaction, this, pos, length, attributes);\n            });\n        }\n        else {\n            (_a = this._pending) === null || _a === void 0 ? void 0 : _a.push(() => this.format(index, length, attributes));\n        }\n    }\n    /**\n     * Removes an attribute.\n     *\n     * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n     *\n     * @param {String} attributeName The attribute name that is to be removed.\n     *\n     * @public\n     */\n    removeAttribute(attributeName) {\n        var _a;\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapDelete)(transaction, this, attributeName);\n            });\n        }\n        else {\n            (_a = this._pending) === null || _a === void 0 ? void 0 : _a.push(() => this.removeAttribute(attributeName));\n        }\n    }\n    /**\n     * Sets or updates an attribute.\n     *\n     * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n     *\n     * @param {String} attributeName The attribute name that is to be set.\n     * @param {any} attributeValue The attribute value that is to be set.\n     *\n     * @public\n     */\n    setAttribute(attributeName, attributeValue) {\n        var _a;\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapSet)(transaction, this, attributeName, attributeValue);\n            });\n        }\n        else {\n            (_a = this._pending) === null || _a === void 0 ? void 0 : _a.push(() => this.setAttribute(attributeName, attributeValue));\n        }\n    }\n    /**\n     * Returns an attribute value that belongs to the attribute name.\n     *\n     * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n     *\n     * @param {String} attributeName The attribute name that identifies the\n     *                                                             queried value.\n     * @return {any} The queried attribute value.\n     *\n     * @public\n     */\n    getAttribute(attributeName) {\n        return /** @type {any} */ ((0, internals_1.typeMapGet)(this, attributeName));\n    }\n    /**\n     * Returns all attribute name/value pairs in a JSON Object.\n     *\n     * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n     *\n     * @return {Object<string, any>} A JSON Object that describes the attributes.\n     *\n     * @public\n     */\n    getAttributes() {\n        return (0, internals_1.typeMapGetAll)(this);\n    }\n    /**\n     * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n     */\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YTextRefID);\n    }\n}\nexports.YText = YText;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nconst readYText = (_decoder) => {\n    return new YText();\n};\nexports.readYText = readYText;\n","\"use strict\";\n/**\n * @module YXml\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYXmlFragment = exports.YXmlFragment = exports.YXmlTreeWalker = void 0;\nconst internals_1 = require(\"../internals\");\nconst error = require(\"lib0/error\");\nconst array = require(\"lib0/array\");\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nclass YXmlTreeWalker {\n    constructor(root, f = () => true) {\n        this._filter = f;\n        this._root = root;\n        this._currentNode = root._start;\n        this._firstCall = true;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    /** Get the next node. */\n    next() {\n        let n = this._currentNode;\n        let type = n && n.content && n.content.type;\n        if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n            do {\n                type = n.content.type;\n                if (!n.deleted && (type.constructor === internals_1.YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n                    // walk down in the tree\n                    n = type._start;\n                }\n                else {\n                    // walk right or up in the tree\n                    while (n !== null) {\n                        if (n.right !== null) {\n                            n = n.right;\n                            break;\n                        }\n                        else if (n.parent === this._root) {\n                            n = null;\n                        }\n                        else {\n                            n = n.parent._item;\n                        }\n                    }\n                }\n            } while (n !== null && (n.deleted || !this._filter(n.content.type)));\n        }\n        this._firstCall = false;\n        if (n === null) {\n            // @ts-ignore\n            return { value: undefined, done: true };\n        }\n        this._currentNode = n;\n        return { value: n.content.type, done: false };\n    }\n}\nexports.YXmlTreeWalker = YXmlTreeWalker;\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n */\nclass YXmlFragment extends internals_1.AbstractType {\n    constructor() {\n        super();\n        this._prelimContent = [];\n    }\n    get firstChild() {\n        const first = this._first;\n        return first ? first.content.getContent()[0] : null;\n    }\n    /**\n     * Integrate this type into the Yjs instance.\n     *\n     * * Save this struct in the os\n     * * This type is sent to other client\n     * * Observer functions are fired\n     */\n    _integrate(y, item) {\n        super._integrate(y, item);\n        this.insert(0, this._prelimContent);\n        this._prelimContent = null;\n    }\n    _copy() {\n        return new YXmlFragment();\n    }\n    clone() {\n        const el = new YXmlFragment();\n        // @ts-ignore\n        el.insert(0, this.toArray().map(item => item instanceof internals_1.AbstractType ? item.clone() : item));\n        return el;\n    }\n    get length() {\n        return this._prelimContent === null ? this._length : this._prelimContent.length;\n    }\n    /**\n     * Create a subtree of childNodes.\n     *\n     * @example\n     * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n     * for (let node in walker) {\n     *     // `node` is a div node\n     *     nop(node)\n     * }\n     *\n     * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n     *                                                    returns a Boolean indicating whether the child\n     *                                                    is to be included in the subtree.\n     * @return {YXmlTreeWalker} A subtree and a position within it.\n     *\n     * @public\n     */\n    createTreeWalker(filter) {\n        return new YXmlTreeWalker(this, filter);\n    }\n    /**\n     * Returns the first YXmlElement that matches the query.\n     * Similar to DOM's {@link querySelector}.\n     *\n     * Query support:\n     *     - tagname\n     * TODO:\n     *     - id\n     *     - attribute\n     *\n     * @param {CSS_Selector} query The query on the children.\n     * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n     *\n     * @public\n     */\n    querySelector(query) {\n        query = query.toUpperCase();\n        // @ts-ignore\n        const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query);\n        const next = iterator.next();\n        if (next.done) {\n            return null;\n        }\n        else {\n            return next.value;\n        }\n    }\n    /**\n     * Returns all YXmlElements that match the query.\n     * Similar to Dom's {@link querySelectorAll}.\n     *\n     * @todo Does not yet support all queries. Currently only query by tagName.\n     *\n     * @param {CSS_Selector} query The query on the children\n     * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n     *\n     * @public\n     */\n    querySelectorAll(query) {\n        query = query.toUpperCase();\n        // @ts-ignore\n        return array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query));\n    }\n    /**\n     * Creates YXmlEvent and calls observers.\n     *\n     * @param {Transaction} transaction\n     * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n     */\n    _callObserver(transaction, parentSubs) {\n        (0, internals_1.callTypeObservers)(this, transaction, new internals_1.YXmlEvent(this, parentSubs, transaction));\n    }\n    /**\n     * Get the string representation of all the children of this YXmlFragment.\n     *\n     * @return {string} The string representation of all children.\n     */\n    toString() {\n        return (0, internals_1.typeListMap)(this, xml => xml.toString()).join('');\n    }\n    /**\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Creates a Dom Element that mirrors this YXmlElement.\n     *\n     * @param {Document} [_document=document] The document object (you must define\n     *                                                                                this when calling this method in\n     *                                                                                nodejs)\n     * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n     *                                                                                         are presented in the DOM\n     * @param {any} [binding] You should not set this property. This is\n     *                                                             used if DomBinding wants to create a\n     *                                                             association to the created DOM type.\n     * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n     *\n     * @public\n     */\n    toDOM(_document = document, hooks = {}, binding) {\n        const fragment = _document.createDocumentFragment();\n        if (binding !== undefined) {\n            binding._createAssociation(fragment, this);\n        }\n        (0, internals_1.typeListForEach)(this, xmlType => {\n            fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null);\n        });\n        return fragment;\n    }\n    /**\n     * Inserts new content at an index.\n     *\n     * @example\n     *    // Insert character 'a' at position 0\n     *    xml.insert(0, [new Y.XmlText('text')])\n     *\n     * @param {number} index The index to insert content at\n     * @param {Array<YXmlElement|YXmlText>} content The array of content\n     */\n    insert(index, content) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeListInsertGenerics)(transaction, this, index, content);\n            });\n        }\n        else {\n            // @ts-ignore _prelimContent is defined because this is not yet integrated\n            this._prelimContent.splice(index, 0, ...content);\n        }\n    }\n    /**\n     * Inserts new content at an index.\n     *\n     * @example\n     *    // Insert character 'a' at position 0\n     *    xml.insert(0, [new Y.XmlText('text')])\n     *\n     * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n     * @param {Array<YXmlElement|YXmlText>} content The array of content\n     */\n    insertAfter(ref, content) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                const refItem = (ref && ref instanceof internals_1.AbstractType) ? ref._item : ref;\n                (0, internals_1.typeListInsertGenericsAfter)(transaction, this, refItem, content);\n            });\n        }\n        else {\n            const pc = this._prelimContent;\n            const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1;\n            if (index === 0 && ref !== null) {\n                throw error.create('Reference item not found');\n            }\n            pc.splice(index, 0, ...content);\n        }\n    }\n    /**\n     * Deletes elements starting from an index.\n     *\n     * @param {number} index Index at which to start deleting elements\n     * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n     */\n    delete(index, length = 1) {\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeListDelete)(transaction, this, index, length);\n            });\n        }\n        else {\n            // @ts-ignore _prelimContent is defined because this is not yet integrated\n            this._prelimContent.splice(index, length);\n        }\n    }\n    /**\n     * Transforms this YArray to a JavaScript Array.\n     *\n     * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n     */\n    toArray() {\n        return (0, internals_1.typeListToArray)(this);\n    }\n    /**\n     * Appends content to this YArray.\n     *\n     * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n     */\n    push(content) {\n        this.insert(this.length, content);\n    }\n    /**\n     * Preppends content to this YArray.\n     *\n     * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n     */\n    unshift(content) {\n        this.insert(0, content);\n    }\n    /**\n     * Returns the i-th element from a YArray.\n     *\n     * @param {number} index The index of the element to return from the YArray\n     * @return {YXmlElement|YXmlText}\n     */\n    get(index) {\n        return (0, internals_1.typeListGet)(this, index);\n    }\n    /**\n     * Transforms this YArray to a JavaScript Array.\n     *\n     * @param {number} [start]\n     * @param {number} [end]\n     * @return {Array<YXmlElement|YXmlText>}\n     */\n    slice(start = 0, end = this.length) {\n        return (0, internals_1.typeListSlice)(this, start, end);\n    }\n    /**\n     * Executes a provided function on once on overy child element.\n     *\n     * @param {function(YXmlElement|YXmlText,number, typeof self):void} f A function to execute on every element of this YArray.\n     */\n    forEach(f) {\n        (0, internals_1.typeListForEach)(this, f);\n    }\n    /**\n     * Transform the properties of this type to binary and write it to an\n     * BinaryEncoder.\n     *\n     * This is called when this Item is sent to a remote peer.\n     *\n     * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n     */\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YXmlFragmentRefID);\n    }\n}\nexports.YXmlFragment = YXmlFragment;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} _decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nconst readYXmlFragment = (_decoder) => new YXmlFragment();\nexports.readYXmlFragment = readYXmlFragment;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYXmlElement = exports.YXmlElement = void 0;\nconst internals_1 = require(\"../internals\");\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nclass YXmlElement extends internals_1.YXmlFragment {\n    constructor(nodeName = 'UNDEFINED') {\n        super();\n        this._prelimAttrs = new Map();\n        this.nodeName = nodeName;\n    }\n    get nextSibling() {\n        const n = this._item ? this._item.next : null;\n        return n ? n.content.type : null;\n    }\n    get prevSibling() {\n        const n = this._item ? this._item.prev : null;\n        return n ? n.content.type : null;\n    }\n    /**\n     * Integrate this type into the Yjs instance.\n     *\n     * * Save this struct in the os\n     * * This type is sent to other client\n     * * Observer functions are fired\n     */\n    _integrate(y, item) {\n        var _a;\n        super._integrate(y, item);\n        (_a = this._prelimAttrs) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {\n            this.setAttribute(key, value);\n        });\n        this._prelimAttrs = null;\n    }\n    /** Creates an Item with the same effect as this Item (without position effect) */\n    _copy() {\n        return new YXmlElement(this.nodeName);\n    }\n    clone() {\n        const el = new YXmlElement(this.nodeName);\n        const attrs = this.getAttributes();\n        for (const key in attrs) {\n            el.setAttribute(key, attrs[key]);\n        }\n        el.insert(0, this.toArray().map((item) => {\n            return (item instanceof internals_1.AbstractType ? item.clone() : item);\n        }));\n        return el;\n    }\n    /**\n     * Returns the XML serialization of this YXmlElement.\n     * The attributes are ordered by attribute-name, so you can easily use this\n     * method to compare YXmlElements\n     *\n     * @return {string} The string representation of this type.\n     *\n     * @public\n     */\n    toString() {\n        const attrs = this.getAttributes();\n        const stringBuilder = [];\n        const keys = [];\n        for (const key in attrs) {\n            keys.push(key);\n        }\n        keys.sort();\n        const keysLen = keys.length;\n        for (let i = 0; i < keysLen; i++) {\n            const key = keys[i];\n            stringBuilder.push(key + '=\"' + attrs[key] + '\"');\n        }\n        const nodeName = this.nodeName.toLocaleLowerCase();\n        const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : '';\n        return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`;\n    }\n    /**\n     * Removes an attribute from this YXmlElement.\n     *\n     * @param {String} attributeName The attribute name that is to be removed.\n     *\n     * @public\n     */\n    removeAttribute(attributeName) {\n        var _a;\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapDelete)(transaction, this, attributeName);\n            });\n        }\n        else {\n            (_a = this._prelimAttrs) === null || _a === void 0 ? void 0 : _a.delete(attributeName);\n        }\n    }\n    /**\n     * Sets or updates an attribute.\n     *\n     * @param {String} attributeName The attribute name that is to be set.\n     * @param {String} attributeValue The attribute value that is to be set.\n     *\n     * @public\n     */\n    setAttribute(attributeName, attributeValue) {\n        var _a;\n        if (this.doc !== null) {\n            (0, internals_1.transact)(this.doc, transaction => {\n                (0, internals_1.typeMapSet)(transaction, this, attributeName, attributeValue);\n            });\n        }\n        else {\n            (_a = this._prelimAttrs) === null || _a === void 0 ? void 0 : _a.set(attributeName, attributeValue);\n        }\n    }\n    /**\n     * Returns an attribute value that belongs to the attribute name.\n     *\n     * @param {String} attributeName The attribute name that identifies the\n     *                                                             queried value.\n     * @return {String} The queried attribute value.\n     *\n     * @public\n     */\n    getAttribute(attributeName) {\n        return (0, internals_1.typeMapGet)(this, attributeName);\n    }\n    /**\n     * Returns whether an attribute exists\n     *\n     * @param {String} attributeName The attribute name to check for existence.\n     * @return {boolean} whether the attribute exists.\n     *\n     * @public\n     */\n    hasAttribute(attributeName) {\n        return /** @type {any} */ ((0, internals_1.typeMapHas)(this, attributeName));\n    }\n    /** Returns all attribute name/value pairs in a JSON Object. */\n    getAttributes() {\n        return (0, internals_1.typeMapGetAll)(this);\n    }\n    /**\n     * Creates a Dom Element that mirrors this YXmlElement.\n     *\n     * @param {Document} [_document=document] The document object (you must define\n     *                                                                                this when calling this method in\n     *                                                                                nodejs)\n     * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n     *                                                                                         are presented in the DOM\n     * @param {any} [binding] You should not set this property. This is\n     *                                                             used if DomBinding wants to create a\n     *                                                             association to the created DOM type.\n     * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n     *\n     * @public\n     */\n    toDOM(_document = document, hooks = {}, binding) {\n        const dom = _document.createElement(this.nodeName);\n        const attrs = this.getAttributes();\n        for (const key in attrs) {\n            dom.setAttribute(key, attrs[key]);\n        }\n        (0, internals_1.typeListForEach)(this, yxml => {\n            dom.appendChild(yxml.toDOM(_document, hooks, binding));\n        });\n        if (binding !== undefined) {\n            binding._createAssociation(dom, this);\n        }\n        return dom;\n    }\n    /**\n     * Transform the properties of this type to binary and write it to an\n     * BinaryEncoder.\n     *\n     * This is called when this Item is sent to a remote peer.\n     *\n     * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n     */\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YXmlElementRefID);\n        encoder.writeKey(this.nodeName);\n    }\n}\nexports.YXmlElement = YXmlElement;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nconst readYXmlElement = (decoder) => {\n    return new YXmlElement(decoder.readKey());\n};\nexports.readYXmlElement = readYXmlElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.YXmlEvent = void 0;\nconst internals_1 = require(\"../internals\");\n/**\n * @extends YEvent<YXmlElement|YXmlText|YXmlFragment>\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nclass YXmlEvent extends internals_1.YEvent {\n    /**\n     * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n     * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n     *                                     child list changed.\n     * @param {Transaction} transaction The transaction instance with wich the\n     *                                                                    change was created.\n     */\n    constructor(target, subs, transaction) {\n        super(target, transaction);\n        this.childListChanged = false;\n        this.attributesChanged = new Set();\n        subs.forEach((sub) => {\n            if (sub === null) {\n                this.childListChanged = true;\n            }\n            else {\n                this.attributesChanged.add(sub);\n            }\n        });\n    }\n}\nexports.YXmlEvent = YXmlEvent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYXmlHook = exports.YXmlHook = void 0;\nconst internals_1 = require(\"../internals\");\n/**\n * You can manage binding to a custom type with YXmlHook.\n */\nclass YXmlHook extends internals_1.YMap {\n    /**\n     * @param {string} hookName nodeName of the Dom Node.\n     */\n    constructor(hookName) {\n        super();\n        this.hookName = hookName;\n    }\n    /**\n     * Creates an Item with the same effect as this Item (without position effect)\n     */\n    _copy() {\n        return new YXmlHook(this.hookName);\n    }\n    clone() {\n        const el = new YXmlHook(this.hookName);\n        this.forEach((value, key) => {\n            el.set(key, value);\n        });\n        return el;\n    }\n    /**\n     * Creates a Dom Element that mirrors this YXmlElement.\n     *\n     * @param {Document} [_document=document] The document object (you must define\n     *                                                                                this when calling this method in\n     *                                                                                nodejs)\n     * @param {Object.<string, any>} [hooks] Optional property to customize how hooks\n     *                                                                                         are presented in the DOM\n     * @param {any} [binding] You should not set this property. This is\n     *                                                             used if DomBinding wants to create a\n     *                                                             association to the created DOM type\n     * @return {Element} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n     *\n     * @public\n     */\n    toDOM(_document = document, hooks = {}, binding) {\n        const hook = hooks[this.hookName];\n        let dom;\n        if (hook !== undefined) {\n            dom = hook.createDom(this);\n        }\n        else {\n            dom = document.createElement(this.hookName);\n        }\n        dom.setAttribute('data-yjs-hook', this.hookName);\n        if (binding !== undefined) {\n            binding._createAssociation(dom, this);\n        }\n        return dom;\n    }\n    /**\n     * Transform the properties of this type to binary and write it to an\n     * BinaryEncoder.\n     *\n     * This is called when this Item is sent to a remote peer.\n     */\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YXmlHookRefID);\n        encoder.writeKey(this.hookName);\n    }\n}\nexports.YXmlHook = YXmlHook;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlHook}\n *\n * @private\n * @function\n */\nconst readYXmlHook = (decoder) => {\n    return new YXmlHook(decoder.readKey());\n};\nexports.readYXmlHook = readYXmlHook;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readYXmlText = exports.YXmlText = void 0;\nconst internals_1 = require(\"../internals\");\n/**\n * Represents text in a Dom Element. In the future this type will also handle\n * simple formatting information like bold and italic.\n */\nclass YXmlText extends internals_1.YText {\n    get nextSibling() {\n        const n = this._item ? this._item.next : null;\n        return n ? n.content.type : null;\n    }\n    get prevSibling() {\n        const n = this._item ? this._item.prev : null;\n        return n ? n.content.type : null;\n    }\n    _copy() {\n        return new YXmlText();\n    }\n    clone() {\n        const text = new YXmlText();\n        text.applyDelta(this.toDelta());\n        return text;\n    }\n    /**\n     * Creates a Dom Element that mirrors this YXmlText.\n     *\n     * @param {Document} [_document=document] The document object (you must define\n     *                                                                                this when calling this method in\n     *                                                                                nodejs)\n     * @param {Object<string, any>} [hooks] Optional property to customize how hooks\n     *                                                                                         are presented in the DOM\n     * @param {any} [binding] You should not set this property. This is\n     *                                                             used if DomBinding wants to create a\n     *                                                             association to the created DOM type.\n     * @return {Text} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n     *\n     * @public\n     */\n    toDOM(_document = document, hooks, binding) {\n        const dom = _document.createTextNode(this.toString());\n        if (binding !== undefined) {\n            binding._createAssociation(dom, this);\n        }\n        return dom;\n    }\n    toString() {\n        // @ts-ignore\n        return this.toDelta().map(delta => {\n            const nestedNodes = [];\n            for (const nodeName in delta.attributes) {\n                const attrs = [];\n                for (const key in delta.attributes[nodeName]) {\n                    attrs.push({ key, value: delta.attributes[nodeName][key] });\n                }\n                // sort attributes to get a unique order\n                attrs.sort((a, b) => a.key < b.key ? -1 : 1);\n                nestedNodes.push({ nodeName, attrs });\n            }\n            // sort node order to get a unique order\n            nestedNodes.sort((a, b) => a.nodeName < b.nodeName ? -1 : 1);\n            // now convert to dom string\n            let str = '';\n            for (let i = 0; i < nestedNodes.length; i++) {\n                const node = nestedNodes[i];\n                str += `<${node.nodeName}`;\n                for (let j = 0; j < node.attrs.length; j++) {\n                    const attr = node.attrs[j];\n                    str += ` ${attr.key}=\"${attr.value}\"`;\n                }\n                str += '>';\n            }\n            str += delta.insert;\n            for (let i = nestedNodes.length - 1; i >= 0; i--) {\n                str += `</${nestedNodes[i].nodeName}>`;\n            }\n            return str;\n        }).join('');\n    }\n    toJSON() {\n        return this.toString();\n    }\n    _write(encoder) {\n        encoder.writeTypeRef(internals_1.YXmlTextRefID);\n    }\n}\nexports.YXmlText = YXmlText;\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlText}\n *\n * @private\n * @function\n */\nconst readYXmlText = (decoder) => {\n    return new YXmlText();\n};\nexports.readYXmlText = readYXmlText;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractStruct = void 0;\nconst error = require(\"lib0/error\");\nclass AbstractStruct {\n    constructor(id, length) {\n        this.id = id;\n        this.length = length;\n    }\n    get deleted() {\n        throw error.methodUnimplemented();\n    }\n    /**\n     * Merge this struct with the item to the right.\n     * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n     * Also this method does *not* remove right from StructStore!\n     * @param {AbstractStruct} right\n     * @return {boolean} wether this merged with right\n     */\n    mergeWith(right) {\n        return false;\n    }\n    /**\n     * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n     * @param {number} offset\n     * @param {number} encodingRef\n     */\n    write(encoder, offset, encodingRef) {\n        throw error.methodUnimplemented();\n    }\n    /**\n     * @param {Transaction} transaction\n     * @param {number} offset\n     */\n    integrate(transaction, offset) {\n        throw error.methodUnimplemented();\n    }\n}\nexports.AbstractStruct = AbstractStruct;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GC = exports.structGCRefNumber = void 0;\nconst internals_1 = require(\"../internals\");\nexports.structGCRefNumber = 0;\n// AbstractStruct で constructor チェックをしている部分はないので、implements にして良い\nclass GC {\n    constructor(id, length) {\n        this.id = id;\n        this.length = length;\n    }\n    get deleted() { return true; }\n    delete() { }\n    mergeWith(right) {\n        if (this.constructor !== right.constructor) {\n            return false;\n        }\n        this.length += right.length;\n        return true;\n    }\n    integrate(transaction, offset) {\n        if (offset > 0) {\n            this.id.clock += offset;\n            this.length -= offset;\n        }\n        (0, internals_1.addStruct)(transaction.doc.store, this);\n    }\n    write(encoder, offset) {\n        encoder.writeInfo(exports.structGCRefNumber);\n        encoder.writeLen(this.length - offset);\n    }\n    getMissing(transaction, store) {\n        return null;\n    }\n}\nexports.GC = GC;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentBinary = exports.ContentBinary = void 0;\nconst error = require(\"lib0/error\");\nclass ContentBinary {\n    constructor(content) {\n        this.content = content;\n    }\n    getLength() { return 1; }\n    getContent() { return [this.content]; }\n    isCountable() { return true; }\n    copy() { return new ContentBinary(this.content); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { return false; }\n    integrate(transaction, item) { }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) { encoder.writeBuf(this.content); }\n    getRef() { return 3; }\n}\nexports.ContentBinary = ContentBinary;\nconst readContentBinary = decoder => {\n    return new ContentBinary(decoder.readBuf());\n};\nexports.readContentBinary = readContentBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentDeleted = exports.ContentDeleted = void 0;\nconst internals_1 = require(\"../internals\");\nclass ContentDeleted {\n    constructor(len) {\n        this.len = len;\n    }\n    getLength() { return this.len; }\n    getContent() { return []; }\n    isCountable() { return false; }\n    copy() { return new ContentDeleted(this.len); }\n    splice(offset) {\n        const right = new ContentDeleted(this.len - offset);\n        this.len = offset;\n        return right;\n    }\n    mergeWith(right) {\n        this.len += right.len;\n        return true;\n    }\n    integrate(transaction, item) {\n        (0, internals_1.addToDeleteSet)(transaction.deleteSet, item.id.client, item.id.clock, this.len);\n        item.markDeleted();\n    }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) { encoder.writeLen(this.len - offset); }\n    getRef() { return 1; }\n}\nexports.ContentDeleted = ContentDeleted;\nconst readContentDeleted = decoder => {\n    return new ContentDeleted(decoder.readLen());\n};\nexports.readContentDeleted = readContentDeleted;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentDoc = exports.ContentDoc = void 0;\nconst internals_1 = require(\"../internals\");\nconst error = require(\"lib0/error\");\nconst createDocFromOpts = (guid, opts) => {\n    return new internals_1.Doc(Object.assign(Object.assign({ guid }, opts), { shouldLoad: opts.shouldLoad || opts.autoLoad || false }));\n};\nclass ContentDoc {\n    constructor(doc) {\n        if (doc._item) {\n            console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.');\n        }\n        this.doc = doc;\n        const opts = {};\n        if (!doc.gc) {\n            opts.gc = false;\n        }\n        if (doc.autoLoad) {\n            opts.autoLoad = true;\n        }\n        if (doc.meta !== null) {\n            opts.meta = doc.meta;\n        }\n        this.opts = opts;\n    }\n    getLength() { return 1; }\n    getContent() { return [this.doc]; }\n    isCountable() { return true; }\n    copy() { return new ContentDoc(createDocFromOpts(this.doc.guid, this.opts)); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { return false; }\n    integrate(transaction, item) {\n        // this needs to be reflected in doc.destroy as well\n        this.doc._item = item;\n        transaction.subdocsAdded.add(this.doc);\n        if (this.doc.shouldLoad) {\n            transaction.subdocsLoaded.add(this.doc);\n        }\n    }\n    delete(transaction) {\n        if (transaction.subdocsAdded.has(this.doc)) {\n            transaction.subdocsAdded.delete(this.doc);\n        }\n        else {\n            transaction.subdocsRemoved.add(this.doc);\n        }\n    }\n    gc(store) { }\n    write(encoder, offset) {\n        encoder.writeString(this.doc.guid);\n        encoder.writeAny(this.opts);\n    }\n    getRef() { return 9; }\n}\nexports.ContentDoc = ContentDoc;\nconst readContentDoc = decoder => {\n    return new ContentDoc(createDocFromOpts(decoder.readString(), decoder.readAny()));\n};\nexports.readContentDoc = readContentDoc;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentEmbed = exports.ContentEmbed = void 0;\nconst error = require(\"lib0/error\");\nclass ContentEmbed {\n    constructor(embed) {\n        this.embed = embed;\n    }\n    getLength() { return 1; }\n    getContent() { return [this.embed]; }\n    isCountable() { return true; }\n    copy() { return new ContentEmbed(this.embed); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { return false; }\n    integrate(transaction, item) { }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) { encoder.writeJSON(this.embed); }\n    getRef() { return 5; }\n}\nexports.ContentEmbed = ContentEmbed;\nconst readContentEmbed = decoder => {\n    return new ContentEmbed(decoder.readJSON());\n};\nexports.readContentEmbed = readContentEmbed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentFormat = exports.ContentFormat = void 0;\nconst error = require(\"lib0/error\");\nclass ContentFormat {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    getLength() { return 1; }\n    getContent() { return []; }\n    isCountable() { return false; }\n    copy() { return new ContentFormat(this.key, this.value); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { return false; }\n    integrate(transaction, item) {\n        // @todo searchmarker are currently unsupported for rich text documents\n        item.parent._searchMarker = null;\n    }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) {\n        encoder.writeKey(this.key);\n        encoder.writeJSON(this.value);\n    }\n    getRef() { return 6; }\n}\nexports.ContentFormat = ContentFormat;\nconst readContentFormat = decoder => {\n    return new ContentFormat(decoder.readKey(), decoder.readJSON());\n};\nexports.readContentFormat = readContentFormat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentJSON = exports.ContentJSON = void 0;\n/**\n * @private\n */\nclass ContentJSON {\n    constructor(arr) {\n        this.arr = arr;\n    }\n    getLength() { return this.arr.length; }\n    getContent() { return this.arr; }\n    isCountable() { return true; }\n    copy() { return new ContentJSON(this.arr); }\n    splice(offset) {\n        const right = new ContentJSON(this.arr.slice(offset));\n        this.arr = this.arr.slice(0, offset);\n        return right;\n    }\n    mergeWith(right) {\n        this.arr = this.arr.concat(right.arr);\n        return true;\n    }\n    integrate(transaction, item) { }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) {\n        const len = this.arr.length;\n        encoder.writeLen(len - offset);\n        for (let i = offset; i < len; i++) {\n            const c = this.arr[i];\n            encoder.writeString(c === undefined ? 'undefined' : JSON.stringify(c));\n        }\n    }\n    getRef() { return 2; }\n}\nexports.ContentJSON = ContentJSON;\nconst readContentJSON = decoder => {\n    const len = decoder.readLen();\n    const cs = [];\n    for (let i = 0; i < len; i++) {\n        const c = decoder.readString();\n        if (c === 'undefined') {\n            cs.push(undefined);\n        }\n        else {\n            cs.push(JSON.parse(c));\n        }\n    }\n    return new ContentJSON(cs);\n};\nexports.readContentJSON = readContentJSON;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentAny = exports.ContentAny = void 0;\nclass ContentAny {\n    constructor(array) {\n        this.array = array;\n    }\n    getLength() { return this.array.length; }\n    getContent() { return this.array; }\n    isCountable() { return true; }\n    copy() { return new ContentAny(this.array); }\n    splice(offset) {\n        const right = new ContentAny(this.array.slice(offset));\n        this.array = this.array.slice(0, offset);\n        return right;\n    }\n    mergeWith(right) {\n        this.array = this.array.concat(right.array);\n        return true;\n    }\n    integrate(transaction, item) { }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) {\n        const len = this.array.length;\n        encoder.writeLen(len - offset);\n        for (let i = offset; i < len; i++) {\n            const c = this.array[i];\n            encoder.writeAny(c);\n        }\n    }\n    getRef() { return 8; }\n}\nexports.ContentAny = ContentAny;\nconst readContentAny = decoder => {\n    const len = decoder.readLen();\n    const cs = [];\n    for (let i = 0; i < len; i++) {\n        cs.push(decoder.readAny());\n    }\n    return new ContentAny(cs);\n};\nexports.readContentAny = readContentAny;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentString = exports.ContentString = void 0;\nclass ContentString {\n    constructor(str) {\n        this.str = str;\n    }\n    getLength() { return this.str.length; }\n    getContent() { return this.str.split(''); }\n    isCountable() { return true; }\n    copy() { return new ContentString(this.str); }\n    splice(offset) {\n        const right = new ContentString(this.str.slice(offset));\n        this.str = this.str.slice(0, offset);\n        // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n        const firstCharCode = this.str.charCodeAt(offset - 1);\n        if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n            // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n            // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n            // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n            this.str = this.str.slice(0, offset - 1) + '�';\n            // replace right as well\n            right.str = '�' + right.str.slice(1);\n        }\n        return right;\n    }\n    mergeWith(right) {\n        this.str += right.str;\n        return true;\n    }\n    integrate(transaction, item) { }\n    delete(transaction) { }\n    gc(store) { }\n    write(encoder, offset) {\n        encoder.writeString(offset === 0 ? this.str : this.str.slice(offset));\n    }\n    getRef() { return 4; }\n}\nexports.ContentString = ContentString;\nconst readContentString = decoder => {\n    return new ContentString(decoder.readString());\n};\nexports.readContentString = readContentString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readContentType = exports.ContentType = exports.YXmlTextRefID = exports.YXmlHookRefID = exports.YXmlFragmentRefID = exports.YXmlElementRefID = exports.YTextRefID = exports.YMapRefID = exports.YArrayRefID = exports.typeRefs = void 0;\nconst internals_1 = require(\"../internals\");\nconst error = require(\"lib0/error\");\nexports.typeRefs = [\n    internals_1.readYArray,\n    internals_1.readYMap,\n    internals_1.readYText,\n    internals_1.readYXmlElement,\n    internals_1.readYXmlFragment,\n    internals_1.readYXmlHook,\n    internals_1.readYXmlText\n];\nexports.YArrayRefID = 0;\nexports.YMapRefID = 1;\nexports.YTextRefID = 2;\nexports.YXmlElementRefID = 3;\nexports.YXmlFragmentRefID = 4;\nexports.YXmlHookRefID = 5;\nexports.YXmlTextRefID = 6;\nclass ContentType {\n    constructor(type) {\n        this.type = type;\n    }\n    getLength() { return 1; }\n    getContent() { return [this.type]; }\n    isCountable() { return true; }\n    copy() { return new ContentType(this.type._copy()); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { return false; }\n    integrate(transaction, item) {\n        this.type._integrate(transaction.doc, item);\n    }\n    delete(transaction) {\n        let item = this.type._start;\n        while (item !== null) {\n            if (!item.deleted) {\n                item.delete(transaction);\n            }\n            else {\n                // This will be gc'd later and we want to merge it if possible\n                // We try to merge all deleted items after each transaction,\n                // but we have no knowledge about that this needs to be merged\n                // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n                transaction._mergeStructs.push(item);\n            }\n            item = item.right;\n        }\n        this.type._map.forEach(item => {\n            if (!item.deleted) {\n                item.delete(transaction);\n            }\n            else {\n                // same as above\n                transaction._mergeStructs.push(item);\n            }\n        });\n        transaction.changed.delete(this.type);\n    }\n    gc(store) {\n        let item = this.type._start;\n        while (item !== null) {\n            item.gc(store, true);\n            item = item.right;\n        }\n        this.type._start = null;\n        this.type._map.forEach((item) => {\n            while (item !== null) {\n                item.gc(store, true);\n                item = item.left;\n            }\n        });\n        this.type._map = new Map();\n    }\n    write(encoder, offset) {\n        this.type._write(encoder);\n    }\n    getRef() { return 7; }\n}\nexports.ContentType = ContentType;\nconst readContentType = decoder => {\n    return new ContentType(exports.typeRefs[decoder.readTypeRef()](decoder));\n};\nexports.readContentType = readContentType;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractContent = exports.contentRefs = exports.readItemContent = exports.Item = exports.redoItem = exports.splitItem = exports.keepItem = exports.followRedone = void 0;\nconst internals_1 = require(\"../internals\");\nconst error = require(\"lib0/error\");\nconst binary = require(\"lib0/binary\");\nconst followRedone = (store, id) => {\n    let nextID = id;\n    let diff = 0;\n    let item;\n    do {\n        if (diff > 0) {\n            nextID = (0, internals_1.createID)(nextID.client, nextID.clock + diff);\n        }\n        item = (0, internals_1.getItem)(store, nextID);\n        diff = nextID.clock - item.id.clock;\n        nextID = item.redone;\n    } while (nextID !== null && item instanceof Item);\n    return { item, diff };\n};\nexports.followRedone = followRedone;\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n */\nconst keepItem = (item, keep) => {\n    while (item !== null && item.keep !== keep) {\n        item.keep = keep;\n        item = item.parent._item;\n    }\n};\nexports.keepItem = keepItem;\n/**\n * Split leftItem into two items\n */\nconst splitItem = (transaction, leftItem, diff) => {\n    // create rightItem\n    const { client, clock } = leftItem.id;\n    const rightItem = new Item((0, internals_1.createID)(client, clock + diff), leftItem, (0, internals_1.createID)(client, clock + diff - 1), leftItem.right, leftItem.rightOrigin, leftItem.parent, leftItem.parentSub, leftItem.content.splice(diff));\n    if (leftItem.deleted) {\n        rightItem.markDeleted();\n    }\n    if (leftItem.keep) {\n        rightItem.keep = true;\n    }\n    if (leftItem.redone !== null) {\n        rightItem.redone = (0, internals_1.createID)(leftItem.redone.client, leftItem.redone.clock + diff);\n    }\n    // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n    leftItem.right = rightItem;\n    // update right\n    if (rightItem.right !== null) {\n        rightItem.right.left = rightItem;\n    }\n    // right is more specific.\n    transaction._mergeStructs.push(rightItem);\n    // update parent._map\n    if (rightItem.parentSub !== null && rightItem.right === null) {\n        rightItem.parent._map.set(rightItem.parentSub, rightItem);\n    }\n    leftItem.length = diff;\n    return rightItem;\n};\nexports.splitItem = splitItem;\n/**\n * Redoes the effect of this operation.\n */\nconst redoItem = (transaction, item, redoitems, itemsToDelete, ignoreRemoteMapChanges) => {\n    const doc = transaction.doc;\n    const store = doc.store;\n    const ownClientID = doc.clientID;\n    const redone = item.redone;\n    if (redone !== null) {\n        return (0, internals_1.getItemCleanStart)(transaction, redone);\n    }\n    let parentItem = item.parent._item;\n    /**\n     * @type {Item|null}\n     */\n    let left = null;\n    /**\n     * @type {Item|null}\n     */\n    let right;\n    // make sure that parent is redone\n    if (parentItem !== null && parentItem.deleted === true) {\n        // try to undo parent if it will be undone anyway\n        if (parentItem.redone === null && (!redoitems.has(parentItem) || (0, exports.redoItem)(transaction, parentItem, redoitems, itemsToDelete, ignoreRemoteMapChanges) === null)) {\n            return null;\n        }\n        while (parentItem.redone !== null) {\n            parentItem = (0, internals_1.getItemCleanStart)(transaction, parentItem.redone);\n        }\n    }\n    const parentType = parentItem === null ? item.parent : parentItem.content.type;\n    if (item.parentSub === null) {\n        // Is an array item. Insert at the old position\n        left = item.left;\n        right = item;\n        // find next cloned_redo items\n        while (left !== null) {\n            let leftTrace = left;\n            // trace redone until parent matches\n            while (leftTrace !== null && leftTrace.parent._item !== parentItem) {\n                leftTrace = leftTrace.redone === null ? null : (0, internals_1.getItemCleanStart)(transaction, leftTrace.redone);\n            }\n            if (leftTrace !== null && leftTrace.parent._item === parentItem) {\n                left = leftTrace;\n                break;\n            }\n            left = left.left;\n        }\n        while (right !== null) {\n            let rightTrace = right;\n            // trace redone until parent matches\n            while (rightTrace !== null && rightTrace.parent._item !== parentItem) {\n                rightTrace = rightTrace.redone === null ? null : (0, internals_1.getItemCleanStart)(transaction, rightTrace.redone);\n            }\n            if (rightTrace !== null && rightTrace.parent._item === parentItem) {\n                right = rightTrace;\n                break;\n            }\n            right = right.right;\n        }\n    }\n    else {\n        right = null;\n        if (item.right && !ignoreRemoteMapChanges) {\n            left = item;\n            // Iterate right while right is in itemsToDelete\n            // If it is intended to delete right while item is redone, we can expect that item should replace right.\n            while (left !== null && left.right !== null && (0, internals_1.isDeleted)(itemsToDelete, left.right.id)) {\n                left = left.right;\n            }\n            // follow redone\n            // trace redone until parent matches\n            while (left !== null && left.redone !== null) {\n                left = (0, internals_1.getItemCleanStart)(transaction, left.redone);\n            }\n            if (left && left.right !== null) {\n                // It is not possible to redo this item because it conflicts with a\n                // change from another client\n                return null;\n            }\n        }\n        else {\n            left = parentType._map.get(item.parentSub) || null;\n        }\n    }\n    const nextClock = (0, internals_1.getState)(store, ownClientID);\n    const nextId = (0, internals_1.createID)(ownClientID, nextClock);\n    const redoneItem = new Item(nextId, left, left && left.lastId, right, right && right.id, parentType, item.parentSub, item.content.copy());\n    item.redone = nextId;\n    (0, exports.keepItem)(redoneItem, true);\n    redoneItem.integrate(transaction, 0);\n    return redoneItem;\n};\nexports.redoItem = redoItem;\n/**\n * Abstract class that represents any content.\n */\nclass Item extends internals_1.AbstractStruct {\n    /**\n     * @param {ID} id\n     * @param {Item | null} left\n     * @param {ID | null} origin\n     * @param {Item | null} right\n     * @param {ID | null} rightOrigin\n     * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n     * @param {string | null} parentSub\n     * @param {AbstractContent} content\n     */\n    constructor(id, left, origin, right, rightOrigin, parent, parentSub, content) {\n        super(id, content.getLength());\n        this.origin = origin;\n        this.left = left;\n        this.right = right;\n        this.rightOrigin = rightOrigin;\n        this.parent = parent;\n        this.parentSub = parentSub;\n        this.redone = null;\n        this.content = content;\n        this.info = this.content.isCountable() ? binary.BIT2 : 0;\n    }\n    /**\n     * This is used to mark the item as an indexed fast-search marker\n     */\n    set marker(isMarked) {\n        if (((this.info & binary.BIT4) > 0) !== isMarked) {\n            this.info ^= binary.BIT4;\n        }\n    }\n    get marker() { return (this.info & binary.BIT4) > 0; }\n    /** If true, do not garbage collect this Item. */\n    get keep() { return (this.info & binary.BIT1) > 0; }\n    set keep(doKeep) { if (this.keep !== doKeep) {\n        this.info ^= binary.BIT1;\n    } }\n    get countable() { return (this.info & binary.BIT2) > 0; }\n    /** Whether this item was deleted or not. */\n    get deleted() {\n        return (this.info & binary.BIT3) > 0;\n    }\n    set deleted(doDelete) {\n        if (this.deleted !== doDelete) {\n            this.info ^= binary.BIT3;\n        }\n    }\n    markDeleted() { this.info |= binary.BIT3; }\n    /**\n     * Return the creator clientID of the missing op or define missing items and return null.\n     */\n    getMissing(transaction, store) {\n        if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= (0, internals_1.getState)(store, this.origin.client)) {\n            return this.origin.client;\n        }\n        if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= (0, internals_1.getState)(store, this.rightOrigin.client)) {\n            return this.rightOrigin.client;\n        }\n        if (this.parent && this.parent.constructor === internals_1.ID && this.id.client !== this.parent.client && this.parent.clock >= (0, internals_1.getState)(store, this.parent.client)) {\n            return this.parent.client;\n        }\n        // We have all missing ids, now find the items\n        if (this.origin) {\n            this.left = (0, internals_1.getItemCleanEnd)(transaction, store, this.origin);\n            this.origin = this.left.lastId;\n        }\n        if (this.rightOrigin) {\n            this.right = (0, internals_1.getItemCleanStart)(transaction, this.rightOrigin);\n            this.rightOrigin = this.right.id;\n        }\n        if ((this.left && this.left.constructor === internals_1.GC) || (this.right && this.right.constructor === internals_1.GC)) {\n            this.parent = null;\n        }\n        // only set parent if this shouldn't be garbage collected\n        if (!this.parent) {\n            if (this.left && this.left.constructor === Item) {\n                this.parent = this.left.parent;\n                this.parentSub = this.left.parentSub;\n            }\n            if (this.right && this.right.constructor === Item) {\n                this.parent = this.right.parent;\n                this.parentSub = this.right.parentSub;\n            }\n        }\n        else if (this.parent.constructor === internals_1.ID) {\n            const parentItem = (0, internals_1.getItem)(store, this.parent);\n            if (parentItem.constructor === internals_1.GC) {\n                this.parent = null;\n            }\n            else {\n                this.parent = parentItem.content.type;\n            }\n        }\n        return null;\n    }\n    integrate(transaction, offset) {\n        if (offset > 0) {\n            this.id.clock += offset;\n            this.left = (0, internals_1.getItemCleanEnd)(transaction, transaction.doc.store, (0, internals_1.createID)(this.id.client, this.id.clock - 1));\n            this.origin = this.left.lastId;\n            this.content = this.content.splice(offset);\n            this.length -= offset;\n        }\n        if (this.parent) {\n            if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n                let left = this.left;\n                let o;\n                // set o to the first conflicting item\n                if (left !== null) {\n                    o = left.right;\n                }\n                else if (this.parentSub !== null) {\n                    o = this.parent._map.get(this.parentSub) || null;\n                    while (o !== null && o.left !== null) {\n                        o = o.left;\n                    }\n                }\n                else {\n                    o = this.parent._start;\n                }\n                // TODO: use something like DeleteSet here (a tree implementation would be best)\n                // @todo use global set definitions\n                const conflictingItems = new Set();\n                const itemsBeforeOrigin = new Set();\n                // Let c in conflictingItems, b in itemsBeforeOrigin\n                // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n                // Note that conflictingItems is a subset of itemsBeforeOrigin\n                while (o !== null && o !== this.right) {\n                    itemsBeforeOrigin.add(o);\n                    conflictingItems.add(o);\n                    if ((0, internals_1.compareIDs)(this.origin, o.origin)) {\n                        // case 1\n                        if (o.id.client < this.id.client) {\n                            left = o;\n                            conflictingItems.clear();\n                        }\n                        else if ((0, internals_1.compareIDs)(this.rightOrigin, o.rightOrigin)) {\n                            // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n                            // Since this is to the left of o, we can break here\n                            break;\n                        } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n                    }\n                    else if (o.origin !== null && itemsBeforeOrigin.has((0, internals_1.getItem)(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n                        // case 2\n                        if (!conflictingItems.has((0, internals_1.getItem)(transaction.doc.store, o.origin))) {\n                            left = o;\n                            conflictingItems.clear();\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                    o = o.right;\n                }\n                this.left = left;\n            }\n            // reconnect left/right + update parent map/start if necessary\n            if (this.left !== null) {\n                const right = this.left.right;\n                this.right = right;\n                this.left.right = this;\n            }\n            else {\n                let r;\n                if (this.parentSub !== null) {\n                    r = this.parent._map.get(this.parentSub) || null;\n                    while (r !== null && r.left !== null) {\n                        r = r.left;\n                    }\n                }\n                else {\n                    r = this.parent._start;\n                    this.parent._start = this;\n                }\n                this.right = r;\n            }\n            if (this.right !== null) {\n                this.right.left = this;\n            }\n            else if (this.parentSub !== null) {\n                // set as current parent value if right === null and this is parentSub\n                this.parent._map.set(this.parentSub, this);\n                if (this.left !== null) {\n                    // this is the current attribute value of parent. delete right\n                    this.left.delete(transaction);\n                }\n            }\n            // adjust length of parent\n            if (this.parentSub === null && this.countable && !this.deleted) {\n                this.parent._length += this.length;\n            }\n            (0, internals_1.addStruct)(transaction.doc.store, this);\n            this.content.integrate(transaction, this);\n            // add parent to transaction.changed\n            (0, internals_1.addChangedTypeToTransaction)(transaction, this.parent, this.parentSub);\n            if ((this.parent._item !== null && this.parent._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n                // delete if parent is deleted or if this is not the current attribute value of parent\n                this.delete(transaction);\n            }\n        }\n        else {\n            // parent is not defined. Integrate GC struct instead\n            new internals_1.GC(this.id, this.length).integrate(transaction, 0);\n        }\n    }\n    /** Returns the next non-deleted item */\n    get next() {\n        let n = this.right;\n        while (n !== null && n.deleted) {\n            n = n.right;\n        }\n        return n;\n    }\n    /** Returns the previous non-deleted item */\n    get prev() {\n        let n = this.left;\n        while (n !== null && n.deleted) {\n            n = n.left;\n        }\n        return n;\n    }\n    /**\n     * Computes the last content address of this Item.\n     */\n    get lastId() {\n        // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n        return this.length === 1 ? this.id : (0, internals_1.createID)(this.id.client, this.id.clock + this.length - 1);\n    }\n    /** Try to merge two items */\n    mergeWith(right) {\n        if (this.constructor === right.constructor &&\n            (0, internals_1.compareIDs)(right.origin, this.lastId) &&\n            this.right === right &&\n            (0, internals_1.compareIDs)(this.rightOrigin, right.rightOrigin) &&\n            this.id.client === right.id.client &&\n            this.id.clock + this.length === right.id.clock &&\n            this.deleted === right.deleted &&\n            this.redone === null &&\n            right.redone === null &&\n            this.content.constructor === right.content.constructor &&\n            this.content.mergeWith(right.content)) {\n            const searchMarker = this.parent._searchMarker;\n            if (searchMarker) {\n                searchMarker.forEach(marker => {\n                    if (marker.p === right) {\n                        // right is going to be \"forgotten\" so we need to update the marker\n                        marker.p = this;\n                        // adjust marker index\n                        if (!this.deleted && this.countable) {\n                            marker.index -= this.length;\n                        }\n                    }\n                });\n            }\n            if (right.keep) {\n                this.keep = true;\n            }\n            this.right = right.right;\n            if (this.right !== null) {\n                this.right.left = this;\n            }\n            this.length += right.length;\n            return true;\n        }\n        return false;\n    }\n    /** Mark this Item as deleted. */\n    delete(transaction) {\n        if (!this.deleted) {\n            const parent = this.parent;\n            // adjust the length of parent\n            if (this.countable && this.parentSub === null) {\n                parent._length -= this.length;\n            }\n            this.markDeleted();\n            (0, internals_1.addToDeleteSet)(transaction.deleteSet, this.id.client, this.id.clock, this.length);\n            (0, internals_1.addChangedTypeToTransaction)(transaction, parent, this.parentSub);\n            this.content.delete(transaction);\n        }\n    }\n    gc(store, parentGCd) {\n        if (!this.deleted) {\n            throw error.unexpectedCase();\n        }\n        this.content.gc(store);\n        if (parentGCd) {\n            (0, internals_1.replaceStruct)(store, this, new internals_1.GC(this.id, this.length));\n        }\n        else {\n            this.content = new internals_1.ContentDeleted(this.length);\n        }\n    }\n    /**\n     * Transform the properties of this type to binary and write it to an\n     * BinaryEncoder.\n     *\n     * This is called when this Item is sent to a remote peer.\n     */\n    write(encoder, offset) {\n        const origin = offset > 0 ? (0, internals_1.createID)(this.id.client, this.id.clock + offset - 1) : this.origin;\n        const rightOrigin = this.rightOrigin;\n        const parentSub = this.parentSub;\n        const info = (this.content.getRef() & binary.BITS5) |\n            (origin === null ? 0 : binary.BIT8) | // origin is defined\n            (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n            (parentSub === null ? 0 : binary.BIT6); // parentSub is non-null\n        encoder.writeInfo(info);\n        if (origin !== null) {\n            encoder.writeLeftID(origin);\n        }\n        if (rightOrigin !== null) {\n            encoder.writeRightID(rightOrigin);\n        }\n        if (origin === null && rightOrigin === null) {\n            const parent = this.parent;\n            if (parent._item !== undefined) {\n                const parentItem = parent._item;\n                if (parentItem === null) {\n                    // parent type on y._map\n                    // find the correct key\n                    const ykey = (0, internals_1.findRootTypeKey)(parent);\n                    encoder.writeParentInfo(true); // write parentYKey\n                    encoder.writeString(ykey);\n                }\n                else {\n                    encoder.writeParentInfo(false); // write parent id\n                    encoder.writeLeftID(parentItem.id);\n                }\n            }\n            else if (parent.constructor === String) { // this edge case was added by differential updates\n                encoder.writeParentInfo(true); // write parentYKey\n                encoder.writeString(parent);\n            }\n            else if (parent.constructor === internals_1.ID) {\n                encoder.writeParentInfo(false); // write parent id\n                encoder.writeLeftID(parent);\n            }\n            else {\n                error.unexpectedCase();\n            }\n            if (parentSub !== null) {\n                encoder.writeString(parentSub);\n            }\n        }\n        this.content.write(encoder, offset);\n    }\n}\nexports.Item = Item;\nconst readItemContent = (decoder, info) => {\n    return exports.contentRefs[info & binary.BITS5](decoder);\n};\nexports.readItemContent = readItemContent;\n/**\n * A lookup map for reading Item content.\n */\nexports.contentRefs = [\n    () => { error.unexpectedCase(); },\n    internals_1.readContentDeleted,\n    internals_1.readContentJSON,\n    internals_1.readContentBinary,\n    internals_1.readContentString,\n    internals_1.readContentEmbed,\n    internals_1.readContentFormat,\n    internals_1.readContentType,\n    internals_1.readContentAny,\n    internals_1.readContentDoc,\n    () => { error.unexpectedCase(); } // 10 - Skip is not ItemContent\n];\n/**\n * Do not implement this class!\n */\nclass AbstractContent {\n    getLength() { throw error.methodUnimplemented(); }\n    getContent() { throw error.methodUnimplemented(); }\n    /**\n     * Should return false if this Item is some kind of meta information\n     * (e.g. format information).\n     *\n     * * Whether this Item should be addressable via `yarray.get(i)`\n     * * Whether this Item should be counted when computing yarray.length\n     */\n    isCountable() { throw error.methodUnimplemented(); }\n    copy() { throw error.methodUnimplemented(); }\n    splice(offset) { throw error.methodUnimplemented(); }\n    mergeWith(right) { throw error.methodUnimplemented(); }\n    integrate(transaction, item) { throw error.methodUnimplemented(); }\n    delete(transaction) { throw error.methodUnimplemented(); }\n    gc(store) { throw error.methodUnimplemented(); }\n    write(encoder, offset) { throw error.methodUnimplemented(); }\n    getRef() { throw error.methodUnimplemented(); }\n}\nexports.AbstractContent = AbstractContent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Skip = exports.structSkipRefNumber = void 0;\nconst error = require(\"lib0/error\");\nconst encoding = require(\"lib0/encoding\");\nexports.structSkipRefNumber = 10;\nclass Skip {\n    constructor(id, length) {\n        this.id = id;\n        this.length = length;\n    }\n    get deleted() { return true; }\n    delete() { }\n    mergeWith(right) {\n        if (this.constructor !== right.constructor) {\n            return false;\n        }\n        this.length += right.length;\n        return true;\n    }\n    integrate(transaction, offset) {\n        // skip structs cannot be integrated\n        error.unexpectedCase();\n    }\n    write(encoder, offset) {\n        encoder.writeInfo(exports.structSkipRefNumber);\n        // write as VarUint because Skips can't make use of predictable length-encoding\n        encoding.writeVarUint(encoder.restEncoder, this.length - offset);\n    }\n    getMissing(transaction, store) {\n        return null;\n    }\n}\nexports.Skip = Skip;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./utils/AbstractConnector.js\"), exports);\n__exportStar(require(\"./utils/DeleteSet.js\"), exports);\n__exportStar(require(\"./utils/Doc.js\"), exports);\n__exportStar(require(\"./utils/UpdateDecoder.js\"), exports);\n__exportStar(require(\"./utils/UpdateEncoder.js\"), exports);\n__exportStar(require(\"./utils/encoding.js\"), exports);\n__exportStar(require(\"./utils/EventHandler.js\"), exports);\n__exportStar(require(\"./utils/ID.js\"), exports);\n__exportStar(require(\"./utils/isParentOf.js\"), exports);\n__exportStar(require(\"./utils/logging.js\"), exports);\n__exportStar(require(\"./utils/PermanentUserData.js\"), exports);\n__exportStar(require(\"./utils/RelativePosition.js\"), exports);\n__exportStar(require(\"./utils/Snapshot.js\"), exports);\n__exportStar(require(\"./utils/StructStore.js\"), exports);\n__exportStar(require(\"./utils/Transaction.js\"), exports);\n__exportStar(require(\"./utils/UndoManager.js\"), exports);\n__exportStar(require(\"./utils/updates.js\"), exports);\n__exportStar(require(\"./utils/YEvent.js\"), exports);\n__exportStar(require(\"./types/AbstractType.js\"), exports);\n__exportStar(require(\"./types/YArray.js\"), exports);\n__exportStar(require(\"./types/YMap.js\"), exports);\n__exportStar(require(\"./types/YText.js\"), exports);\n__exportStar(require(\"./types/YXmlFragment.js\"), exports);\n__exportStar(require(\"./types/YXmlElement.js\"), exports);\n__exportStar(require(\"./types/YXmlEvent.js\"), exports);\n__exportStar(require(\"./types/YXmlHook.js\"), exports);\n__exportStar(require(\"./types/YXmlText.js\"), exports);\n__exportStar(require(\"./structs/AbstractStruct.js\"), exports);\n__exportStar(require(\"./structs/GC.js\"), exports);\n__exportStar(require(\"./structs/ContentBinary.js\"), exports);\n__exportStar(require(\"./structs/ContentDeleted.js\"), exports);\n__exportStar(require(\"./structs/ContentDoc.js\"), exports);\n__exportStar(require(\"./structs/ContentEmbed.js\"), exports);\n__exportStar(require(\"./structs/ContentFormat.js\"), exports);\n__exportStar(require(\"./structs/ContentJSON.js\"), exports);\n__exportStar(require(\"./structs/ContentAny.js\"), exports);\n__exportStar(require(\"./structs/ContentString.js\"), exports);\n__exportStar(require(\"./structs/ContentType.js\"), exports);\n__exportStar(require(\"./structs/Item.js\"), exports);\n__exportStar(require(\"./structs/Skip.js\"), exports);\n// ======================================================================================== //\n__exportStar(require(\"./types/AbstractType_\"), exports);\n__exportStar(require(\"./structs/AbstractContent_\"), exports);\n__exportStar(require(\"./structs/AbstractStruct_\"), exports);\n","\"use strict\";\n/** eslint-env browser */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDocFromSnapshot = exports.typeMapGetSnapshot = exports.typeListToArraySnapshot = exports.getItem = exports.findIndexSS = exports.findRootTypeKey = exports.emptySnapshot = exports.snapshot = exports.cleanupYTextFormatting = exports.createDeleteSetFromStructStore = exports.createDeleteSet = exports.createSnapshot = exports.Snapshot = exports.getState = exports.compareIDs = exports.createID = exports.ID = exports.RelativePosition = exports.AbsolutePosition = exports.compareRelativePositions = exports.createAbsolutePositionFromRelativePosition = exports.createRelativePositionFromJSON = exports.createRelativePositionFromTypeIndex = exports.getTypeChildren = exports.AbstractType = exports.ContentType = exports.ContentString = exports.ContentAny = exports.ContentJSON = exports.ContentFormat = exports.ContentEmbed = exports.ContentDeleted = exports.ContentBinary = exports.GC = exports.AbstractStruct = exports.Item = exports.YEvent = exports.YTextEvent = exports.YArrayEvent = exports.YMapEvent = exports.YXmlEvent = exports.XmlFragment = exports.XmlElement = exports.XmlHook = exports.XmlText = exports.Text = exports.Map = exports.Array = exports.Transaction = exports.Doc = void 0;\nexports.UpdateEncoderV1 = exports.convertUpdateFormatV2ToV1 = exports.convertUpdateFormatV1ToV2 = exports.diffUpdateV2 = exports.diffUpdate = exports.decodeRelativePosition = exports.encodeRelativePosition = exports.encodeStateVectorFromUpdateV2 = exports.encodeStateVectorFromUpdate = exports.parseUpdateMetaV2 = exports.parseUpdateMeta = exports.mergeUpdatesV2 = exports.mergeUpdates = exports.logType = exports.AbstractConnector = exports.transact = exports.tryGc = exports.PermanentUserData = exports.equalSnapshots = exports.isParentOf = exports.isDeleted = exports.relativePositionToJSON = exports.decodeUpdateV2 = exports.decodeUpdate = exports.logUpdateV2 = exports.logUpdate = exports.decodeStateVector = exports.encodeSnapshotV2 = exports.decodeSnapshotV2 = exports.encodeSnapshot = exports.decodeSnapshot = exports.UndoManager = exports.encodeStateVector = exports.encodeStateAsUpdateV2 = exports.encodeStateAsUpdate = exports.readUpdateV2 = exports.readUpdate = exports.applyUpdateV2 = exports.applyUpdate = exports.iterateDeletedStructs = void 0;\nvar internals_js_1 = require(\"./internals.js\");\nObject.defineProperty(exports, \"Doc\", { enumerable: true, get: function () { return internals_js_1.Doc; } });\nObject.defineProperty(exports, \"Transaction\", { enumerable: true, get: function () { return internals_js_1.Transaction; } });\nObject.defineProperty(exports, \"Array\", { enumerable: true, get: function () { return internals_js_1.YArray; } });\nObject.defineProperty(exports, \"Map\", { enumerable: true, get: function () { return internals_js_1.YMap; } });\nObject.defineProperty(exports, \"Text\", { enumerable: true, get: function () { return internals_js_1.YText; } });\nObject.defineProperty(exports, \"XmlText\", { enumerable: true, get: function () { return internals_js_1.YXmlText; } });\nObject.defineProperty(exports, \"XmlHook\", { enumerable: true, get: function () { return internals_js_1.YXmlHook; } });\nObject.defineProperty(exports, \"XmlElement\", { enumerable: true, get: function () { return internals_js_1.YXmlElement; } });\nObject.defineProperty(exports, \"XmlFragment\", { enumerable: true, get: function () { return internals_js_1.YXmlFragment; } });\nObject.defineProperty(exports, \"YXmlEvent\", { enumerable: true, get: function () { return internals_js_1.YXmlEvent; } });\nObject.defineProperty(exports, \"YMapEvent\", { enumerable: true, get: function () { return internals_js_1.YMapEvent; } });\nObject.defineProperty(exports, \"YArrayEvent\", { enumerable: true, get: function () { return internals_js_1.YArrayEvent; } });\nObject.defineProperty(exports, \"YTextEvent\", { enumerable: true, get: function () { return internals_js_1.YTextEvent; } });\nObject.defineProperty(exports, \"YEvent\", { enumerable: true, get: function () { return internals_js_1.YEvent; } });\nObject.defineProperty(exports, \"Item\", { enumerable: true, get: function () { return internals_js_1.Item; } });\nObject.defineProperty(exports, \"AbstractStruct\", { enumerable: true, get: function () { return internals_js_1.AbstractStruct; } });\nObject.defineProperty(exports, \"GC\", { enumerable: true, get: function () { return internals_js_1.GC; } });\nObject.defineProperty(exports, \"ContentBinary\", { enumerable: true, get: function () { return internals_js_1.ContentBinary; } });\nObject.defineProperty(exports, \"ContentDeleted\", { enumerable: true, get: function () { return internals_js_1.ContentDeleted; } });\nObject.defineProperty(exports, \"ContentEmbed\", { enumerable: true, get: function () { return internals_js_1.ContentEmbed; } });\nObject.defineProperty(exports, \"ContentFormat\", { enumerable: true, get: function () { return internals_js_1.ContentFormat; } });\nObject.defineProperty(exports, \"ContentJSON\", { enumerable: true, get: function () { return internals_js_1.ContentJSON; } });\nObject.defineProperty(exports, \"ContentAny\", { enumerable: true, get: function () { return internals_js_1.ContentAny; } });\nObject.defineProperty(exports, \"ContentString\", { enumerable: true, get: function () { return internals_js_1.ContentString; } });\nObject.defineProperty(exports, \"ContentType\", { enumerable: true, get: function () { return internals_js_1.ContentType; } });\nObject.defineProperty(exports, \"AbstractType\", { enumerable: true, get: function () { return internals_js_1.AbstractType; } });\nObject.defineProperty(exports, \"getTypeChildren\", { enumerable: true, get: function () { return internals_js_1.getTypeChildren; } });\nObject.defineProperty(exports, \"createRelativePositionFromTypeIndex\", { enumerable: true, get: function () { return internals_js_1.createRelativePositionFromTypeIndex; } });\nObject.defineProperty(exports, \"createRelativePositionFromJSON\", { enumerable: true, get: function () { return internals_js_1.createRelativePositionFromJSON; } });\nObject.defineProperty(exports, \"createAbsolutePositionFromRelativePosition\", { enumerable: true, get: function () { return internals_js_1.createAbsolutePositionFromRelativePosition; } });\nObject.defineProperty(exports, \"compareRelativePositions\", { enumerable: true, get: function () { return internals_js_1.compareRelativePositions; } });\nObject.defineProperty(exports, \"AbsolutePosition\", { enumerable: true, get: function () { return internals_js_1.AbsolutePosition; } });\nObject.defineProperty(exports, \"RelativePosition\", { enumerable: true, get: function () { return internals_js_1.RelativePosition; } });\nObject.defineProperty(exports, \"ID\", { enumerable: true, get: function () { return internals_js_1.ID; } });\nObject.defineProperty(exports, \"createID\", { enumerable: true, get: function () { return internals_js_1.createID; } });\nObject.defineProperty(exports, \"compareIDs\", { enumerable: true, get: function () { return internals_js_1.compareIDs; } });\nObject.defineProperty(exports, \"getState\", { enumerable: true, get: function () { return internals_js_1.getState; } });\nObject.defineProperty(exports, \"Snapshot\", { enumerable: true, get: function () { return internals_js_1.Snapshot; } });\nObject.defineProperty(exports, \"createSnapshot\", { enumerable: true, get: function () { return internals_js_1.createSnapshot; } });\nObject.defineProperty(exports, \"createDeleteSet\", { enumerable: true, get: function () { return internals_js_1.createDeleteSet; } });\nObject.defineProperty(exports, \"createDeleteSetFromStructStore\", { enumerable: true, get: function () { return internals_js_1.createDeleteSetFromStructStore; } });\nObject.defineProperty(exports, \"cleanupYTextFormatting\", { enumerable: true, get: function () { return internals_js_1.cleanupYTextFormatting; } });\nObject.defineProperty(exports, \"snapshot\", { enumerable: true, get: function () { return internals_js_1.snapshot; } });\nObject.defineProperty(exports, \"emptySnapshot\", { enumerable: true, get: function () { return internals_js_1.emptySnapshot; } });\nObject.defineProperty(exports, \"findRootTypeKey\", { enumerable: true, get: function () { return internals_js_1.findRootTypeKey; } });\nObject.defineProperty(exports, \"findIndexSS\", { enumerable: true, get: function () { return internals_js_1.findIndexSS; } });\nObject.defineProperty(exports, \"getItem\", { enumerable: true, get: function () { return internals_js_1.getItem; } });\nObject.defineProperty(exports, \"typeListToArraySnapshot\", { enumerable: true, get: function () { return internals_js_1.typeListToArraySnapshot; } });\nObject.defineProperty(exports, \"typeMapGetSnapshot\", { enumerable: true, get: function () { return internals_js_1.typeMapGetSnapshot; } });\nObject.defineProperty(exports, \"createDocFromSnapshot\", { enumerable: true, get: function () { return internals_js_1.createDocFromSnapshot; } });\nObject.defineProperty(exports, \"iterateDeletedStructs\", { enumerable: true, get: function () { return internals_js_1.iterateDeletedStructs; } });\nObject.defineProperty(exports, \"applyUpdate\", { enumerable: true, get: function () { return internals_js_1.applyUpdate; } });\nObject.defineProperty(exports, \"applyUpdateV2\", { enumerable: true, get: function () { return internals_js_1.applyUpdateV2; } });\nObject.defineProperty(exports, \"readUpdate\", { enumerable: true, get: function () { return internals_js_1.readUpdate; } });\nObject.defineProperty(exports, \"readUpdateV2\", { enumerable: true, get: function () { return internals_js_1.readUpdateV2; } });\nObject.defineProperty(exports, \"encodeStateAsUpdate\", { enumerable: true, get: function () { return internals_js_1.encodeStateAsUpdate; } });\nObject.defineProperty(exports, \"encodeStateAsUpdateV2\", { enumerable: true, get: function () { return internals_js_1.encodeStateAsUpdateV2; } });\nObject.defineProperty(exports, \"encodeStateVector\", { enumerable: true, get: function () { return internals_js_1.encodeStateVector; } });\nObject.defineProperty(exports, \"UndoManager\", { enumerable: true, get: function () { return internals_js_1.UndoManager; } });\nObject.defineProperty(exports, \"decodeSnapshot\", { enumerable: true, get: function () { return internals_js_1.decodeSnapshot; } });\nObject.defineProperty(exports, \"encodeSnapshot\", { enumerable: true, get: function () { return internals_js_1.encodeSnapshot; } });\nObject.defineProperty(exports, \"decodeSnapshotV2\", { enumerable: true, get: function () { return internals_js_1.decodeSnapshotV2; } });\nObject.defineProperty(exports, \"encodeSnapshotV2\", { enumerable: true, get: function () { return internals_js_1.encodeSnapshotV2; } });\nObject.defineProperty(exports, \"decodeStateVector\", { enumerable: true, get: function () { return internals_js_1.decodeStateVector; } });\nObject.defineProperty(exports, \"logUpdate\", { enumerable: true, get: function () { return internals_js_1.logUpdate; } });\nObject.defineProperty(exports, \"logUpdateV2\", { enumerable: true, get: function () { return internals_js_1.logUpdateV2; } });\nObject.defineProperty(exports, \"decodeUpdate\", { enumerable: true, get: function () { return internals_js_1.decodeUpdate; } });\nObject.defineProperty(exports, \"decodeUpdateV2\", { enumerable: true, get: function () { return internals_js_1.decodeUpdateV2; } });\nObject.defineProperty(exports, \"relativePositionToJSON\", { enumerable: true, get: function () { return internals_js_1.relativePositionToJSON; } });\nObject.defineProperty(exports, \"isDeleted\", { enumerable: true, get: function () { return internals_js_1.isDeleted; } });\nObject.defineProperty(exports, \"isParentOf\", { enumerable: true, get: function () { return internals_js_1.isParentOf; } });\nObject.defineProperty(exports, \"equalSnapshots\", { enumerable: true, get: function () { return internals_js_1.equalSnapshots; } });\nObject.defineProperty(exports, \"PermanentUserData\", { enumerable: true, get: function () { return internals_js_1.PermanentUserData; } });\nObject.defineProperty(exports, \"tryGc\", { enumerable: true, get: function () { return internals_js_1.tryGc; } });\nObject.defineProperty(exports, \"transact\", { enumerable: true, get: function () { return internals_js_1.transact; } });\nObject.defineProperty(exports, \"AbstractConnector\", { enumerable: true, get: function () { return internals_js_1.AbstractConnector; } });\nObject.defineProperty(exports, \"logType\", { enumerable: true, get: function () { return internals_js_1.logType; } });\nObject.defineProperty(exports, \"mergeUpdates\", { enumerable: true, get: function () { return internals_js_1.mergeUpdates; } });\nObject.defineProperty(exports, \"mergeUpdatesV2\", { enumerable: true, get: function () { return internals_js_1.mergeUpdatesV2; } });\nObject.defineProperty(exports, \"parseUpdateMeta\", { enumerable: true, get: function () { return internals_js_1.parseUpdateMeta; } });\nObject.defineProperty(exports, \"parseUpdateMetaV2\", { enumerable: true, get: function () { return internals_js_1.parseUpdateMetaV2; } });\nObject.defineProperty(exports, \"encodeStateVectorFromUpdate\", { enumerable: true, get: function () { return internals_js_1.encodeStateVectorFromUpdate; } });\nObject.defineProperty(exports, \"encodeStateVectorFromUpdateV2\", { enumerable: true, get: function () { return internals_js_1.encodeStateVectorFromUpdateV2; } });\nObject.defineProperty(exports, \"encodeRelativePosition\", { enumerable: true, get: function () { return internals_js_1.encodeRelativePosition; } });\nObject.defineProperty(exports, \"decodeRelativePosition\", { enumerable: true, get: function () { return internals_js_1.decodeRelativePosition; } });\nObject.defineProperty(exports, \"diffUpdate\", { enumerable: true, get: function () { return internals_js_1.diffUpdate; } });\nObject.defineProperty(exports, \"diffUpdateV2\", { enumerable: true, get: function () { return internals_js_1.diffUpdateV2; } });\nObject.defineProperty(exports, \"convertUpdateFormatV1ToV2\", { enumerable: true, get: function () { return internals_js_1.convertUpdateFormatV1ToV2; } });\nObject.defineProperty(exports, \"convertUpdateFormatV2ToV1\", { enumerable: true, get: function () { return internals_js_1.convertUpdateFormatV2ToV1; } });\nObject.defineProperty(exports, \"UpdateEncoderV1\", { enumerable: true, get: function () { return internals_js_1.UpdateEncoderV1; } });\nconst glo = /** @type {any} */ (typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        // @ts-ignore\n        : typeof global !== 'undefined' ? global : {});\nconst importIdentifier = '__ $YJS$ __';\nif (glo[importIdentifier] === true) {\n    /**\n     * Dear reader of this message. Please take this seriously.\n     *\n     * If you see this message, make sure that you only import one version of Yjs. In many cases,\n     * your package manager installs two versions of Yjs that are used by different packages within your project.\n     * Another reason for this message is that some parts of your project use the commonjs version of Yjs\n     * and others use the EcmaScript version of Yjs.\n     *\n     * This often leads to issues that are hard to debug. We often need to perform constructor checks,\n     * e.g. `struct instanceof GC`. If you imported different versions of Yjs, it is impossible for us to\n     * do the constructor checks anymore - which might break the CRDT algorithm.\n     *\n     * https://github.com/yjs/yjs/issues/438\n     */\n    console.error('Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438');\n}\nglo[importIdentifier] = true;\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs-typescript' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","\nimport * as Y from 'yjs-typescript'\nimport * as t from 'lib0/testing'\nimport * as awareness from './awareness'\n\n/**\n * @param {t.TestCase} tc\n */\nexport const testAwareness = tc => {\n  const doc1 = new Y.Doc()\n  doc1.clientID = 0\n  const doc2 = new Y.Doc()\n  doc2.clientID = 1\n  const aw1 = new awareness.Awareness(doc1)\n  const aw2 = new awareness.Awareness(doc2)\n  aw1.on('update', /** @param {any} p */ ({ added, updated, removed }) => {\n    const enc = awareness.encodeAwarenessUpdate(aw1, added.concat(updated).concat(removed))\n    awareness.applyAwarenessUpdate(aw2, enc, 'custom')\n  })\n  let lastChangeLocal = /** @type {any} */ (null)\n  aw1.on('change', /** @param {any} change */ change => {\n    lastChangeLocal = change\n  })\n  let lastChange = /** @type {any} */ (null)\n  aw2.on('change', /** @param {any} change */ change => {\n    lastChange = change\n  })\n  aw1.setLocalState({ x: 3 })\n  t.compare(aw2.getStates().get(0), { x: 3 })\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 1)\n  t.compare(lastChange.added, [0])\n  // When creating an Awareness instance, the the local client is already marked as available, so it is not updated.\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] })\n\n  // update state\n  lastChange = null\n  lastChangeLocal = null\n  aw1.setLocalState({ x: 4 })\n  t.compare(aw2.getStates().get(0), { x: 4 })\n  t.compare(lastChangeLocal, { added: [], updated: [0], removed: [] })\n  t.compare(lastChangeLocal, lastChange)\n\n  lastChange = null\n  lastChangeLocal = null\n  aw1.setLocalState({ x: 4 })\n  t.assert(lastChange === null)\n  t.assert(/** @type {any} */ (aw2.meta.get(0)).clock === 3)\n  t.compare(lastChangeLocal, lastChange)\n  aw1.setLocalState(null)\n  t.assert(lastChange.removed.length === 1)\n  t.compare(aw1.getStates().get(0), undefined)\n  t.compare(lastChangeLocal, lastChange)\n}\n","import { runTests } from 'lib0/testing'\nimport * as log from 'lib0/logging'\nimport * as awareness from './awareness.test.js'\n\nimport { isBrowser, isNode } from 'lib0/environment'\n\n/* istanbul ignore if */\nif (isBrowser) {\n  log.createVConsole(document.body)\n}\n\nrunTests({\n  awareness\n}).then(success => {\n  /* istanbul ignore next */\n  if (isNode) {\n    process.exit(success ? 0 : 1)\n  }\n})\n"],"names":["create","copy","map","all","from","every","some","equalFlat","set.from","set.create","forEach","length","array.equalFlat","object.equalFlat","object.length","object.hasProperty","map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","pair.forEach","map.map","math.log10","math.round","math.exp10","metric.prefix","math.floor","symbol.create","pair.create","dom.mapToStyleString","env.supportsColor","env.isNode","env.isBrowser","dom.element","dom.text","json.stringify","eventloop.enqueue","dom.append","dom.addEventListener","time.getUnixTime","env.getVariable","func.nop","binary.BITS21","binary.BITS32","buffer.createUint8ArrayViewFromArrayBuffer","math.max","set","binary.BITS8","binary.BITS7","binary.BIT8","math.isNegativeZero","binary.BITS6","binary.BIT7","string.utf8TextEncoder","string.encodeUtf8","math.min","number.isInteger","math.abs","binary.BITS31","error.create","number.MAX_SAFE_INTEGER","string.utf8TextDecoder","string.fromCharCode","encoding.createEncoder","encoding.writeAny","encoding.toUint8Array","decoding.readAny","decoding.createDecoder","math.ceil","math.add","env.hasConf","env.hasParam","env.getParam","random.uint32","prng.create","log.GREY","log.PURPLE","log.BLUE","log.groupCollapsed","log.group","promise.isPromise","log.printError","log.groupEnd","time.humanizeDuration","array.last","statistics.median","statistics.average","log.print","log.BOLD","log.UNBOLD","log.RED","log.UNCOLOR","log.GREEN","object.forEach","object.map","log.printImgBase64","map.setIfUndefined","array.from","internals_1","f","AbstractType_js_1","this","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","global","f.equalityDeep","encoding.writeVarUint","encoding.writeVarString","decoding.readVarUint","decoding.readVarString","Y.Doc","awareness.Awareness","awareness.encodeAwarenessUpdate","awareness.applyAwarenessUpdate","t.compare","t.assert","log.createVConsole"],"mappings":"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AAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAKA,MAAa,GAAG,CAAC,CAAC,CAAC;EAClE,KAAK;EACL,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;AACA;EACA;AACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;AACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EC9GA;EACA;EACA;EACA;EACA;AAIA;EACO,MAAM,gBAAgB,GAAG,MAAM,CAAC,iBAAgB;AAQvD;EACA;EACA;EACA;AACA;EACA;EACO,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,KAAK,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAIjB,KAAU,CAAC,GAAG,CAAC,KAAK,GAAG;;ECvBxH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAOA;EACA;EACA;EACA;EACO,MAAM,OAAO,CAAC;EACrB,EAAE,WAAW,CAAC,GAAG;EACjB,IAAI,IAAI,CAAC,IAAI,GAAG,EAAC;EACjB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;EACnC;EACA;EACA;EACA,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;EAClB,GAAG;EACH,CAAC;AACD;EACA;EACA;EACA;EACA;EACO,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,GAAE;AAChD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACO,MAAM,MAAM,GAAG,OAAO,IAAI;EACjC,EAAE,IAAI,GAAG,GAAG,OAAO,CAAC,KAAI;EACxB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;EAChD,IAA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"}